/**
 * @file thingProperties.h
 * @author Arduino IoT Cloud Generator & [Nick Dimitrakarakos / 83899] (for review/comments)
 * @brief Αυτό το αρχείο παράγεται αυτόματα από το Arduino IoT Cloud.
 * Ορίζει τις Cloud Variables που συγχρονίζονται μεταξύ της συσκευής Arduino
 * και του Arduino IoT Cloud, καθώς και τις ρυθμίσεις σύνδεσης δικτύου.
 *
 * @warning **ΜΗΝ ΕΠΕΞΕΡΓΑΣΤΕΙΤΕ ΑΠΕΥΘΕΙΑΣ ΑΥΤΟ ΤΟ ΑΡΧΕΙΟ ΕΚΤΟΣ ΑΝ ΓΝΩΡΙΖΕΤΕ ΤΙ ΚΑΝΕΤΕ.**
 * Οι αλλαγές ενδέχεται να αντικατασταθούν από το Arduino IoT Cloud.
 * Είναι προτιμότερο να διαχειρίζεστε τις ιδιότητες (properties) μέσω του web interface του Arduino IoT Cloud.
 *
 * @version Auto-Generated (plus manual comments v1.0)
 * @date 2025-05-14 (Date of comment addition)
 *
 * @copyright Copyright (c) Arduino
 */

// Code generated by Arduino IoT Cloud, DO NOT EDIT. (Original comment from generator)
#ifndef THINGPROPERTIES_H
#define THINGPROPERTIES_H

// Συμπερίληψη του αρχείου arduino_secrets.h.
// Αυτό το αρχείο περιέχει ευαίσθητες πληροφορίες όπως τα διαπιστευτήρια Wi-Fi (SSID και κωδικός πρόσβασης).
// Οι σταθερές SECRET_SSID & SECRET_OPTIONAL_PASS ορίζονται εκεί.
// Το αρχείο αυτό συνήθως δεν ανεβαίνει σε δημόσια repositories (π.χ., προστίθεται στο .gitignore).
#include "arduino_secrets.h"
// Βασική βιβλιοθήκη για τη λειτουργία του Arduino IoT Cloud.
#include <ArduinoIoTCloud.h>
// Βιβλιοθήκη για τη διαχείριση των συνδέσεων δικτύου (π.χ., Wi-Fi) για το IoT Cloud.
#include <Arduino_ConnectionHandler.h>

// --- Διαπιστευτήρια Σύνδεσης Δικτύου ---
// Ορισμός των σταθερών SSID και PASS για τη σύνδεση Wi-Fi.
// Οι τιμές τους λαμβάνονται από τις αντίστοιχες SECRET_SSID και SECRET_OPTIONAL_PASS
// που ορίζονται στο αρχείο 'arduino_secrets.h'.
const char SSID[] = SECRET_SSID;         // Το όνομα του δικτύου Wi-Fi (Service Set Identifier).
const char PASS[] = SECRET_OPTIONAL_PASS; // Ο κωδικός πρόσβασης για το δίκτυο Wi-Fi.

// --- Δήλωση των Cloud Variables ---
// Αυτές είναι οι μεταβλητές που θα συγχρονίζονται με το Arduino IoT Cloud.
// Οι τύποι τους (CloudString, CloudInt, κ.λπ.) παρέχονται από τη βιβλιοθήκη ArduinoIoTCloud.

// Γενικές μεταβλητές που περιγράφουν το τελευταίο καταγεγραμμένο χτύπημα.
CloudString deviceThatGotHit;        // Αναγνωριστικό της συσκευής/πυγμάχου που δέχτηκε το χτύπημα (π.χ., "RedBoxer", "BlueBoxer").
CloudString boxerThatScoresThePoint; // Αναγνωριστικό του πυγμάχου που πέτυχε το χτύπημα.
CloudInt    punchScore;              // Το σκορ ή η ισχύς του συγκεκριμένου χτυπήματος.
CloudString timeStampOfThePunch;     // Η χρονοσφραγίδα (σε μορφή String) του πότε συνέβη το χτύπημα.
CloudInt    sensorValue;             // Η ακατέργαστη ή επεξεργασμένη τιμή από τον αισθητήρα που κατέγραψε το χτύπημα.

// Μεταβλητές που αφορούν συγκεκριμένα τον Μπλε Πυγμάχο (Blue Boxer).
CloudInt    blueBoxer_punchCount;    // Ο συνολικός αριθμός επιτυχημένων χτυπημάτων από τον Μπλε Πυγμάχο.
CloudString blueBoxer_timestamp;     // Η χρονοσφραγίδα του τελευταίου χτυπήματος του Μπλε Πυγμάχου.
CloudInt    blueBoxer_sensorValue;   // Η τιμή του αισθητήρα από το τελευταίο χτύπημα του Μπλε Πυγμάχου.

// Μεταβλητές που αφορούν συγκεκριμένα τον Κόκκινο Πυγμάχο (Red Boxer).
CloudInt    redBoxer_punchCount;     // Ο συνολικός αριθμός επιτυχημένων χτυπημάτων από τον Κόκκινο Πυγμάχο.
CloudString redBoxer_timestamp;      // Η χρονοσφραγίδα του τελευταίου χτυπήματος του Κόκκινου Πυγμάχου.
CloudInt    redBoxer_sensorValue;    // Η τιμή του αισθητήρα από το τελευταίο χτύπημα του Κόκκινου Πυγμάχου.


/**
 * @brief Αρχικοποιεί τις ιδιότητες (Cloud Variables) και τις συνδέει με το Arduino IoT Cloud.
 *
 * Αυτή η συνάρτηση καλείται μία φορά μέσα στο `setup()` του κύριου σκίτσου Arduino.
 * Για κάθε Cloud Variable, ορίζεται:
 * - Η ίδια η μεταβλητή.
 * - Τα δικαιώματα πρόσβασης (permission):
 * - `READWRITE`: Η μεταβλητή μπορεί να διαβαστεί και να γραφτεί τόσο από τη συσκευή όσο και από το Cloud dashboard.
 * - `READONLY`: Η μεταβλητή μπορεί μόνο να γραφτεί από τη συσκευή και να διαβαστεί από το Cloud.
 * - Η πολιτική ενημέρωσης (update policy):
 * - `ON_CHANGE`: Η τιμή συγχρονίζεται με το Cloud μόνο όταν αλλάξει.
 * - `PERIODIC`: Η τιμή συγχρονίζεται περιοδικά, ανεξάρτητα από το αν έχει αλλάξει (π.χ., κάθε Χ δευτερόλεπτα).
 * - Μια προαιρετική συνάρτηση callback που θα εκτελεστεί όταν η τιμή της μεταβλητής αλλάζει από το Cloud.
 * Εδώ, το `NULL` υποδεικνύει ότι δεν έχει οριστεί κάποια συγκεκριμένη callback συνάρτηση για αυτές τις μεταβλητές
 * σε αυτό το επίπεδο (αν και μπορεί να οριστεί στο κύριο σκίτσο ή μέσω του Cloud interface).
 */
void initProperties() {
  // Προσθήκη κάθε Cloud Variable στο σύστημα διαχείρισης του ArduinoIoTCloud.
  // Όλες οι παρακάτω μεταβλητές ορίζονται ως READWRITE και ενημερώνονται ON_CHANGE,
  // χωρίς συγκεκριμένη callback συνάρτηση κατά την προσθήκη τους εδώ.

  // Γενικές μεταβλητές χτυπήματος
  ArduinoCloud.addProperty(boxerThatScoresThePoint, READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(deviceThatGotHit,        READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(punchScore,              READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(timeStampOfThePunch,     READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(sensorValue,             READWRITE, ON_CHANGE, NULL);

  // Μεταβλητές Μπλε Πυγμάχου
  ArduinoCloud.addProperty(blueBoxer_punchCount,    READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(blueBoxer_timestamp,     READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(blueBoxer_sensorValue,   READWRITE, ON_CHANGE, NULL);

  // Μεταβλητές Κόκκινου Πυγμάχου
  ArduinoCloud.addProperty(redBoxer_punchCount,     READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(redBoxer_timestamp,      READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(redBoxer_sensorValue,    READWRITE, ON_CHANGE, NULL);
}

// --- Διαχείριση Σύνδεσης Δικτύου ---
// Δημιουργία ενός αντικειμένου Connection Handler.
// Το `WiFiConnectionHandler` είναι μια κλάση που παρέχεται από τη βιβλιοθήκη `Arduino_ConnectionHandler`.
// Διαχειρίζεται τη διαδικασία σύνδεσης στο δίκτυο Wi-Fi χρησιμοποιώντας τα παρεχόμενα SSID και PASS.
// Το `ArduinoIoTPreferredConnection` είναι το όνομα του αντικειμένου που θα χρησιμοποιηθεί
// από το `ArduinoCloud.begin()` για την εγκαθίδρυση της σύνδεσης.
WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);

#endif // THINGPROPERTIES_H
