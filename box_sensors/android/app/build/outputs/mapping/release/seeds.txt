io.sentry.hints.Flushable
io.sentry.protocol.Message
io.sentry.android.core.AndroidLogger$1
io.sentry.android.replay.video.SimpleVideoEncoder$hasExynosCodec$2
io.sentry.CheckIn$Deserializer
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate
io.sentry.android.replay.ReplayIntegration$replayExecutor$2
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener
io.sentry.rrweb.RRWebEvent$Serializer
io.sentry.protocol.SentryPackage$JsonKeys
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1
io.sentry.SynchronizedCollection
io.sentry.android.replay.OnRootViewsChangedListener
io.sentry.internal.debugmeta.NoOpDebugMetaLoader
io.sentry.SentryReplayEvent$ReplayType$Deserializer
androidx.preference.MultiSelectListPreference
io.sentry.IOptionsObserver
androidx.appcompat.widget.ActionBarContainer
io.sentry.android.replay.gestures.GestureRecorder$onRootViewsChanged$1$1
io.sentry.ReplayRecording$Deserializer
io.flutter.embedding.engine.loader.FlutterLoader$1
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$snakeToCamelCase$1
io.sentry.profilemeasurements.ProfileMeasurementValue$Deserializer
io.sentry.cache.tape.FileObjectQueue$DirectByteArrayOutputStream
com.lib.flutter_blue_plus.FlutterBluePlusPlugin
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener
io.sentry.SentryEvent$Deserializer
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$1
io.sentry.rrweb.RRWebEvent$JsonKeys
io.sentry.transport.AsyncHttpTransport$1
io.sentry.SentryWrapper
io.sentry.android.replay.WindowSpy$windowField$2
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory
io.sentry.protocol.Gpu$JsonKeys
io.flutter.plugin.platform.VirtualDisplayController$2$1
io.sentry.EnvelopeSender
io.sentry.android.core.NoOpDebugImagesLoader
io.flutter.plugin.platform.PlatformViewsController
io.flutter.plugin.text.ProcessTextPlugin
com.sanguinarypc.box_sensors.R
io.sentry.flutter.SentryFlutterKt
io.sentry.SentryIntegrationPackageStorage
androidx.core.app.NotificationCompatSideChannelService
io.flutter.embedding.engine.dart.DartExecutor
io.sentry.MeasurementUnit$Custom
io.flutter.plugin.platform.SingleViewWindowManager
io.sentry.flutter.SentryFlutter$updateOptions$14
io.sentry.util.IntegrationUtils
io.sentry.android.replay.video.SimpleVideoEncoderKt
io.sentry.SentryAutoDateProvider
io.sentry.Stack
io.flutter.embedding.engine.loader.FlutterLoader$InitResult
androidx.preference.SwitchPreference
io.sentry.cache.tape.ObjectQueue$Converter
io.sentry.transport.CurrentDateProvider
io.sentry.IPerformanceContinuousCollector
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch
io.sentry.android.core.NetworkBreadcrumbsIntegration
io.sentry.IHub
androidx.window.extensions.core.util.function.Function
io.sentry.android.core.internal.util.AndroidCurrentDateProvider
com.sanguinarypc.box_sensors.R$style
io.sentry.cache.tape.QueueFile$Builder
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo
io.sentry.metrics.MetricsHelper
io.sentry.clientreport.NoOpClientReportRecorder
io.sentry.TraceContext
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType
io.flutter.plugin.common.FlutterException
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter
io.sentry.SentryRuntimeEventProcessor
io.sentry.IpAddressUtils
io.sentry.metrics.MetricsApi$IMetricsInterface
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized
io.sentry.internal.viewhierarchy.ViewHierarchyExporter
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
androidx.core.view.GestureDetectorCompat
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail
io.sentry.JsonObjectWriter
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler
io.sentry.flutter.SentryFlutter$updateOptions$19
io.sentry.android.core.MainLooperHandler
io.sentry.SendFireAndForgetEnvelopeSender
io.flutter.view.AccessibilityViewEmbedder$ViewAndId
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin
io.sentry.android.replay.WindowManagerSpy$windowManagerClass$2
io.sentry.exception.InvalidSentryTraceHeaderException
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$FrameMetricsCollectorListener
io.flutter.embedding.engine.dart.DartExecutor$1
io.sentry.BuildConfig
io.sentry.android.core.R
io.sentry.clientreport.IClientReportRecorder
io.flutter.plugin.common.MethodCodec
androidx.preference.PreferenceGroup
io.sentry.android.core.ActivityLifecycleIntegration
com.lib.flutter_blue_plus.R
io.sentry.SpanContext$JsonKeys
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader
io.flutter.embedding.engine.FlutterEngineCache
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget
io.flutter.view.TextureRegistry$ImageTextureEntry
io.sentry.CustomSamplingContext
io.sentry.flutter.SentryFlutter$updateOptions$18
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$JsonKeys
io.sentry.JsonSerializable
io.sentry.android.core.InternalSentrySdk
io.sentry.cache.EnvelopeCache
io.sentry.instrumentation.file.SentryFileWriter
io.sentry.JsonObjectDeserializer$TokenMap
io.sentry.exception.SentryHttpClientException
io.sentry.android.replay.ReplayIntegration$PreviousReplayHint
io.flutter.plugin.common.PluginRegistry
io.sentry.android.core.AndroidLogger
io.sentry.protocol.Browser$JsonKeys
io.flutter.plugin.platform.PlatformOverlayView
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget
io.sentry.android.replay.WindowRecorder
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1
io.sentry.android.replay.WindowRecorder$Companion
io.sentry.JsonObjectReader
io.flutter.plugin.common.PluginRegistry$ActivityResultListener
io.flutter.embedding.engine.systemchannels.ScribeChannel$1
io.sentry.IPerformanceCollector
io.sentry.android.core.internal.util.DeviceOrientations
io.sentry.SentryBaseEvent$Deserializer
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayMask$1
io.sentry.SentryItemType
androidx.appcompat.widget.SearchView
io.sentry.CheckIn$JsonKeys
io.sentry.android.core.internal.modules.AssetsModulesLoader
io.sentry.SentryLevel
io.sentry.android.core.NdkHandlerStrategy
io.sentry.android.replay.ReplayCache$Companion$fromDisk$$inlined$sortedBy$1
io.sentry.IConnectionStatusProvider$IConnectionStatusObserver
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1
androidx.appcompat.view.menu.ActionMenuItemView
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3
io.sentry.instrumentation.file.FileIOSpanManager
io.sentry.android.replay.util.SamplingKt
io.sentry.PerformanceCollectionData
io.sentry.protocol.SentryTransaction$JsonKeys
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder
io.sentry.TraceContext$Deserializer
io.sentry.android.replay.gestures.GestureRecorder$SentryReplayGestureRecorder
io.sentry.protocol.Contexts$Deserializer
io.sentry.SentryTracer
io.sentry.MonitorScheduleType
io.sentry.TraceContext$JsonKeys
io.sentry.CircularFifoQueue$1
io.flutter.util.Predicate
xyz.luan.audioplayers.AudioplayersPlugin
io.sentry.SentryReplayEvent$JsonKeys
io.sentry.flutter.SentryFlutter$Companion
io.flutter.embedding.engine.systemchannels.PlatformChannel$2
io.sentry.protocol.SentryStackFrame$Deserializer
androidx.appcompat.widget.ContentFrameLayout
io.sentry.android.core.performance.ActivityLifecycleTimeSpan
io.sentry.transport.ReusableCountLatch$Sync
io.flutter.embedding.android.FlutterView$4
io.sentry.android.core.SentryAndroidOptions
io.sentry.clientreport.ClientReport$Deserializer
io.sentry.flutter.SentryFlutterPlugin$Companion
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle
io.flutter.plugin.common.JSONUtil
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken
io.sentry.android.replay.ReplayState
io.sentry.flutter.SentryFlutter$updateOptions$15
io.sentry.protocol.Request
androidx.transition.FragmentTransitionSupport
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1
io.flutter.embedding.engine.plugins.FlutterPlugin
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener
io.sentry.util.HintUtils$SentryHintFallback
io.sentry.SentryClient
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback
io.sentry.MonitorContexts
io.sentry.android.core.SentryFrameMetrics
io.sentry.hints.SessionStartHint
io.sentry.protocol.Device$DeviceOrientation
io.sentry.util.Random
io.sentry.android.core.ActivityFramesTracker
io.sentry.SentryEvent$JsonKeys
io.flutter.plugin.editing.TextInputPlugin$1
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener
androidx.profileinstaller.ProfileInstallReceiver
io.flutter.view.AccessibilityBridge$Action
io.sentry.SentryLockReason$JsonKeys
io.sentry.SentryNanotimeDateProvider
io.sentry.android.ndk.BuildConfig
io.flutter.embedding.android.KeyboardManager$1
androidx.preference.Preference
io.sentry.android.core.ActivityBreadcrumbsIntegration
io.sentry.rrweb.RRWebVideoEvent
io.sentry.android.core.EmptySecureContentProvider
io.sentry.android.replay.capture.BufferCaptureStrategy$pause$1
io.sentry.MeasurementUnit$Fraction
io.sentry.rrweb.RRWebSpanEvent$JsonKeys
io.sentry.flutter.SentryFlutterPlugin$setupReplay$2
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat
io.sentry.metrics.IMetricsClient
io.flutter.embedding.engine.dart.PlatformMessageHandler
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1
io.sentry.android.core.internal.util.AndroidMainThreadChecker
io.sentry.protocol.Device$Deserializer
io.flutter.embedding.android.FlutterSurfaceView$1
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.plugin.mouse.MouseCursorPlugin$2
io.sentry.transport.NoOpTransport
io.sentry.TransactionPerformanceCollector
io.sentry.cache.CacheStrategy
io.flutter.plugin.common.MessageCodec
io.sentry.SentryThreadFactory
io.sentry.hints.SessionEndHint
io.sentry.Dsn
io.flutter.embedding.engine.plugins.service.ServicePluginBinding
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets
io.flutter.embedding.engine.systemchannels.PlatformChannel
io.sentry.clientreport.DiscardedEvent
io.sentry.SentryNanotimeDate
io.flutter.view.VsyncWaiter
io.sentry.NoOpEnvelopeReader
io.sentry.instrumentation.file.SentryFileOutputStream$Factory
io.sentry.cache.PersistingScopeObserver$1
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$1
io.flutter.embedding.engine.loader.FlutterApplicationInfo
io.flutter.plugin.common.EventChannel$1
androidx.activity.ComponentActivity
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory
io.sentry.android.core.LoadClass
io.sentry.DefaultTransactionPerformanceCollector$1
androidx.appcompat.widget.Toolbar
androidx.recyclerview.widget.LinearLayoutManager
io.sentry.android.core.BuildConfig
io.sentry.android.core.internal.util.CpuInfoUtils
io.sentry.MainEventProcessor
io.sentry.android.core.SentryLogcatAdapter
io.sentry.rrweb.RRWebInteractionEvent
androidx.appcompat.widget.DialogTitle
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver
io.flutter.embedding.android.KeyboardManager
io.sentry.clientreport.AtomicClientReportStorage
io.sentry.android.core.AndroidTransactionProfiler
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory
io.sentry.flutter.SentryFlutter$updateOptions$27
io.sentry.android.replay.ReplayCache
io.flutter.plugin.platform.PlatformViewsController$1
io.flutter.plugin.platform.PlatformPlugin$1
io.sentry.protocol.ViewHierarchy
io.flutter.embedding.android.FlutterFragmentActivity
io.flutter.view.AccessibilityBridge$Flag
io.flutter.plugin.editing.TextInputPlugin$2
io.flutter.plugin.platform.PlatformViewFactory
io.sentry.Scope$IWithSession
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$1
androidx.recyclerview.widget.StaggeredGridLayoutManager
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate
io.sentry.transport.ReusableCountLatch
io.sentry.flutter.SentryFlutter$updateOptions$1
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2
io.sentry.transport.AsyncHttpTransport
io.sentry.flutter.SentryFlutter$updateOptions$5
io.flutter.view.VsyncWaiter$1
io.sentry.protocol.Geo$JsonKeys
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.sentry.util.SampleRateUtils
io.sentry.IPerformanceSnapshotCollector
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$3
io.sentry.android.ndk.R
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2
io.sentry.SentryAppStartProfilingOptions$Deserializer
io.flutter.view.TextureRegistry$SurfaceTextureEntry
androidx.appcompat.widget.ViewStubCompat
io.sentry.TypeCheckHint
io.sentry.cache.tape.EmptyObjectQueue$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill
io.sentry.transport.HttpConnection
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1
io.flutter.view.FlutterRunArguments
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2
io.sentry.util.StringUtils
io.flutter.embedding.engine.systemchannels.RestorationChannel$1
io.sentry.util.Objects
io.flutter.embedding.engine.dart.PlatformTaskQueue
io.sentry.transport.RateLimiter$1
io.flutter.view.AccessibilityViewEmbedder$1
io.sentry.Stack$StackItem
io.flutter.plugin.common.BasicMessageChannel
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomic$1
io.sentry.SentryEnvelopeHeader$Deserializer
io.sentry.android.replay.capture.BufferCaptureStrategy
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener
io.sentry.profilemeasurements.ProfileMeasurementValue$JsonKeys
io.sentry.android.replay.capture.BaseCaptureStrategy$Companion
io.flutter.plugin.common.BinaryCodec
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$1
io.sentry.DirectoryProcessor
io.sentry.protocol.TransactionNameSource
io.flutter.util.TraceSection
io.flutter.embedding.engine.systemchannels.SettingsChannel
androidx.lifecycle.ProcessLifecycleInitializer
io.sentry.android.ndk.NativeModuleListLoader
io.sentry.android.replay.capture.BufferCaptureStrategy$captureReplay$2
io.flutter.view.TextureRegistry$GLTextureConsumer
io.sentry.android.replay.capture.BaseCaptureStrategy
io.sentry.rrweb.RRWebSpanEvent$Deserializer
io.sentry.protocol.Geo
io.sentry.android.replay.capture.BaseCaptureStrategy$ReplayPersistingExecutorServiceThreadFactory
io.flutter.plugin.editing.InputConnectionAdaptor
io.sentry.flutter.SentryFlutter$updateOptions$2
io.flutter.plugin.platform.SingleViewPresentation$PresentationState
io.sentry.protocol.DebugMeta
io.sentry.util.Pair
io.sentry.android.core.internal.util.BreadcrumbFactory
io.sentry.JsonReflectionObjectSerializer
androidx.appcompat.app.AppCompatActivity
io.sentry.android.core.NetworkBreadcrumbsIntegration$1
androidx.preference.CheckBoxPreference
io.sentry.android.replay.ModifierExtensionsKt
io.flutter.embedding.engine.systemchannels.TextInputChannel$1
io.sentry.android.core.cache.AndroidEnvelopeCache
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode
io.sentry.SentryOptions$BeforeBreadcrumbCallback
io.flutter.view.VsyncWaiter$DisplayListener
androidx.core.app.FrameMetricsAggregator
io.sentry.android.core.DeviceInfoUtil$1
io.sentry.NoOpHub
io.flutter.embedding.engine.loader.FlutterLoader$Settings
androidx.appcompat.view.menu.ExpandedMenuView
io.sentry.android.core.AndroidProfiler$ProfileEndData
io.sentry.NoOpTransaction
io.sentry.HubAdapter
io.sentry.util.JsonSerializationUtils
io.sentry.util.MapObjectWriter
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager
io.sentry.BackfillingEventProcessor
io.sentry.util.thread.NoOpMainThreadChecker
io.sentry.protocol.SentryThread
io.sentry.transport.ICurrentDateProvider
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder
io.flutter.embedding.engine.dart.DartMessenger$Reply
io.sentry.protocol.SentryRuntime$Deserializer
io.sentry.SentryClient$1
io.flutter.plugin.platform.PlatformPlugin
io.sentry.UserFeedback$JsonKeys
io.flutter.plugin.common.MethodChannel
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
io.sentry.config.SimplePropertiesProvider
io.sentry.protocol.Mechanism
io.sentry.android.replay.video.SimpleMp4FrameMuxer
io.flutter.plugin.editing.TextInputPlugin
io.sentry.flutter.SentryFlutter$updateOptions$12
io.sentry.protocol.User
io.sentry.instrumentation.file.SentryFileInputStream$1
io.sentry.TraceContext$TraceContextUser
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1
io.sentry.MeasurementUnit
io.sentry.android.replay.capture.CaptureStrategy
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler
io.sentry.UserFeedback$Deserializer
io.flutter.plugin.platform.PlatformViewWrapper$1
io.sentry.TransactionContext
io.sentry.DsnUtil
io.sentry.SentryOptions$BeforeSendCallback
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation
io.sentry.internal.modules.ResourcesModulesLoader
io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener
io.sentry.SpanStatus
io.flutter.plugin.common.StandardMessageCodec
androidx.core.widget.NestedScrollView
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate
io.sentry.PreviousSessionFinalizer
io.flutter.embedding.android.FlutterImageView$SurfaceKind
io.sentry.android.replay.gestures.ReplayGestureConverter
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry
io.sentry.instrumentation.file.SentryFileInputStream
io.sentry.SentryOptions$RequestSize
io.sentry.EnvelopeReader
io.sentry.cache.tape.EmptyObjectQueue$EmptyIterator
io.flutter.embedding.engine.systemchannels.AccessibilityChannel
kotlin.jvm.functions.Function1
com.sanguinarypc.box_sensors.R$mipmap
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$runInBackground$1
io.sentry.util.TracingUtils
androidx.preference.DropDownPreference
io.sentry.protocol.SdkInfo
io.sentry.protocol.DebugImage
io.flutter.embedding.android.FlutterFragment$ActivityCallThrough
io.sentry.NoOpSpan
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2
com.sanguinarypc.box_sensors.R$drawable
io.sentry.protocol.Response$JsonKeys
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
io.sentry.protocol.App$JsonKeys
io.sentry.internal.modules.NoOpModulesLoader
io.flutter.plugin.common.ErrorLogResult
io.sentry.SentryInstantDate
io.sentry.ISentryClient
io.sentry.android.replay.ReplayFrame
io.sentry.JsonUnknown
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue
io.sentry.instrumentation.file.SentryFileOutputStream$1
io.flutter.embedding.android.KeyboardMap
io.flutter.embedding.android.FlutterTextureView$1
io.sentry.rrweb.RRWebInteractionEvent$InteractionType$Deserializer
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding
io.sentry.android.ndk.DebugImagesLoader
io.sentry.SentryReplayOptions
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler
io.sentry.transport.RateLimiter
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture
io.sentry.SpotlightIntegration
io.sentry.cache.CacheUtils
io.flutter.embedding.engine.plugins.PluginRegistry
io.sentry.SentryEnvelope
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream
io.sentry.metrics.MetricsHelper$1
io.flutter.plugin.common.BinaryMessenger$BinaryReply
io.sentry.android.core.IDebugImagesLoader
io.sentry.android.replay.ScreenshotRecorder
io.flutter.embedding.android.KeyData$DeviceType
io.sentry.backpressure.NoOpBackpressureMonitor
io.sentry.cache.tape.QueueFile
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1
io.sentry.DataCategory
io.sentry.NoOpTransactionProfiler
io.sentry.SentryEnvelopeHeader$JsonKeys
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$lambda$7$$inlined$sortedBy$1
io.sentry.android.core.util.AndroidLazyEvaluator$AndroidEvaluator
io.sentry.protocol.SentryStackFrame
io.sentry.android.replay.video.SimpleFrameMuxer
io.flutter.util.ViewUtils$ViewVisitor
io.sentry.android.core.AndroidMemoryCollector
io.flutter.util.Preconditions
io.flutter.plugin.platform.PlatformViewRenderTarget
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation
io.sentry.util.HintUtils
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2
io.sentry.protocol.Message$Deserializer
io.sentry.rrweb.RRWebEvent$Deserializer
io.sentry.util.UrlUtils$UrlDetails
io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback
androidx.core.graphics.drawable.IconCompat
io.flutter.view.TextureRegistry$OnFrameConsumedListener
io.flutter.plugin.common.MethodCall
io.sentry.android.core.SentryPerformanceProvider
io.sentry.android.core.AnrV2Integration$ParseResult$Type
io.sentry.IConnectionStatusProvider$ConnectionStatus
io.sentry.protocol.SentryThread$Deserializer
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate
io.sentry.android.core.DeviceInfoUtil
io.flutter.embedding.android.ExclusiveAppComponent
io.flutter.view.TextureRegistry$OnTrimMemoryListener
io.sentry.protocol.SentryTransaction
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
io.sentry.flutter.SentryFlutterPlugin$setupReplay$1
io.sentry.rrweb.RRWebEventType
io.sentry.android.core.EnvelopeFileObserverIntegration
io.sentry.SentryDateProvider
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler
io.sentry.android.ndk.INativeScope
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1
io.sentry.SentryReplayEvent$Deserializer
io.sentry.SentryTraceHeader
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource$Deserializer
io.sentry.internal.modules.IModulesLoader
io.flutter.embedding.android.KeyboardMap$2
io.sentry.util.PropagationTargetsUtils
io.sentry.android.replay.util.ExecutorsKt
io.sentry.protocol.SentrySpan$JsonKeys
io.sentry.android.replay.util.ComposeTextLayout
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$1
io.sentry.util.CollectionUtils$Mapper
io.sentry.protocol.App
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget
io.sentry.protocol.DebugImage$JsonKeys
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType
io.sentry.flutter.SentryFlutter
io.flutter.embedding.engine.FlutterEngineGroup$1
io.sentry.ProfilingTraceData$JsonKeys
io.sentry.Session$State
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState
io.sentry.metrics.CounterMetric
io.sentry.JavaMemoryCollector
io.sentry.SendFireAndForgetOutboxSender
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration
android.support.v4.graphics.drawable.IconCompatParcelizer
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1
io.flutter.plugin.common.EventChannel$StreamHandler
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host
io.flutter.view.AccessibilityBridge$3
io.sentry.android.replay.WindowsKt
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$Deserializer
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator
io.sentry.util.CheckInUtils
io.sentry.android.replay.WindowManagerSpy$mViewsField$2
androidx.core.content.UnusedAppRestrictionsBackportService
io.sentry.android.core.AnrV2Integration$AnrV2Hint
io.sentry.android.replay.SentryReplayModifiers
io.sentry.Scope$IWithTransaction
io.sentry.util.LazyEvaluator$Evaluator
io.flutter.view.FlutterCallbackInformation
io.flutter.embedding.engine.plugins.service.ServiceAware
io.flutter.plugin.platform.VirtualDisplayController$2
io.flutter.embedding.engine.systemchannels.SpellCheckChannel
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$Serializer
io.sentry.clientreport.IClientReportStorage
io.sentry.SentryEnvelopeItemHeader$JsonKeys
io.sentry.transport.StdoutTransport
io.sentry.android.replay.util.TextLayout
io.sentry.internal.gestures.UiElement
io.sentry.android.core.AndroidTransportGate$1
io.sentry.android.core.internal.gestures.NoOpWindowCallback
io.flutter.plugin.editing.TextInputPlugin$InputTarget
io.sentry.android.core.internal.gestures.WindowCallbackAdapter
io.flutter.view.TextureRegistry$TextureEntry
io.sentry.flutter.SentryFlutter$updateOptions$6
io.flutter.view.AccessibilityBridge$1
io.flutter.embedding.android.KeyboardMap$1
io.sentry.util.MapObjectReader
io.sentry.android.core.BuildInfoProvider
io.sentry.DisabledQueue$1
io.sentry.android.core.AppLifecycleIntegration
io.sentry.protocol.MeasurementValue
io.flutter.embedding.engine.systemchannels.LifecycleChannel
io.flutter.plugin.common.BasicMessageChannel$1
com.sanguinarypc.box_sensors.MainActivity
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness
io.flutter.view.AccessibilityBridge
io.sentry.android.replay.util.MainLooperHandler
io.sentry.SentryEnvelopeItem
io.sentry.MonitorConfig$JsonKeys
io.sentry.SentryLockReason$Deserializer
io.sentry.cache.tape.QueueFile$ElementIterator
io.sentry.metrics.NoopMetricsAggregator
io.sentry.android.core.AnrV2EventProcessor
io.sentry.flutter.SentryFlutter$updateOptions$7
io.sentry.ProfilingTraceData
io.sentry.instrumentation.file.FileInputStreamInitData
io.sentry.protocol.TransactionInfo$JsonKeys
io.flutter.embedding.engine.FlutterEngineGroup
io.sentry.android.ndk.NdkScopeObserver
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint
io.sentry.SentryEnvelopeHeader
io.sentry.MeasurementUnit$Information
io.sentry.ISerializer
io.sentry.flutter.SentryFlutter$updateOptions$11
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1
io.sentry.flutter.SentryFlutter$updateOptions$24
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder
io.flutter.embedding.android.KeyEmbedderResponder
io.flutter.plugin.common.EventChannel
io.sentry.android.replay.ReplayIntegration
io.sentry.android.replay.WindowSpy
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler
io.sentry.protocol.Gpu
io.sentry.hints.Enqueable
io.flutter.embedding.android.FlutterImageView$1
io.sentry.vendor.gson.stream.MalformedJsonException
io.sentry.ObjectReader
io.sentry.protocol.ViewHierarchy$JsonKeys
io.sentry.hints.DiskFlushNotification
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.appcompat.app.AlertController$RecycleListView
io.sentry.protocol.SentryStackTrace
io.sentry.SystemOutLogger
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup
androidx.appcompat.app.AppCompatViewInflater
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$1
io.flutter.embedding.android.KeyboardMap$KeyPair
io.sentry.android.replay.capture.SessionCaptureStrategy$stop$1
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
io.flutter.plugin.common.StringCodec
io.sentry.android.replay.util.AndroidTextLayout
io.sentry.ITransportFactory
io.flutter.embedding.engine.FlutterJNI$Factory
io.sentry.protocol.SentryStackTrace$Deserializer
io.flutter.embedding.android.FlutterFragment
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
androidx.appcompat.widget.SwitchCompat
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel
io.flutter.embedding.engine.systemchannels.KeyboardChannel
io.sentry.util.CollectionUtils$Predicate
io.flutter.view.AccessibilityBridge$StringAttribute
io.sentry.NoOpSentryExecutorService
io.sentry.cache.tape.QueueFile$Element
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate
androidx.core.app.RemoteActionCompatParcelizer
io.sentry.protocol.MeasurementValue$JsonKeys
io.flutter.embedding.android.KeyData
io.flutter.plugin.common.JSONMethodCodec
io.sentry.MonitorSchedule$Deserializer
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$Deserializer
io.sentry.android.core.AnrV2Integration
io.sentry.NoOpReplayBreadcrumbConverter
io.flutter.embedding.engine.systemchannels.SystemChannel
io.sentry.EventProcessor
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
io.sentry.android.replay.util.ViewsKt
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType
io.sentry.MonitorSchedule$JsonKeys
io.flutter.util.PathUtils
io.sentry.metrics.SetMetric
io.sentry.protocol.Message$JsonKeys
io.sentry.TracesSampler
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription
io.sentry.flutter.SentryFlutter$updateOptions$22
io.flutter.util.ViewUtils$DisplayUpdater
io.flutter.embedding.android.FlutterPlayStoreSplitApplication
io.flutter.view.TextureRegistry$SurfaceProducer$Callback
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2
io.sentry.config.FilesystemPropertiesLoader
io.sentry.SentryOptions$TracesSamplerCallback
io.sentry.JsonObjectDeserializer$TokenName
io.flutter.embedding.android.KeyboardMap$PressingGoal
io.sentry.protocol.Request$Deserializer
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest
io.sentry.SentryExceptionFactory
io.sentry.config.PropertiesProvider
io.flutter.plugin.editing.SpellCheckPlugin
com.tekartik.sqflite.SqflitePlugin
io.sentry.internal.gestures.GestureTargetLocator
io.sentry.SentryInstantDateProvider
io.sentry.IScopeObserver
io.sentry.config.CompositePropertiesProvider
io.flutter.embedding.android.FlutterView$3
io.sentry.internal.gestures.UiElement$Type
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder
io.sentry.clientreport.ClientReport
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$6
androidx.appcompat.view.menu.ListMenuItemView
io.flutter.plugin.platform.PlatformViewRegistry
io.sentry.ProfilingTransactionData$Deserializer
io.sentry.instrumentation.file.SentryFileInputStream$Factory
androidx.window.extensions.core.util.function.Predicate
io.sentry.metrics.EncodedMetrics
io.sentry.android.replay.ReplayLifecycle
io.sentry.metrics.MetricsApi
io.sentry.android.core.ContextUtils
io.sentry.android.replay.WindowRecorder$onRootViewsChanged$1$1
androidx.preference.EditTextPreference
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory
io.sentry.android.replay.video.SimpleVideoEncoder$mediaFormat$2
io.sentry.rrweb.RRWebInteractionEvent$Deserializer
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding
io.sentry.flutter.SentryFlutter$updateOptions$4
io.sentry.protocol.SentryRuntime$JsonKeys
io.sentry.SentryOptions$BeforeEmitMetricCallback
io.sentry.android.replay.GeneratedVideo
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1
io.sentry.DateUtils
io.sentry.android.core.LifecycleWatcher$1
io.sentry.protocol.MetricSummary$JsonKeys
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets
io.flutter.view.TextureRegistry$SurfaceProducer
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion
io.flutter.plugin.editing.FlutterTextUtils
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2
io.sentry.protocol.MetricSummary$Deserializer
io.sentry.flutter.SentryFlutter$updateOptions$25
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1
io.sentry.metrics.MetricType
io.sentry.ScopeObserverAdapter
io.sentry.android.R
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys
io.sentry.metrics.DistributionMetric
io.flutter.util.ViewUtils
io.flutter.embedding.engine.FlutterEngineGroupCache
io.sentry.flutter.SentryFlutter$updateOptions$13
io.sentry.SynchronizedQueue
io.flutter.embedding.android.KeyboardManager$CharacterCombiner
io.sentry.android.replay.util.PersistableLinkedList
io.sentry.util.thread.IMainThreadChecker
io.sentry.android.replay.ScreenshotRecorderCallback
io.sentry.TraceContext$TraceContextUser$JsonKeys
io.sentry.android.core.ContextUtils$SideLoadedInfo
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType
io.sentry.clientreport.DiscardReason
io.sentry.android.replay.video.SimpleVideoEncoder
androidx.lifecycle.ProcessLifecycleOwner
io.sentry.Session$Deserializer
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
io.sentry.ISpan
io.sentry.util.CollectionUtils
io.sentry.JsonObjectDeserializer
io.sentry.protocol.SdkVersion$JsonKeys
io.sentry.android.core.AndroidProfiler$1
io.sentry.SentryAppStartProfilingOptions
io.sentry.android.replay.WindowManagerSpy$windowManagerInstance$2
io.flutter.plugin.localization.LocalizationPlugin
io.flutter.view.AccessibilityBridge$5
io.flutter.embedding.android.TransparencyMode
io.sentry.SentryItemType$Deserializer
io.sentry.android.replay.ReplayCache$persistSegmentValues$2
io.flutter.plugins.GeneratedPluginRegistrant
io.sentry.SentryReplayOptions$SentryReplayQuality
io.flutter.plugin.common.BinaryMessenger$TaskQueue
io.sentry.profilemeasurements.ProfileMeasurement$JsonKeys
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2
io.sentry.transport.TransportResult$ErrorTransportResult
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute
io.sentry.flutter.SentryFlutter$updateOptions$20
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback
io.flutter.plugin.common.BasicMessageChannel$MessageHandler
io.sentry.rrweb.RRWebOptionsEvent$Deserializer
io.sentry.Session
io.sentry.android.core.PerformanceAndroidEventProcessor
io.sentry.transport.QueuedThreadPoolExecutor
io.sentry.protocol.OperatingSystem
io.flutter.plugins.pathprovider.PathProviderPlugin
android.support.v4.app.RemoteActionCompatParcelizer
io.sentry.metrics.GaugeMetric
io.sentry.protocol.ViewHierarchyNode$JsonKeys
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$4
io.sentry.hints.Cached
io.sentry.protocol.User$Deserializer
io.flutter.embedding.engine.systemchannels.ProcessTextChannel
io.sentry.transport.AsyncHttpTransport$EnvelopeSender
io.sentry.MetricsAggregator$1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener
io.sentry.android.core.ANRWatchDog$ANRListener
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$1
io.sentry.vendor.Base64$Coder
io.flutter.plugin.platform.VirtualDisplayController$1
io.sentry.flutter.SentryFlutter$updateOptions$24$1
io.sentry.SentryStackTraceFactory
io.sentry.ILogger
io.flutter.embedding.android.KeyEmbedderResponder$1
io.sentry.hints.BlockingFlushHint
io.flutter.plugin.platform.PlatformView
io.sentry.protocol.TransactionInfo
dev.fluttercommunity.plus.packageinfo.PackageInfoPlugin
io.sentry.ReplayRecording$JsonKeys
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1
io.sentry.android.replay.gestures.GestureRecorder
io.flutter.view.TextureRegistry$ImageConsumer
io.sentry.MonitorConfig$Deserializer
io.sentry.UncaughtExceptionHandlerIntegration
io.flutter.plugin.editing.TextEditingDelta
io.sentry.android.replay.SentryReplayModifiers$SentryPrivacy$1
io.flutter.embedding.engine.FlutterOverlaySurface
io.sentry.CheckIn
io.sentry.rrweb.RRWebOptionsEvent$JsonKeys
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.flutter.plugin.mouse.MouseCursorPlugin$1
io.sentry.flutter.SentryFlutter$updateOptions$21
io.sentry.FullyDisplayedReporter
androidx.profileinstaller.ProfileInstallerInitializer
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface
io.flutter.embedding.engine.renderer.FlutterRenderer$2
com.sanguinarypc.box_sensors.R$string
io.flutter.embedding.engine.dart.DartMessenger$1
io.sentry.SentryReplayEvent$ReplayType
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type
io.sentry.hints.SubmissionResult
io.sentry.android.core.internal.gestures.SentryWindowCallback$1
io.flutter.plugin.editing.ListenableEditingState$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1
io.flutter.plugin.localization.LocalizationPlugin$1
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$2
io.sentry.SpanContext
io.flutter.plugin.common.EventChannel$EventSink
io.sentry.android.core.NdkIntegration
io.flutter.embedding.engine.loader.ApplicationInfoLoader
androidx.fragment.app.FragmentActivity
io.sentry.protocol.SentrySpan$Deserializer
io.sentry.vendor.Base64$Encoder
io.sentry.android.replay.ReplayIntegration$ReplayExecutorServiceThreadFactory
io.sentry.SentryEnvelopeItemHeader$Deserializer
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler
androidx.versionedparcelable.ParcelImpl
io.sentry.transport.ITransport
androidx.startup.InitializationProvider
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler
io.sentry.transport.NoOpTransportGate
io.flutter.plugin.mouse.MouseCursorPlugin
io.sentry.rrweb.RRWebInteractionMoveEvent
io.sentry.transport.TransportResult$SuccessTransportResult
io.flutter.embedding.android.FlutterActivity$1
io.sentry.android.core.AndroidDateUtils
io.sentry.backpressure.IBackpressureMonitor
io.sentry.DuplicateEventDetectionEventProcessor
io.sentry.android.replay.capture.CaptureStrategy$DefaultImpls
io.sentry.protocol.ViewHierarchyNode$Deserializer
io.sentry.protocol.Browser$Deserializer
io.sentry.protocol.Device$JsonKeys
io.sentry.JsonObjectDeserializer$TokenPrimitive
io.sentry.hints.SessionStart
io.sentry.internal.modules.ModulesLoader
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue
io.flutter.embedding.android.FlutterEngineProvider
io.sentry.SentryValues
io.flutter.embedding.engine.renderer.FlutterRenderer
io.sentry.config.AbstractPropertiesProvider
io.sentry.ExperimentalOptions
io.sentry.transport.TransportResult
io.sentry.ReplayRecording$1
io.sentry.util.HttpUtils
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2
io.sentry.ProfilingTransactionData
io.sentry.util.SentryRandom$SentryRandomThreadLocal
io.sentry.protocol.Response
io.sentry.android.replay.ScreenshotRecorderConfig$Companion
io.sentry.android.core.AndroidProfiler$ProfileStartData
io.sentry.TransactionOptions
io.sentry.protocol.SdkInfo$JsonKeys
io.sentry.SentryEnvelopeItemHeader
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener
io.sentry.protocol.SentryTransaction$Deserializer
io.sentry.android.replay.ReplayCache$rotate$1
io.flutter.plugin.platform.PlatformPlugin$3
io.sentry.SentryOptions$BeforeSendReplayCallback
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate
io.flutter.plugin.common.PluginRegistry$NewIntentListener
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$2
io.sentry.CircularFifoQueue
io.sentry.clientreport.ClientReport$JsonKeys
io.sentry.android.replay.capture.SessionCaptureStrategy$onConfigurationChanged$1
io.sentry.clientreport.DiscardedEvent$JsonKeys
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayUnmask$1
io.sentry.protocol.Geo$Deserializer
io.flutter.view.AccessibilityViewEmbedder
io.sentry.SentryOptions$BeforeSendTransactionCallback
io.sentry.android.replay.ReplayCache$ongoingSegmentFile$2
io.flutter.view.AccessibilityBridge$AccessibilityFeature
io.sentry.android.core.internal.threaddump.Lines
io.sentry.android.core.internal.util.ContentProviderSecurityChecker
io.sentry.protocol.SentryThread$JsonKeys
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmap$2
io.sentry.android.replay.ViewExtensionsKt
io.sentry.ReplayController
io.sentry.android.replay.WindowRecorder$RecorderExecutorServiceThreadFactory
io.flutter.embedding.engine.systemchannels.KeyEventChannel
io.sentry.android.core.DefaultAndroidEventProcessor
io.sentry.android.core.internal.gestures.ViewUtils
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode
io.sentry.TraceContext$1
io.sentry.android.core.AndroidCpuCollector
io.sentry.JsonObjectDeserializer$1
io.sentry.CpuCollectionData
io.sentry.metrics.LocalMetricsAggregator
io.flutter.embedding.android.FlutterView$2
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder
io.sentry.rrweb.RRWebBreadcrumbEvent
io.sentry.android.core.util.AndroidLazyEvaluator
io.sentry.android.core.Installation
io.sentry.android.core.EnvelopeFileObserverIntegration$1
androidx.core.app.JobIntentService
io.sentry.SentryLevel$Deserializer
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface
io.sentry.MonitorConfig
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener
io.sentry.rrweb.RRWebMetaEvent
io.sentry.android.core.internal.util.Debouncer
io.sentry.flutter.BeforeSendCallbackImpl
io.flutter.embedding.android.AndroidTouchProcessor
io.sentry.protocol.TransactionInfo$Deserializer
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext
androidx.lifecycle.ReportFragment
io.sentry.android.core.AnrIntegration$AnrHint
io.sentry.flutter.SentryFlutter$updateOptions$17
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1
io.sentry.flutter.SentryFlutterPlugin$setupReplay$3
androidx.preference.SeekBarPreference
io.flutter.embedding.android.FlutterSurfaceView$2
io.sentry.SentryEvent
io.flutter.embedding.android.FlutterSurfaceView
androidx.appcompat.widget.FitWindowsLinearLayout
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding
io.sentry.util.TracingUtils$TracingHeaders
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout
io.flutter.plugin.common.BasicMessageChannel$Reply
io.sentry.android.core.internal.util.FirstDrawDoneListener
io.sentry.MetricsAggregator
io.sentry.android.core.AnrIntegrationFactory
io.sentry.util.DebugMetaPropertiesApplier
io.flutter.embedding.engine.FlutterJNI
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$JsonKeys
io.sentry.util.FileUtils
io.flutter.view.AccessibilityBridge$StringAttributeType
io.flutter.embedding.android.FlutterViewDelegate
androidx.appcompat.widget.ActionBarContextView
io.sentry.NoOpReplayController
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint
io.flutter.embedding.engine.systemchannels.NavigationChannel$1
androidx.core.graphics.drawable.IconCompatParcelizer
io.sentry.transport.AsyncHttpTransport$AsyncConnectionThreadFactory
io.sentry.instrumentation.file.SentryFileOutputStream
io.sentry.config.PropertiesLoader
io.sentry.SentryBaseEvent
io.sentry.cache.PersistingOptionsObserver
io.sentry.cache.tape.FileObjectQueue
io.sentry.rrweb.RRWebMetaEvent$JsonKeys
io.sentry.rrweb.RRWebInteractionEvent$InteractionType
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding
androidx.preference.DialogPreference
io.sentry.hints.EventDropReason
androidx.preference.UnPressableLinearLayout
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget
io.sentry.DeduplicateMultithreadedEventProcessor
io.flutter.embedding.engine.loader.ResourceExtractor$1
androidx.core.app.ComponentActivity
androidx.core.app.CoreComponentFactory
io.sentry.android.replay.util.ContextKt
io.sentry.android.core.AndroidTransportGate
io.sentry.android.replay.util.TextAttributes
io.sentry.protocol.Browser
io.flutter.embedding.android.KeyboardManager$Responder
io.sentry.android.replay.capture.SessionCaptureStrategy$pause$1
io.flutter.embedding.android.FlutterView$1
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode
io.sentry.flutter.SentryFlutter$updateOptions$9
io.sentry.protocol.Mechanism$JsonKeys
io.sentry.MonitorContexts$Deserializer
io.flutter.embedding.engine.systemchannels.TextInputChannel
io.sentry.ISentryExecutorService
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics
io.sentry.profilemeasurements.ProfileMeasurementValue
io.flutter.embedding.android.KeyboardMap$TogglingGoal
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger
io.sentry.profilemeasurements.ProfileMeasurement
io.sentry.android.core.AppState
io.sentry.config.SystemPropertyPropertiesProvider
io.flutter.embedding.engine.renderer.RenderSurface
io.sentry.android.replay.ReplayIntegration$rootViewsSpy$2
io.sentry.android.core.ApplicationNotResponding
io.sentry.android.core.performance.AppStartMetrics$AppStartType
io.sentry.android.replay.ReplayCache$replayCacheDir$2
io.sentry.DiagnosticLogger
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration
io.sentry.android.core.ViewHierarchyEventProcessor
io.sentry.instrumentation.file.FileOutputStreamInitData
io.sentry.android.replay.R
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1
io.sentry.MonitorSchedule
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created
io.sentry.android.replay.ReplayIntegration$random$2
io.sentry.Attachment
io.sentry.protocol.Mechanism$Deserializer
io.sentry.DefaultTransactionPerformanceCollector$2
io.sentry.SentrySpanStorage
io.sentry.android.core.SentryInitProvider
io.sentry.ProfilingTraceData$Deserializer
io.sentry.clientreport.ClientReportKey
androidx.preference.PreferenceScreen
io.sentry.ReplayRecording
io.sentry.HttpStatusCodeRange
io.sentry.android.replay.RootViewsSpy
io.sentry.android.ndk.SentryNdk
io.sentry.protocol.SentryException$Deserializer
io.sentry.android.replay.ReplayLifecycle$WhenMappings
io.sentry.SentryTracer$2
io.flutter.plugins.sharedpreferences.LegacySharedPreferencesPlugin
io.sentry.NoOpScope
io.sentry.android.replay.ScreenshotRecorder$capture$1$1$1$1
io.sentry.IMemoryCollector
io.sentry.android.core.internal.gestures.SentryWindowCallback
io.sentry.android.replay.gestures.ReplayGestureConverter$Companion
io.sentry.util.TracingUtils$1
io.sentry.vendor.Base64
androidx.lifecycle.ProcessLifecycleOwner$attach$1
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState
io.flutter.plugin.editing.TextInputPlugin$MinMax
kotlin.jvm.functions.Function2
io.sentry.transport.TransportResult$1
io.sentry.NoOpSerializer
io.sentry.rrweb.RRWebEvent
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2
io.sentry.android.replay.ScreenshotRecorder$prescaledMatrix$2
io.sentry.Span
io.sentry.util.ClassLoaderUtils
io.sentry.flutter.SentryFlutter$updateOptions$16
io.sentry.AsyncHttpTransportFactory
io.sentry.android.core.ActivityFramesTracker$1
io.flutter.view.AccessibilityBridge$SemanticsNode
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler
io.flutter.embedding.android.FlutterFragment$2
io.sentry.util.LazyEvaluator
io.sentry.Baggage$DSCKeys
io.sentry.android.replay.capture.SessionCaptureStrategy
io.sentry.SentryExecutorService$SentryExecutorServiceThreadFactory
kotlin.Function
io.sentry.exception.SentryEnvelopeException
io.sentry.instrumentation.file.FileIOSpanManager$FileIOCallable
io.sentry.HostnameCache$1
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode
io.sentry.profilemeasurements.ProfileMeasurement$Deserializer
io.sentry.android.core.UserInteractionIntegration
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback
io.sentry.IMetricsAggregator
io.flutter.view.AccessibilityBridge$TextDirection
io.sentry.TraceContext$TraceContextUser$Deserializer
io.flutter.embedding.engine.dart.DartMessenger
com.baseflow.permissionhandler.PermissionHandlerPlugin
io.sentry.UncaughtExceptionHandlerIntegration$UncaughtExceptionHint
io.sentry.SentryBaseEvent$Serializer
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1
io.sentry.android.replay.LastSegmentData
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler
io.sentry.MonitorScheduleUnit
io.sentry.android.core.ManifestMetadataReader
io.flutter.plugin.platform.PlatformViewRegistryImpl
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter
io.sentry.ScopeCallback
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion
io.sentry.android.core.internal.util.ScreenshotUtils
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler
io.sentry.hints.AbnormalExit
io.sentry.android.ndk.SentryNdkUtil
io.sentry.NoOpTransportFactory
io.sentry.android.core.CurrentActivityIntegration
io.sentry.JsonObjectSerializer
io.sentry.Baggage
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1
io.sentry.CheckInStatus
io.sentry.SentryOptions$ProfilesSamplerCallback
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1
io.sentry.rrweb.RRWebBreadcrumbEvent$Deserializer
androidx.recyclerview.widget.GridLayoutManager
io.sentry.android.replay.ReplayIntegration$captureReplay$1
io.flutter.plugin.platform.AccessibilityEventsDelegate
io.sentry.hints.Retryable
io.sentry.android.core.AnrV2Integration$AnrProcessor
io.flutter.view.AccessibilityBridge$LocaleStringAttribute
io.sentry.android.core.internal.util.SentryFrameMetricsCollector
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler
io.sentry.ITransaction
io.sentry.SpanFinishedCallback
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$1
io.sentry.android.core.performance.WindowContentChangedCallback
io.sentry.JsonObjectDeserializer$TokenArray
io.sentry.protocol.SdkVersion$Deserializer
io.sentry.android.core.internal.threaddump.Line
io.sentry.vendor.Base64$Decoder
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1
io.sentry.SentryValues$JsonKeys
io.sentry.android.core.ANRWatchDog
io.sentry.android.replay.util.NodesKt
io.sentry.android.replay.capture.BaseCaptureStrategy$persistingExecutor$2
io.sentry.IEnvelopeReader
io.sentry.android.replay.ScreenshotRecorderConfig
androidx.appcompat.widget.AlertDialogLayout
io.sentry.Breadcrumb$JsonKeys
io.sentry.protocol.DebugMeta$Deserializer
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
io.sentry.hints.TransactionEnd
io.sentry.android.replay.WindowManagerSpy
io.flutter.plugin.common.JSONMessageCodec
io.sentry.protocol.OperatingSystem$JsonKeys
io.sentry.protocol.SentryPackage$Deserializer
io.sentry.util.TracingUtils$PropagationContextHolder
io.sentry.android.replay.RootViewsSpy$Companion
io.flutter.embedding.engine.dart.DartExecutor$DartCallback
io.sentry.android.core.AndroidProfiler
io.sentry.rrweb.RRWebInteractionMoveEvent$JsonKeys
io.sentry.rrweb.RRWebMetaEvent$Deserializer
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint
io.sentry.android.core.ActivityFramesTracker$FrameCounts
io.sentry.android.replay.video.MuxerConfig
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath
io.sentry.vendor.gson.stream.JsonWriter
io.sentry.hints.ApplyScopeData
io.sentry.Integration
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1
io.sentry.SentryOptions$Proxy
io.sentry.Hub
io.sentry.SentryReplayEvent
io.sentry.SentryLockReason
io.sentry.android.replay.ScreenshotRecorder$maskingPaint$2
io.flutter.embedding.engine.plugins.activity.ActivityAware
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager
io.sentry.flutter.R
io.sentry.android.core.internal.threaddump.ThreadDumpParser
io.sentry.protocol.SdkInfo$Deserializer
io.sentry.cache.PersistingScopeObserver
io.sentry.android.core.AnrIntegration
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager
io.sentry.RequestDetails
kotlinx.coroutines.android.AndroidDispatcherFactory
io.sentry.android.replay.capture.SessionCaptureStrategy$Companion
io.sentry.ITransactionProfiler
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue
io.flutter.embedding.android.MotionEventTracker
io.sentry.flutter.SentryFlutter$updateOptions$10
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder
io.sentry.protocol.SentryRuntime
androidx.preference.ListPreference
io.sentry.SentryOptions
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder
io.flutter.plugin.platform.SingleViewPresentation
io.sentry.internal.modules.CompositeModulesLoader
io.flutter.embedding.engine.systemchannels.PlatformChannel$1
io.sentry.android.core.AndroidOptionsInitializer
androidx.appcompat.widget.FitWindowsFrameLayout
io.sentry.android.core.internal.gestures.SentryWindowCallback$MotionEventObtainer
io.sentry.OutboxSender
io.sentry.android.core.SystemEventsBreadcrumbsIntegration
io.sentry.NoOpSentryClient
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$4
io.sentry.rrweb.RRWebInteractionMoveEvent$Position
io.sentry.android.replay.ReplayCache$Companion
io.sentry.config.EnvironmentVariablePropertiesProvider
io.sentry.android.core.internal.gestures.SentryGestureListener
io.sentry.metrics.Metric
io.sentry.android.replay.RootViewsSpy$Companion$install$1$1$1
io.flutter.embedding.engine.systemchannels.RestorationChannel$2
io.sentry.vendor.gson.stream.JsonReader
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding
io.sentry.PropagationContext
io.sentry.config.ClasspathPropertiesLoader
io.sentry.hints.Resettable
io.sentry.flutter.SentryFlutter$updateOptions$28
androidx.window.extensions.core.util.function.Consumer
io.sentry.protocol.SentryStackFrame$JsonKeys
io.sentry.DefaultTransactionPerformanceCollector
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler
io.sentry.SentryBaseEvent$JsonKeys
io.sentry.backpressure.BackpressureMonitor
io.flutter.plugin.common.BinaryMessenger
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper
io.sentry.protocol.ViewHierarchyNode
io.sentry.rrweb.RRWebSpanEvent
io.sentry.JsonObjectDeserializer$NextValue
io.sentry.RequestDetailsResolver
io.sentry.android.replay.util.FixedWindowCallback
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue
androidx.recyclerview.widget.RecyclerView
io.flutter.embedding.android.FlutterView$ZeroSides
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1
io.flutter.embedding.android.KeyboardManager$ViewDelegate
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface
io.sentry.transport.AuthenticatorWrapper
io.sentry.UncaughtExceptionHandler$Adapter
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$OperationOnPermission
io.sentry.util.Platform
io.sentry.android.replay.SessionReplayOptionsKt
io.sentry.protocol.User$JsonKeys
io.flutter.embedding.engine.systemchannels.LocalizationChannel
io.sentry.Hint
io.sentry.android.core.performance.AppStartMetrics
io.flutter.embedding.engine.systemchannels.BackGestureChannel
io.sentry.rrweb.RRWebInteractionMoveEvent$Deserializer
io.sentry.protocol.Response$Deserializer
io.flutter.embedding.android.FlutterActivityLaunchConfigs
io.sentry.rrweb.RRWebOptionsEvent
io.flutter.embedding.android.FlutterActivity
io.sentry.flutter.SentryFlutterReplayRecorder
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel
io.flutter.view.VsyncWaiter$FrameCallback
io.sentry.flutter.SentryFlutter$updateOptions$23
io.flutter.embedding.android.MotionEventTracker$MotionEventId
io.flutter.plugin.platform.PlatformPlugin$2
io.flutter.plugin.platform.WindowManagerHandler
io.sentry.protocol.App$Deserializer
io.sentry.android.replay.Recorder
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmapCanvas$2
io.sentry.rrweb.RRWebIncrementalSnapshotEvent
io.sentry.android.core.AppComponentsBreadcrumbsIntegration
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2
io.sentry.TransactionFinishedCallback
io.sentry.SentryOptions$Cron
com.sanguinarypc.box_sensors.R$xml
io.sentry.UncaughtExceptionHandler
io.flutter.embedding.engine.loader.ResourceExtractor
io.flutter.embedding.engine.systemchannels.NavigationChannel
io.sentry.IEnvelopeSender
androidx.legacy.content.WakefulBroadcastReceiver
io.sentry.android.replay.WindowRecorder$capturer$2
io.sentry.SentryLongDate
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener
androidx.core.view.ScrollingView
io.sentry.NoOpLogger
io.flutter.app.FlutterApplication
io.flutter.embedding.engine.FlutterEngine
io.sentry.protocol.Device$DeviceOrientation$Deserializer
io.sentry.android.core.AnrV2Integration$ParseResult
io.sentry.protocol.MetricSummary
io.sentry.rrweb.RRWebVideoEvent$Deserializer
io.flutter.plugin.editing.ScribePlugin
androidx.lifecycle.DefaultLifecycleObserver
io.sentry.exception.ExceptionMechanismException
io.sentry.instrumentation.file.SentryFileReader
io.sentry.android.core.SpanFrameMetricsCollector
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode
io.flutter.embedding.engine.FlutterEngineConnectionRegistry
io.sentry.hints.SessionEnd
io.sentry.protocol.Contexts
io.sentry.cache.tape.EmptyObjectQueue
io.sentry.util.thread.MainThreadChecker
io.sentry.flutter.SentryFlutter$updateOptions$24$2
io.sentry.SpanOptions
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Failed
io.sentry.SentryExecutorService$1
io.sentry.Scope$IWithPropagationContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5
io.flutter.view.TextureRegistry
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
io.sentry.android.replay.capture.CaptureStrategy$Companion
io.sentry.ObjectWriter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
io.sentry.flutter.SentryFlutter$updateOptions$8
io.sentry.NoOpConnectionStatusProvider
io.sentry.ShutdownHookIntegration
io.sentry.android.core.EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration
io.sentry.SentryClient$SortBreadcrumbsByDate
io.sentry.SentryDate
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt
io.sentry.Sentry$OptionsConfiguration
io.sentry.NoOpTransactionPerformanceCollector
androidx.appcompat.widget.ActivityChooserView$InnerLayout
io.sentry.ReplayBreadcrumbConverter
io.flutter.embedding.android.FlutterTextureView
io.sentry.IConnectionStatusProvider
io.sentry.UserFeedback
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$ImageViewHierarchyNode
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1
io.sentry.SpanId
io.sentry.FullyDisplayedReporter$FullyDisplayedReporterListener
io.sentry.util.LogUtils
io.sentry.android.core.SentryAndroid
io.flutter.util.HandlerCompat
io.sentry.SpanContext$Deserializer
io.flutter.embedding.engine.systemchannels.RestorationChannel
io.sentry.SpanStatus$Deserializer
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage
androidx.lifecycle.ReportFragment$LifecycleCallbacks
io.sentry.Breadcrumb
io.sentry.android.core.performance.TimeSpan
io.flutter.plugin.common.ActivityLifecycleListener
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler
io.sentry.protocol.SentryId$Deserializer
io.sentry.protocol.SentryId
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState
io.sentry.SentryExecutorService
io.sentry.hints.Backfillable
io.sentry.flutter.SentryFlutterPlugin
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$GenericViewHierarchyNode
io.sentry.ProfilingTransactionData$JsonKeys
io.sentry.android.core.internal.util.RootChecker
io.flutter.plugin.common.StandardMethodCodec
io.sentry.internal.modules.ManifestModulesLoader
io.sentry.DisabledQueue
io.flutter.plugin.platform.SingleViewPresentation$ImmContext
androidx.core.app.RemoteActionCompat
androidx.lifecycle.SavedStateHandlesVM
io.sentry.SendCachedEnvelopeFireAndForgetIntegration
io.sentry.internal.debugmeta.IDebugMetaLoader
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$1
io.sentry.android.replay.BuildConfig
io.flutter.embedding.engine.renderer.FlutterRenderer$1
io.sentry.rrweb.RRWebEventType$Deserializer
io.sentry.protocol.Device
io.sentry.ProfilingTraceData$1
io.sentry.IScope
io.sentry.Scope
io.sentry.util.HintUtils$SentryNullableConsumer
io.flutter.embedding.android.FlutterEngineConfigurator
io.sentry.protocol.OperatingSystem$Deserializer
androidx.preference.SwitchPreferenceCompat
io.sentry.transport.ITransportGate
io.flutter.plugin.common.MethodChannel$MethodCallHandler
androidx.appcompat.widget.ActionMenuView
io.sentry.android.core.LifecycleWatcher
io.sentry.Scope$SessionPair
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature
androidx.annotation.Keep
io.sentry.android.replay.WindowSpy$decorViewClass$2
io.sentry.SentryEnvelopeItem$CachedItem
io.sentry.protocol.ViewHierarchy$Deserializer
io.sentry.ExternalOptions
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$ChrFound
io.flutter.embedding.engine.FlutterEngineGroup$Options
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister
io.flutter.embedding.android.FlutterImageView
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder
io.flutter.embedding.android.RenderMode
io.flutter.plugin.platform.VirtualDisplayController
io.flutter.view.AccessibilityBridge$2
io.sentry.util.UrlUtils
io.sentry.transport.RateLimiter$IRateLimitObserver
androidx.preference.internal.PreferenceImageView
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable
io.sentry.protocol.DebugMeta$JsonKeys
io.flutter.plugin.common.MethodChannel$Result
io.sentry.android.core.internal.util.Permissions
androidx.core.content.FileProvider
io.sentry.protocol.DebugImage$Deserializer
io.sentry.util.SentryRandom
io.sentry.android.replay.capture.BufferCaptureStrategy$onConfigurationChanged$1
io.sentry.SpanDataConvention
io.flutter.embedding.engine.systemchannels.MouseCursorChannel
io.sentry.cache.tape.ObjectQueue
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask
io.flutter.embedding.android.KeyData$Type
io.sentry.protocol.MeasurementValue$Deserializer
io.sentry.internal.debugmeta.ResourcesDebugMetaLoader
io.sentry.JsonObjectDeserializer$Token
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler
io.flutter.embedding.engine.plugins.service.ServiceControlSurface
io.sentry.util.SentryRandom$1
io.sentry.android.core.SpanFrameMetricsCollector$Frame
io.sentry.MeasurementUnit$Duration
io.sentry.android.ndk.NativeScope
io.sentry.android.core.internal.util.ClassUtil
io.sentry.protocol.SentrySpan
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion
io.flutter.plugin.platform.PlatformViewWrapper
io.sentry.android.core.internal.debugmeta.AssetsDebugMetaLoader
io.sentry.SentryTracer$FinishStatus
io.sentry.transport.ProxyAuthenticator
io.sentry.android.core.internal.util.FirstDrawDoneListener$1
io.sentry.BaggageHeader
io.sentry.cache.IEnvelopeCache
io.sentry.OptionsContainer
io.flutter.view.AccessibilityBridge$4
androidx.versionedparcelable.CustomVersionedParcelable
androidx.preference.TwoStatePreference
androidx.appcompat.widget.ActionBarOverlayLayout
io.sentry.protocol.Gpu$Deserializer
io.sentry.flutter.SentryFlutter$updateOptions$28$1
io.sentry.clientreport.ClientReportRecorder
io.flutter.plugin.common.MethodChannel$IncomingResultHandler
io.sentry.android.replay.ReplayCache$Companion$fromDisk$$inlined$sortBy$1
io.sentry.util.HintUtils$SentryConsumer
io.flutter.embedding.engine.FlutterShellArgs
io.flutter.plugin.editing.ListenableEditingState
io.sentry.protocol.SentryStackTrace$JsonKeys
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware
io.flutter.embedding.android.KeyChannelResponder
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
kotlinx.coroutines.internal.StackTraceRecoveryKt
io.sentry.android.core.SendCachedEnvelopeIntegration
io.sentry.transport.NoOpEnvelopeCache
io.sentry.HostnameCache$HostnameCacheThreadFactory
io.flutter.embedding.android.FlutterFragment$1
io.sentry.android.replay.RootViewsSpy$listeners$1
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment
io.sentry.JsonDeserializer
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions
io.sentry.android.core.EnvelopeFileObserver
io.sentry.config.PropertiesProviderFactory
io.sentry.SentryAppStartProfilingOptions$JsonKeys
io.sentry.TracesSamplingDecision
io.sentry.protocol.SentryException
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult
io.sentry.flutter.SentryFlutter$updateOptions$3
io.sentry.flutter.SentryFlutterPluginKt
io.flutter.embedding.engine.FlutterEngine$1
io.sentry.android.core.CurrentActivityHolder
io.sentry.vendor.gson.stream.JsonScope
io.sentry.internal.modules.ManifestModulesLoader$Module
io.sentry.Sentry
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder
io.sentry.android.replay.capture.BufferCaptureStrategy$Companion
io.sentry.rrweb.RRWebVideoEvent$JsonKeys
io.sentry.android.core.SentryAndroidDateProvider
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1
io.sentry.android.replay.DefaultReplayBreadcrumbConverter
io.sentry.clientreport.DiscardedEvent$Deserializer
io.sentry.Instrumenter
io.sentry.android.replay.ScreenshotRecorder$RecorderExecutorServiceThreadFactory
io.sentry.SamplingContext
io.sentry.MemoryCollectionData
io.sentry.util.ExceptionUtils
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils
io.sentry.protocol.SentryPackage
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind
io.flutter.embedding.engine.loader.FlutterLoader
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
io.sentry.protocol.SdkVersion
io.sentry.SentryCrashLastRunState
io.sentry.android.replay.gestures.TouchRecorderCallback
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors
io.sentry.Session$JsonKeys
io.sentry.android.core.ScreenshotEventProcessor
io.flutter.embedding.engine.systemchannels.ScribeChannel
io.sentry.vendor.gson.stream.JsonToken
io.sentry.protocol.SentryException$JsonKeys
io.sentry.android.replay.R$id
io.sentry.SpanId$Deserializer
io.sentry.protocol.Request$JsonKeys
io.sentry.android.core.internal.gestures.SentryGestureListener$1
androidx.appcompat.widget.ButtonBarLayout
io.sentry.JsonSerializer
io.sentry.SentryOptions$BeforeEnvelopeCallback
io.sentry.Breadcrumb$Deserializer
io.flutter.embedding.android.FlutterView
androidx.preference.PreferenceCategory
io.sentry.flutter.SentryFlutter$updateOptions$26
io.sentry.SentryTracer$1
io.sentry.HostnameCache
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1
io.sentry.SentryTracer: java.util.List children
io.sentry.SentryOptions: java.lang.String proguardUuid
io.flutter.plugin.common.EventChannel: java.lang.String name
io.sentry.android.ndk.DebugImagesLoader: java.lang.Object debugImagesLock
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String LEVEL
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
io.sentry.android.replay.video.SimpleMp4FrameMuxer: android.media.MediaMuxer muxer
io.sentry.protocol.SentryStackFrame: java.util.Map unknown
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: boolean retry
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo
io.sentry.Hint: java.util.Map internalStorage
io.sentry.protocol.App: java.lang.String appVersion
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType[] $VALUES
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String TYPE
io.sentry.SentryOptions: java.lang.String dsn
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendReplayCallback beforeSendReplay
io.sentry.android.replay.video.MuxerConfig: int bitRate
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
io.sentry.protocol.App: java.util.Map unknown
io.sentry.Hint: io.sentry.ReplayRecording replayRecording
io.sentry.SentryOptions: boolean enableAppStartProfiling
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
io.sentry.SpanStatus: io.sentry.SpanStatus RESOURCE_EXHAUSTED
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration val$configurationToRemove
io.sentry.protocol.User: java.util.Map unknown
io.sentry.protocol.OperatingSystem$JsonKeys: java.lang.String NAME
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
io.sentry.vendor.Base64$Decoder: int[] DECODE_WEBSAFE
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean handleDeeplinking
io.sentry.hints.BlockingFlushHint: long flushTimeoutMillis
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.ScheduledExecutorService replayExecutor
io.sentry.protocol.Device$JsonKeys: java.lang.String EXTERNAL_STORAGE_SIZE
io.sentry.android.replay.RootViewsSpy: io.sentry.android.replay.RootViewsSpy$Companion Companion
io.sentry.SentryTraceHeader: io.sentry.protocol.SentryId traceId
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MINUTE
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
io.sentry.hints.BlockingFlushHint: io.sentry.ILogger logger
io.sentry.DirectoryProcessor: long flushTimeoutMillis
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.embedding.engine.FlutterEngineGroupCache: java.util.Map cachedEngineGroups
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String VISIBILITY
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: io.sentry.android.replay.util.TextLayout layout
io.sentry.android.core.AnrIntegration: android.content.Context context
io.sentry.SentryOptions: boolean enableExternalConfiguration
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
io.sentry.vendor.gson.stream.JsonReader: int pos
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.ILogger logger
io.sentry.rrweb.RRWebVideoEvent: java.lang.String tag
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$1: kotlin.jvm.functions.Function0 $task
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
io.sentry.cache.tape.QueueFile: int maxElements
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_FRAME_RATE
io.sentry.SentryOptions: boolean attachStacktrace
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DISABLE_IMPELLER
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.protocol.OperatingSystem: java.lang.String name
io.sentry.protocol.SentryThread: java.lang.Integer priority
io.sentry.DefaultTransactionPerformanceCollector: java.util.List snapshotCollectors
io.sentry.android.replay.video.SimpleVideoEncoderKt: long TIMEOUT_USEC
io.sentry.android.core.ActivityFramesTracker$FrameCounts: int slowFrames
io.sentry.android.core.NdkIntegration: io.sentry.android.core.SentryAndroidOptions options
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
io.sentry.android.replay.ScreenshotRecorderConfig: int recordingHeight
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String PROFILE_SAMPLE_RATE
io.sentry.android.core.ANRWatchDog: java.lang.Runnable ticker
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int NONE
io.sentry.android.core.ManifestMetadataReader: java.lang.String TTFD_ENABLE
io.sentry.DataCategory: io.sentry.DataCategory Profile
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.internal.util.SentryFrameMetricsCollector frameMetricsCollector
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize maxRequestBodySize
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
io.sentry.android.core.internal.util.CpuInfoUtils: java.lang.String CPUINFO_MAX_FREQ_PATH
io.sentry.SpanDataConvention: java.lang.String HTTP_METHOD_KEY
io.sentry.vendor.gson.stream.JsonWriter: java.lang.String deferredName
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_CACHED_ENGINE_ID
io.sentry.ProfilingTraceData: java.lang.String transactionId
io.sentry.DefaultTransactionPerformanceCollector: io.sentry.SentryOptions options
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern LOCKED_RE
io.sentry.Session$JsonKeys: java.lang.String SID
io.sentry.android.core.AndroidOptionsInitializer: java.lang.String SENTRY_COMPOSE_VIEW_HIERARCHY_INTEGRATION_CLASS_NAME
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long expectedDurationNanos
io.sentry.protocol.Device$JsonKeys: java.lang.String USABLE_MEMORY
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Log
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_VM_SERVICE_PORT
io.sentry.flutter.SentryFlutter: boolean autoPerformanceTracingEnabled
io.sentry.android.core.ApplicationNotResponding: java.lang.Thread thread
io.sentry.protocol.Gpu$JsonKeys: java.lang.String API_TYPE
io.sentry.android.core.SentryAndroidOptions: boolean collectAdditionalContext
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
io.sentry.android.replay.ReplayFrame: java.io.File screenshot
io.sentry.SentryLevel: io.sentry.SentryLevel INFO
io.sentry.Sentry: boolean GLOBAL_HUB_DEFAULT_MODE
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String initialRoute
io.sentry.android.core.ContextUtils$SideLoadedInfo: java.lang.String installerStore
io.sentry.transport.AsyncHttpTransport: java.lang.Runnable currentRunnable
androidx.fragment.app.Fragment: boolean mBeingSaved
io.sentry.rrweb.RRWebVideoEvent: java.lang.String frameRateType
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
io.flutter.view.AccessibilityBridge$StringAttribute: int start
io.sentry.cache.tape.QueueFile$Element: int length
io.sentry.Baggage$DSCKeys: java.lang.String REPLAY_ID
io.sentry.util.LazyEvaluator: io.sentry.util.LazyEvaluator$Evaluator evaluator
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String IMPELLER_BACKEND_META_DATA_KEY
io.sentry.DefaultTransactionPerformanceCollector: long lastCollectionTimestamp
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String EXTRA
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: int $stable
io.sentry.Baggage: java.lang.String CHARSET
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String PROFILE_SAMPLED
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: com.lib.flutter_blue_plus.FlutterBluePlusPlugin this$0
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Font
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: io.sentry.android.core.SentryAndroidOptions options
io.sentry.instrumentation.file.FileOutputStreamInitData: io.sentry.ISpan span
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mCurrentlyConnectingDevices
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String NAMESPACE
io.sentry.SentryOptions: java.lang.String cacheDirPath
io.sentry.cache.tape.QueueFile: int INITIAL_LENGTH
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
io.sentry.TransactionContext: java.lang.String DEFAULT_NAME
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.sentry.TransactionContext: java.lang.String name
io.sentry.protocol.App$JsonKeys: java.lang.String DEVICE_APP_HASH
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver broadcastReceiver
io.sentry.android.core.AndroidProfiler: io.sentry.android.core.internal.util.SentryFrameMetricsCollector frameMetricsCollector
io.sentry.android.core.AndroidCpuCollector: io.sentry.ILogger logger
androidx.fragment.app.Fragment: boolean mHiddenChanged
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration currentConfiguration
io.flutter.embedding.android.KeyEmbedderResponder$1: int[] $SwitchMap$io$flutter$embedding$android$KeyData$Type
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.sentry.SentryOptions: boolean sendClientReports
io.sentry.android.core.AnrV2EventProcessor: io.sentry.cache.PersistingScopeObserver persistingScopeObserver
io.sentry.profilemeasurements.ProfileMeasurementValue: java.lang.String relativeStartNs
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TWITTER
io.sentry.protocol.Mechanism: java.lang.Boolean synthetic
io.sentry.cache.tape.QueueFile$Builder: boolean zero
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_BACKGROUND_MODE
io.sentry.Span: java.util.Map data
io.sentry.android.replay.RootViewsSpy$Companion$install$1$1$1: io.sentry.android.replay.RootViewsSpy $this_apply
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String UI_LOAD_OP
io.sentry.protocol.Device: java.lang.Integer screenWidthPixels
io.sentry.TypeCheckHint: java.lang.String SPRING_EXCHANGE_FILTER_RESPONSE
io.sentry.SentryBaseEvent: java.lang.String environment
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.Lazy persistingExecutor$delegate
io.sentry.SentryOptions$Proxy: java.lang.String user
io.sentry.instrumentation.file.FileInputStreamInitData: java.io.FileInputStream delegate
io.sentry.MonitorConfig: java.lang.String timezone
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: android.net.NetworkCapabilities lastCapabilities
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
io.sentry.profilemeasurements.ProfileMeasurement: java.util.Map unknown
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String TAGS
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VIRTUAL_DISPLAY_PLATFORM_VIEW
io.sentry.protocol.SdkVersion$JsonKeys: java.lang.String PACKAGES
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
io.sentry.SentryOptions: boolean enableUserInteractionTracing
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState STARTED
androidx.fragment.app.Fragment: boolean mPerformedCreateView
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType WEB_SEARCH
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
io.sentry.vendor.gson.stream.JsonWriter: int stackSize
io.flutter.plugin.common.FlutterException: java.lang.String code
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: java.lang.String $propertyName$inlined
io.sentry.Scope: java.util.List eventProcessors
io.sentry.android.replay.video.SimpleVideoEncoder: android.view.Surface surface
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
io.sentry.ExternalOptions: java.lang.Boolean enableUncaughtExceptionHandler
io.sentry.android.replay.ScreenshotRecorderConfig: int $stable
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long durationNanos
io.sentry.SentryValues$JsonKeys: java.lang.String VALUES
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
io.sentry.android.core.ViewHierarchyEventProcessor: int DEBOUNCE_MAX_EXECUTIONS
io.sentry.android.replay.ReplayCache$rotate$1: long $until
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType[] $VALUES
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchCancel
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
io.flutter.plugin.editing.ListenableEditingState: java.lang.String TAG
io.sentry.android.core.SentryAndroid: java.lang.String SENTRY_TIMBER_INTEGRATION_CLASS_NAME
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode displayMode
io.sentry.SentryOptions: io.sentry.Instrumenter instrumenter
io.sentry.android.replay.ReplayCache$replayCacheDir$2: io.sentry.android.replay.ReplayCache this$0
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
io.sentry.TraceContext$TraceContextUser: java.lang.String id
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean handleDeeplinking
io.sentry.MetricsAggregator: java.nio.charset.Charset UTF8
io.sentry.UserFeedback: java.lang.String comments
io.sentry.android.core.AndroidLogger$1: int[] $SwitchMap$io$sentry$SentryLevel
io.sentry.android.core.NetworkBreadcrumbsIntegration: io.sentry.ILogger logger
io.sentry.protocol.Device$JsonKeys: java.lang.String CHARGING
io.sentry.SentryOptions: java.lang.Boolean enableTracing
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String HELP_LINK
io.sentry.android.replay.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int TRACKPAD
io.sentry.transport.QueuedThreadPoolExecutor: io.sentry.ILogger logger
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
io.sentry.DefaultTransactionPerformanceCollector: long TRANSACTION_COLLECTION_TIMEOUT_MILLIS
io.sentry.ProfilingTraceData: java.lang.String deviceModel
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information EXBIBYTE
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.ReplayLifecycle lifecycle
io.sentry.SentryLockReason: java.util.Map unknown
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: java.lang.String $propertyName
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
io.sentry.SpanStatus: int minHttpStatusCode
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] $VALUES
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String ARCH
io.sentry.flutter.SentryFlutter$updateOptions$28: io.sentry.flutter.SentryFlutter this$0
io.sentry.Session$JsonKeys: java.lang.String INIT
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration DAY
io.sentry.SentryOptions: java.lang.String environment
io.sentry.rrweb.RRWebInteractionEvent: int pointerType
io.sentry.SentryTracer: java.util.concurrent.atomic.AtomicBoolean isIdleFinishTimerRunning
io.flutter.embedding.android.KeyData: long timestamp
io.sentry.protocol.Mechanism: java.lang.Thread thread
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
io.sentry.cache.EnvelopeCache: java.lang.String PREFIX_PREVIOUS_SESSION_FILE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
io.sentry.android.replay.SentryReplayModifiers: int $stable
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
io.sentry.android.core.ANRWatchDog: io.sentry.android.core.MainLooperHandler uiHandler
io.sentry.android.core.ANRWatchDog: long pollingIntervalMs
io.sentry.DirectoryProcessor: java.util.Queue processedEnvelopes
io.sentry.android.ndk.DebugImagesLoader: io.sentry.SentryOptions options
io.flutter.view.VsyncWaiter$DisplayListener: io.flutter.view.VsyncWaiter this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
io.sentry.Baggage$DSCKeys: java.lang.String TRANSACTION
io.sentry.android.replay.ReplayLifecycle$WhenMappings: int[] $EnumSwitchMapping$0
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0$inline_fun
io.sentry.protocol.SentryStackFrame: java.util.List postContext
io.sentry.android.core.ManifestMetadataReader: java.lang.String BREADCRUMBS_SYSTEM_EVENTS_ENABLE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA_ALLOWLIST
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String TRANSACTION_LIST
io.sentry.SentryClient: io.sentry.SentryOptions options
io.sentry.SentryOptions: io.sentry.transport.ITransportGate transportGate
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.ScribePlugin scribePlugin
io.sentry.android.replay.video.SimpleMp4FrameMuxer: long finalVideoTime
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int bufferHeight
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String DIST
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DISABLE_SERVICE_AUTH_CODES
io.sentry.android.replay.WindowRecorder: io.sentry.android.replay.WindowRecorder$Companion Companion
io.sentry.android.core.MainLooperHandler: android.os.Handler handler
io.sentry.android.replay.capture.BufferCaptureStrategy: java.util.List bufferedSegments
io.sentry.android.replay.ReplayIntegration$captureReplay$1: io.sentry.android.replay.ReplayIntegration this$0
io.sentry.protocol.Contexts: java.lang.Object responseLock
io.sentry.android.core.performance.AppStartMetrics: boolean appLaunchedInForeground
io.sentry.protocol.SentrySpan: java.lang.Double startTimestamp
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$1: kotlin.jvm.functions.Function0 $task
io.sentry.android.replay.ReplayIntegration: int $stable
io.sentry.Hub: io.sentry.TracesSampler tracesSampler
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.sentry.protocol.Device$JsonKeys: java.lang.String SCREEN_WIDTH_PIXELS
io.sentry.android.core.BuildConfig: java.lang.String SENTRY_ANDROID_SDK_NAME
io.sentry.android.core.AndroidProfiler: io.sentry.ILogger logger
io.sentry.protocol.SentryStackFrame: java.lang.String filename
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.AppStartMetrics instance
io.sentry.vendor.Base64: int CRLF
io.sentry.android.replay.gestures.ReplayGestureConverter: io.sentry.transport.ICurrentDateProvider dateProvider
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String UNIT_NANOSECONDS
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: io.sentry.android.core.SentryAndroidOptions options
io.sentry.SpanContext$JsonKeys: java.lang.String SPAN_ID
io.sentry.TraceContext: java.lang.String sampled
io.sentry.android.core.UserInteractionIntegration: io.sentry.IHub hub
io.sentry.android.replay.WindowRecorder: io.sentry.android.replay.util.MainLooperHandler mainLooperHandler
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.sentry.vendor.gson.stream.JsonReader: int peeked
io.sentry.DisabledQueue$1: io.sentry.DisabledQueue this$0
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.engine.FlutterShellArgs shellArgs
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: java.lang.String TAG
io.sentry.Instrumenter: io.sentry.Instrumenter[] $VALUES
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_KERNEL_BLOB
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.String dartEntrypoint
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String TAG
io.sentry.protocol.MetricSummary$JsonKeys: java.lang.String TAGS
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
io.sentry.protocol.Device: java.lang.String id
io.sentry.protocol.SentryTransaction: java.util.Map unknown
io.flutter.embedding.android.MotionEventTracker: java.lang.String TAG
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.content.BroadcastReceiver mBluetoothBondStateReceiver
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: float y
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String METHOD_QUERY_TEXT_ACTIONS
io.sentry.android.core.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$runInBackground$1: kotlin.jvm.functions.Function0 $task
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_NUMBER
io.sentry.RequestDetails: java.util.Map headers
io.sentry.Breadcrumb: java.lang.Long timestampMs
io.sentry.JsonObjectWriter: io.sentry.vendor.gson.stream.JsonWriter jsonWriter
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngineGroup this$0
io.sentry.SentryOptions: boolean sendDefaultPii
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
io.sentry.protocol.Response: java.lang.Long bodySize
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.lang.String TAG
io.sentry.cache.tape.QueueFile: int modCount
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.sentry.instrumentation.file.FileIOSpanManager: io.sentry.ISpan currentSpan
io.sentry.HttpStatusCodeRange: int max
io.sentry.android.core.EnvelopeFileObserver: io.sentry.ILogger logger
io.sentry.SentryLevel: io.sentry.SentryLevel DEBUG
io.sentry.android.core.DeviceInfoUtil: io.sentry.android.core.SentryAndroidOptions options
io.sentry.TraceContext$TraceContextUser: java.lang.String segment
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String BREADCRUMBS
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason BEFORE_SEND
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchEnd
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_HYBRID_FALLBACK
io.sentry.util.UrlUtils$UrlDetails: java.lang.String fragment
io.sentry.UserFeedback$JsonKeys: java.lang.String EMAIL
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
io.sentry.android.replay.WindowManagerSpy: kotlin.Lazy windowManagerInstance$delegate
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken STRING
io.sentry.backpressure.BackpressureMonitor: int CHECK_INTERVAL_IN_MS
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomic$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.backpressure.BackpressureMonitor: io.sentry.IHub hub
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kDown
io.sentry.android.replay.GeneratedVideo: int $stable
io.sentry.android.core.AndroidTransactionProfiler: java.lang.String profilingTracesDirPath
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize NONE
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType SESSION
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: java.util.concurrent.atomic.AtomicBoolean hasEnded
io.flutter.view.AccessibilityBridge: int systemAction
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback beforeBreadcrumb
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_DART_PROFILING
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: int downBandwidth
io.sentry.android.core.AndroidTransportGate$1: int[] $SwitchMap$io$sentry$IConnectionStatusProvider$ConnectionStatus
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.sentry.SentryTracer: io.sentry.TransactionOptions transactionOptions
io.sentry.android.core.SentryAndroid: java.lang.String FRAGMENT_CLASS_NAME
io.sentry.protocol.Device$JsonKeys: java.lang.String MEMORY_SIZE
androidx.fragment.app.Fragment: java.lang.String mWho
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String DEBUG_ID
io.sentry.SentryTraceHeader: io.sentry.SpanId spanId
io.sentry.protocol.Device: java.lang.Long usableMemory
io.sentry.JsonSerializer: java.util.Map deserializersByClass
io.sentry.instrumentation.file.FileIOSpanManager: java.io.File file
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: java.util.HashSet supportedNetworkData
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String SYMBOL
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: android.graphics.Rect viewBounds
io.sentry.util.SentryRandom: io.sentry.util.SentryRandom$SentryRandomThreadLocal instance
io.sentry.protocol.Device$JsonKeys: java.lang.String LOCALE
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomic$1: java.lang.String $propertyName
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mWriteChr
androidx.fragment.app.Fragment: boolean mInLayout
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayEvent
io.sentry.protocol.Browser: java.lang.String TYPE
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
io.sentry.protocol.Device$JsonKeys: java.lang.String FREE_STORAGE
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel DEBUG
io.sentry.android.core.ContextUtils: io.sentry.android.core.util.AndroidLazyEvaluator applicationName
io.sentry.android.core.SentryAndroid: java.lang.String TIMBER_CLASS_NAME
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap activityLifecycleMap
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
io.sentry.CheckIn: io.sentry.MonitorConfig monitorConfig
io.sentry.protocol.Request: java.lang.String fragment
io.sentry.Baggage: boolean mutable
io.sentry.config.ClasspathPropertiesLoader: java.lang.String fileName
io.sentry.DataCategory: io.sentry.DataCategory MetricBucket
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.lang.String TAG
io.sentry.android.core.SentryAndroidOptions: boolean enableAppLifecycleBreadcrumbs
io.sentry.SentryCrashLastRunState: boolean readCrashedLastRun
io.flutter.plugin.common.MethodCall: java.lang.String method
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE
io.sentry.util.Random: java.util.concurrent.atomic.AtomicLong seed
io.flutter.plugin.editing.ScribePlugin: io.flutter.embedding.engine.systemchannels.ScribeChannel mScribeChannel
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
io.sentry.internal.modules.ManifestModulesLoader$Module: java.lang.String version
io.sentry.SentryReplayEvent: java.util.List urls
io.sentry.SpanContext$JsonKeys: java.lang.String OP
io.sentry.SentryLockReason$JsonKeys: java.lang.String ADDRESS
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: int height
io.flutter.embedding.engine.FlutterJNI: float displayHeight
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
io.flutter.plugin.platform.PlatformPlugin: java.lang.String TAG
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int ADD
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: java.lang.String SENTRY_UNMASK_TAG
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] $VALUES
io.sentry.TracesSamplingDecision: java.lang.Boolean sampled
io.sentry.android.ndk.NdkScopeObserver: io.sentry.SentryOptions options
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
io.sentry.Hint: io.sentry.Attachment viewHierarchy
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: java.lang.String TAG
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: java.util.concurrent.atomic.AtomicReference value
io.flutter.view.AccessibilityBridge: float SCROLL_POSITION_CAP_FOR_INFINITY
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_UNQUOTED_NAME
io.sentry.android.core.ContextUtils: io.sentry.android.core.util.AndroidLazyEvaluator staticPackageInfo33
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
io.sentry.protocol.Gpu$JsonKeys: java.lang.String VENDOR_NAME
io.sentry.SentryEnvelopeItemHeader$JsonKeys: java.lang.String CONTENT_TYPE
io.sentry.OutboxSender: io.sentry.ILogger logger
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.sentry.ExternalOptions: java.lang.Boolean enabled
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String HANDLE_DEEPLINKING_META_DATA_KEY
io.sentry.SentryOptions: java.lang.Double tracesSampleRate
io.sentry.android.core.performance.TimeSpan: long startUptimeMs
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource TASK
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map bufferedMessages
io.sentry.flutter.SentryFlutterPlugin: io.sentry.flutter.SentryFlutter sentryFlutter
io.sentry.android.core.AnrV2Integration$AnrProcessor: io.sentry.IHub hub
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
io.sentry.Sentry: java.nio.charset.Charset UTF_8
io.sentry.Attachment: java.lang.String attachmentType
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENABLE_METRICS
io.sentry.protocol.User$JsonKeys: java.lang.String SEGMENT
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int distance
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.RateLimiter rateLimiter
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String URLS
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader reader
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache envelopeDiskCache
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
io.sentry.android.core.AnrV2EventProcessor: io.sentry.android.core.SentryAndroidOptions options
io.sentry.TypeCheckHint: java.lang.String ANDROID_SENSOR_EVENT
androidx.fragment.app.Fragment: int AWAITING_ENTER_EFFECTS
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: io.flutter.embedding.engine.systemchannels.SpellCheckChannel this$0
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.Class activityClass
io.sentry.protocol.OperatingSystem: java.lang.String build
io.sentry.CheckIn: java.lang.String status
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$snakeToCamelCase$1: io.sentry.android.replay.DefaultReplayBreadcrumbConverter$snakeToCamelCase$1 INSTANCE
io.sentry.SpanDataConvention: java.lang.String HTTP_END_TIMESTAMP
io.sentry.SentrySpanStorage: java.util.Map spans
io.sentry.TypeCheckHint: java.lang.String WEBFLUX_EXCEPTION_HANDLER_RESPONSE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.android.AndroidTouchProcessor: int cachedVerticalScrollFactor
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String backgroundMode
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.util.List dartEntrypointArgs
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean automaticallyRegisterPlugins
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.sentry.SentryItemType: io.sentry.SentryItemType UserFeedback
io.sentry.SentryEvent$JsonKeys: java.lang.String TRANSACTION
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnFrameConsumedListener frameConsumedListener
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothManager mBluetoothManager
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.ScribeChannel scribeChannel
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty currentReplayId$delegate
io.sentry.SpanId: io.sentry.SpanId EMPTY_ID
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.protocol.DebugImage: java.lang.Long imageSize
io.sentry.Baggage: io.sentry.ILogger logger
io.sentry.android.replay.WindowManagerSpy: io.sentry.android.replay.WindowManagerSpy INSTANCE
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String DAEMON
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
io.sentry.BaggageHeader: java.lang.String BAGGAGE_HEADER
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0$inline_fun
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: java.lang.String $propertyName
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel logLevel
io.sentry.android.core.internal.util.CpuInfoUtils: io.sentry.android.core.internal.util.CpuInfoUtils instance
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Load
io.sentry.util.StringUtils: java.nio.charset.Charset UTF_8
io.sentry.android.core.ANRWatchDog: io.sentry.android.core.ANRWatchDog$ANRListener anrListener
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
io.sentry.SentryReplayOptions: long sessionDuration
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.List imageReaderProducers
io.sentry.Session$JsonKeys: java.lang.String IP_ADDRESS
io.sentry.Attachment: boolean addToTransactions
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: java.lang.String lastConnectivityState
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String VERSION_CODE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
io.sentry.protocol.Device$JsonKeys: java.lang.String MANUFACTURER
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
io.sentry.protocol.Message: java.lang.String message
io.sentry.CircularFifoQueue: boolean full
io.sentry.android.core.SentryAndroid: java.lang.String SENTRY_FRAGMENT_INTEGRATION_CLASS_NAME
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: java.util.ArrayDeque imageQueue
io.sentry.internal.debugmeta.ResourcesDebugMetaLoader: io.sentry.ILogger logger
io.sentry.SentryOptions: io.sentry.util.thread.IMainThreadChecker mainThreadChecker
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: io.flutter.embedding.engine.systemchannels.NavigationChannel this$0
io.sentry.android.core.internal.gestures.SentryWindowCallback: io.sentry.android.core.internal.gestures.SentryWindowCallback$MotionEventObtainer motionEventObtainer
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.sentry.TransactionContext: io.sentry.protocol.TransactionNameSource DEFAULT_NAME_SOURCE
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Integer previousVisibility
io.sentry.android.core.ManifestMetadataReader: java.lang.String DSN
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: int id
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
io.sentry.Baggage$DSCKeys: java.lang.String USER_SEGMENT
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.sentry.SentryOptions: boolean enableAutoSessionTracking
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String breadcrumbType
io.sentry.clientreport.DiscardedEvent$JsonKeys: java.lang.String QUANTITY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECK_STATE_MIXED
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_DIGIT
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.String engineId
io.sentry.Session: java.util.Date started
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty currentSegment$delegate
io.sentry.android.core.ManifestMetadataReader: java.lang.String SAMPLE_RATE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
io.sentry.vendor.Base64$Decoder: int[] alphabet
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_BUFFERED
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
io.sentry.clientreport.ClientReport: java.util.Map unknown
io.flutter.embedding.android.KeyboardManager: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information GIBIBYTE
io.sentry.android.replay.util.PersistableLinkedList: java.lang.String propertyName
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.util.HashSet mResources
io.sentry.TraceContext$TraceContextUser$JsonKeys: java.lang.String ID
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.sentry.rrweb.RRWebEvent$JsonKeys: java.lang.String TAG
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FLAG_BATCHED
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: long timeOffset
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String START_TIMESTAMP
io.sentry.util.TracingUtils$PropagationContextHolder: io.sentry.PropagationContext propagationContext
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
io.sentry.android.core.internal.util.FirstDrawDoneListener: java.util.concurrent.atomic.AtomicReference viewReference
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String SAMPLED_PROFILE
io.sentry.TraceContext: java.lang.String publicKey
io.sentry.android.replay.capture.BaseCaptureStrategy$persistingExecutor$2: io.sentry.android.replay.capture.BaseCaptureStrategy$persistingExecutor$2 INSTANCE
io.sentry.TypeCheckHint: java.lang.String SPRING_REQUEST_INTERCEPTOR_REQUEST_BODY
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: io.sentry.android.core.performance.TimeSpan onStart
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
io.sentry.protocol.SdkInfo$JsonKeys: java.lang.String VERSION_MINOR
io.sentry.SentryOptions: long sessionFlushTimeoutMillis
io.sentry.android.core.performance.AppStartMetrics: boolean shouldSendStartMeasurements
io.sentry.Session$JsonKeys: java.lang.String USER_AGENT
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_VM_SNAPSHOT_DATA
io.sentry.instrumentation.file.SentryFileOutputStream: java.io.FileOutputStream delegate
io.sentry.android.core.internal.util.Debouncer: java.util.concurrent.atomic.AtomicInteger executions
io.sentry.android.core.ContextUtils$SideLoadedInfo: boolean isSideLoaded
io.sentry.TraceContext$JsonKeys: java.lang.String TRACE_ID
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
io.flutter.plugin.common.StandardMessageCodec: byte BYTE_ARRAY
io.sentry.protocol.Device: java.lang.Integer processorCount
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.Class fragmentClass
io.sentry.android.core.internal.gestures.SentryGestureListener: io.sentry.IHub hub
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
io.sentry.SpanStatus: io.sentry.SpanStatus[] $VALUES
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration WEEK
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: java.lang.String $propertyName
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kDirectionalPad
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean isImportantForContentCapture
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: int $stable
io.sentry.RequestDetailsResolver: io.sentry.SentryOptions options
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $VALUES
io.sentry.android.core.AppLifecycleIntegration: io.sentry.android.core.LifecycleWatcher watcher
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
io.flutter.embedding.android.KeyData: java.lang.String character
io.sentry.SentryReplayEvent: java.lang.String type
io.sentry.DirectoryProcessor: long ENVELOPE_PROCESSING_DELAY
io.sentry.SentryEvent$JsonKeys: java.lang.String TIMESTAMP
io.sentry.TypeCheckHint: java.lang.String OPEN_FEIGN_RESPONSE
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.content.Context context
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: android.graphics.Rect bounds
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_SOFTWARE_RENDERING
io.sentry.protocol.SdkInfo$JsonKeys: java.lang.String SDK_NAME
io.sentry.rrweb.RRWebSpanEvent: java.util.Map dataUnknown
io.sentry.protocol.SdkVersion: java.lang.String name
io.sentry.SpanContext: io.sentry.protocol.SentryId traceId
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String ENCODING
io.sentry.TracesSamplingDecision: java.lang.Boolean profileSampled
io.sentry.FullyDisplayedReporter: io.sentry.FullyDisplayedReporter instance
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
io.flutter.embedding.android.KeyEmbedderResponder: java.util.HashMap togglingGoals
io.sentry.HttpStatusCodeRange: int DEFAULT_MIN
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
io.sentry.SentryEvent: io.sentry.SentryValues threads
io.sentry.rrweb.RRWebVideoEvent: java.lang.String EVENT_TAG
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
io.sentry.android.core.performance.TimeSpan: java.lang.String description
io.sentry.protocol.SentryThread: java.lang.Boolean main
io.sentry.cache.PersistingScopeObserver$1: io.sentry.cache.PersistingScopeObserver this$0
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Input
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
io.sentry.protocol.Device: java.lang.String language
io.sentry.protocol.Gpu: java.util.Map unknown
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String IMPELLER_OPENGL_GPU_TRACING_DATA_KEY
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.sentry.protocol.SdkInfo: java.lang.Integer versionMinor
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction PERCENT
io.sentry.Span: io.sentry.IHub hub
io.sentry.MonitorScheduleType: io.sentry.MonitorScheduleType[] $VALUES
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENABLE_SENTRY
io.sentry.protocol.DebugMeta: java.util.List images
io.sentry.cache.CacheStrategy: int maxSize
io.sentry.Scope: io.sentry.SentryOptions options
io.sentry.android.replay.WindowRecorder: io.sentry.SentryOptions options
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: int width
io.sentry.protocol.SentryRuntime: java.lang.String rawDescription
io.sentry.TypeCheckHint: java.lang.String ANDROID_INTENT
io.sentry.SentryEnvelopeItemHeader: java.lang.String contentType
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.embedding.android.KeyboardMap$KeyPair: long logicalKey
io.sentry.cache.tape.QueueFile$ElementIterator: long nextElementPosition
io.sentry.android.core.SendCachedEnvelopeIntegration: java.util.concurrent.atomic.AtomicBoolean startupCrashHandled
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
io.sentry.android.core.AppLifecycleIntegration: io.sentry.android.core.MainLooperHandler handler
io.sentry.ExternalOptions: java.lang.String environment
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MILLISECOND
io.sentry.Session$State: io.sentry.Session$State Ok
io.sentry.SentryOptions: long shutdownTimeoutMillis
io.sentry.protocol.User: java.lang.String username
io.sentry.cache.PersistingScopeObserver: java.lang.String TAGS_FILENAME
io.sentry.android.core.SpanFrameMetricsCollector: long lastKnownFrameDurationNanos
io.flutter.plugin.common.StandardMessageCodec: byte MAP
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason QUEUE_OVERFLOW
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
io.sentry.TraceContext$JsonKeys: java.lang.String SAMPLED
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
io.sentry.cache.tape.QueueFile: io.sentry.cache.tape.QueueFile$Element first
io.sentry.TypeCheckHint: java.lang.String LOG4J_LOG_EVENT
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.PlatformViewRenderTarget renderTarget
io.sentry.SentryItemType: io.sentry.SentryItemType CheckIn
io.sentry.protocol.SdkVersion: java.util.Set deserializedIntegrations
io.sentry.protocol.Mechanism: java.util.Map data
io.sentry.android.core.AndroidTransactionProfiler: java.util.Date profileStartTimestamp
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TEXT_SCALE_FACTOR
io.sentry.TransactionOptions: io.sentry.SentryDate startTimestamp
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.fragment.app.Fragment: boolean mAdded
io.sentry.android.replay.GeneratedVideo: int frameCount
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType[] $VALUES
io.sentry.protocol.SentryRuntime$JsonKeys: java.lang.String NAME
io.sentry.Session$JsonKeys: java.lang.String SEQ
io.sentry.Baggage: java.lang.String SENTRY_BAGGAGE_PREFIX
io.sentry.CircularFifoQueue$1: int index
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: java.lang.String $propertyName
io.sentry.SentryReplayOptions: io.sentry.protocol.SdkVersion sdkVersion
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
io.sentry.android.core.AnrV2Integration: io.sentry.transport.ICurrentDateProvider dateProvider
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: java.lang.Integer dominantColor
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DISABLE_SERVICE_AUTH_CODES
io.sentry.SentryEnvelopeItem: byte[] data
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastAndroidState
io.sentry.protocol.SentrySpan: io.sentry.SpanId parentSpanId
io.sentry.protocol.SentryTransaction: io.sentry.protocol.TransactionInfo transactionInfo
io.sentry.android.core.AndroidCpuCollector: long clockSpeedHz
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: float elevation
io.sentry.protocol.App$JsonKeys: java.lang.String APP_NAME
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_DOCUMENT
io.sentry.flutter.SentryFlutterPluginKt: int VIDEO_BLOCK_SIZE
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NAME
androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG
io.sentry.TypeCheckHint: java.lang.String LOGBACK_LOGGING_EVENT
io.sentry.flutter.SentryFlutter$updateOptions$26: io.sentry.android.core.SentryAndroidOptions $options
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mScanCounts
io.sentry.android.core.SpanFrameMetricsCollector: int MAX_FRAMES_COUNT
io.sentry.protocol.OperatingSystem: java.lang.String rawDescription
io.sentry.DefaultTransactionPerformanceCollector: java.util.Timer timer
io.sentry.android.core.ManifestMetadataReader: java.lang.String PROFILES_SAMPLE_RATE
io.sentry.MetricsAggregator: int maxWeight
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.protocol.Geo: java.util.Map unknown
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Set
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.android.core.internal.util.AndroidCurrentDateProvider: io.sentry.transport.ICurrentDateProvider instance
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource URL
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String START_CPU_MS
io.sentry.Hub: io.sentry.Stack stack
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
io.sentry.android.replay.ReplayCache: kotlin.Lazy ongoingSegmentFile$delegate
io.sentry.ExternalOptions: java.lang.String release
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String METRICS_SUMMARY
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_OS_NAME
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kJoystick
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VMSERVICE_SNAPSHOT_LIBRARY
io.flutter.embedding.engine.loader.ResourceExtractor: java.util.HashSet mResources
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
io.sentry.android.core.LifecycleWatcher$1: io.sentry.android.core.LifecycleWatcher this$0
io.sentry.SpanOptions: boolean trimStart
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: io.sentry.IConnectionStatusProvider connectionStatusProvider
io.sentry.Session: java.lang.String release
io.sentry.android.core.SpanFrameMetricsCollector: java.lang.String listenerId
io.sentry.cache.PersistingOptionsObserver: java.lang.String ENVIRONMENT_FILENAME
io.sentry.CheckInStatus: io.sentry.CheckInStatus ERROR
io.sentry.DefaultTransactionPerformanceCollector: java.util.List continuousCollectors
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: java.lang.String $propertyName
io.sentry.SentryOptions: io.sentry.TransactionPerformanceCollector transactionPerformanceCollector
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: io.sentry.android.core.internal.util.Debouncer batteryChangedDebouncer
io.sentry.rrweb.RRWebSpanEvent: java.lang.String tag
io.sentry.android.core.AndroidProfiler: io.sentry.ISentryExecutorService executorService
io.sentry.SentryOptions: java.lang.String dist
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.atomic.AtomicLong replayStartTimestamp
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray viewWrappers
io.sentry.CheckIn$JsonKeys: java.lang.String MONITOR_SLUG
io.sentry.android.core.SendCachedEnvelopeIntegration: java.util.concurrent.atomic.AtomicBoolean isInitialized
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
io.sentry.ReplayRecording: java.util.List payload
io.sentry.android.replay.ReplayIntegration: kotlin.jvm.functions.Function1 replayCacheProvider
io.sentry.vendor.Base64: int DEFAULT
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2: kotlin.jvm.internal.Ref$BooleanRef $isObscured
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
io.sentry.android.core.ViewHierarchyEventProcessor: long DEBOUNCE_WAIT_TIME_MS
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long startNanos
io.sentry.cache.PersistingScopeObserver: java.lang.String BREADCRUMBS_FILENAME
io.sentry.android.core.internal.threaddump.Line: int lineno
io.sentry.android.replay.ReplayCache: kotlin.Lazy replayCacheDir$delegate
io.sentry.SpotlightIntegration: io.sentry.SentryOptions options
io.sentry.util.HttpUtils: java.lang.String COOKIE_HEADER_NAME
io.sentry.util.StringUtils: java.util.regex.Pattern PATTERN_WORD_SNAKE_CASE
io.sentry.TracesSampler: java.lang.Double DEFAULT_TRACES_SAMPLE_RATE
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_REPLAY_SCREEN_AT_START
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
io.sentry.SentryReplayOptions$SentryReplayQuality: float sizeScale
io.sentry.cache.tape.QueueFile: int headerLength
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String EVENT_ID
io.sentry.android.core.AndroidTransactionProfiler: android.content.Context context
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
io.sentry.Session: java.lang.Boolean init
io.sentry.metrics.EncodedMetrics: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
io.sentry.SentryIntegrationPackageStorage: java.util.Set packages
io.sentry.Scope$SessionPair: io.sentry.Session previous
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
io.sentry.MonitorConfig$JsonKeys: java.lang.String SCHEDULE
io.sentry.config.EnvironmentVariablePropertiesProvider: java.lang.String PREFIX
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: android.util.DisplayMetrics displayMetrics
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_UNKNOWN
io.sentry.android.core.SendCachedEnvelopeIntegration: io.sentry.android.core.SentryAndroidOptions options
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String TAG
io.sentry.protocol.ViewHierarchyNode: java.lang.String tag
io.sentry.android.core.AndroidCpuCollector: long lastCpuNanos
io.sentry.rrweb.RRWebVideoEvent: long durationMs
io.sentry.protocol.Request$JsonKeys: java.lang.String QUERY_STRING
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.sentry.protocol.DebugMeta: java.util.Map unknown
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback tracesSampler
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode otherNodeSubtree
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_APP_BUNDLE_PATH
io.sentry.protocol.SdkVersion: java.util.Set deserializedPackages
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String END_CPU_MS
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String IMPELLER_VULKAN_GPU_TRACING_DATA_KEY
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
io.sentry.protocol.Browser: java.util.Map unknown
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
io.sentry.SentryOptions: boolean attachServerName
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
io.sentry.android.core.UserInteractionIntegration: boolean isAndroidXAvailable
io.sentry.SentryEvent: java.util.Map modules
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
io.sentry.android.replay.WindowRecorder: io.sentry.android.replay.ScreenshotRecorder recorder
io.sentry.CircularFifoQueue: long serialVersionUID
io.sentry.HostnameCache: java.util.concurrent.ExecutorService executorService
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_PURGE_PERSISTENT_CACHE
io.sentry.Scope: java.util.Queue breadcrumbs
io.sentry.MonitorConfig: io.sentry.MonitorSchedule schedule
io.sentry.TracesSampler: io.sentry.util.Random random
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3: long $frameTimestamp
io.sentry.android.replay.ReplayIntegration: android.content.Context context
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT_ARGS
io.sentry.android.replay.ScreenshotRecorder: java.util.concurrent.atomic.AtomicBoolean lastCaptureSuccessful
io.sentry.android.ndk.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.sentry.protocol.SentryException: java.lang.Long threadId
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: java.lang.String $propertyName
io.sentry.ExternalOptions: java.lang.String serverName
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_TIMESTAMP
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String TRACE_ORIGIN
io.sentry.Session$JsonKeys: java.lang.String DURATION
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String Y
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$LifecycleChannel$AppLifecycleState
io.sentry.SentryItemType: io.sentry.SentryItemType[] $VALUES
io.flutter.plugin.platform.PlatformViewWrapper: int prevTop
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
io.flutter.embedding.android.KeyboardMap$TogglingGoal: long physicalKey
io.sentry.vendor.Base64$Encoder: byte[] tail
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
io.sentry.TraceContext: java.util.Map unknown
io.sentry.android.core.ActivityLifecycleIntegration: long TTFD_TIMEOUT_MILLIS
io.sentry.flutter.SentryFlutter$updateOptions$25: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryTracer: io.sentry.IHub hub
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus NO_PERMISSION
io.sentry.ProfilingTraceData: java.lang.String deviceOsVersion
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String DATA
io.sentry.cache.PersistingScopeObserver: java.lang.String CONTEXTS_FILENAME
io.sentry.SentryTracer: java.util.TimerTask idleTimeoutTask
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
io.sentry.rrweb.RRWebVideoEvent: long size
io.sentry.SentryEnvelopeItemHeader: java.lang.String attachmentType
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Selection
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String END_NS
io.sentry.android.replay.ReplayIntegration: kotlin.Lazy replayExecutor$delegate
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
io.sentry.vendor.Base64$Decoder: int state
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: java.lang.String $propertyName
io.sentry.protocol.MeasurementValue: java.lang.String unit
io.sentry.android.replay.ReplayIntegration$rootViewsSpy$2: io.sentry.android.replay.ReplayIntegration$rootViewsSpy$2 INSTANCE
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: io.flutter.view.FlutterCallbackInformation callbackHandle
io.sentry.vendor.Base64$Encoder: int count
io.sentry.vendor.gson.stream.JsonReader: char[] buffer
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngineGroup engineGroup
io.sentry.android.replay.ScreenshotRecorder: kotlin.Lazy singlePixelBitmapCanvas$delegate
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
io.sentry.android.core.internal.threaddump.ThreadDumpParser: io.sentry.SentryStackTraceFactory stackTraceFactory
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE
io.sentry.android.replay.capture.SessionCaptureStrategy$onConfigurationChanged$1: io.sentry.android.replay.capture.SessionCaptureStrategy this$0
io.sentry.MainEventProcessor: io.sentry.SentryOptions options
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.sentry.protocol.Device: io.sentry.protocol.Device$DeviceOrientation orientation
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
io.flutter.embedding.android.KeyboardMap: io.flutter.embedding.android.KeyboardMap$PressingGoal[] pressingGoals
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState INACTIVE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchStart
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: java.lang.String TAG
io.sentry.SentryBaseEvent: java.lang.String DEFAULT_PLATFORM
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long frozenFrameThresholdNanos
io.sentry.Sentry: long classCreationTimestamp
io.sentry.protocol.User: java.lang.String segment
io.sentry.protocol.MetricSummary$JsonKeys: java.lang.String COUNT
io.sentry.Session: java.lang.Long sequence
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
io.sentry.Session$State: io.sentry.Session$State Exited
io.sentry.protocol.App: java.lang.String buildType
io.sentry.TransactionOptions: io.sentry.CustomSamplingContext customSamplingContext
io.sentry.SentryOptions: io.sentry.ISentryExecutorService executorService
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration NANOSECOND
io.sentry.SentryReplayOptions: java.util.Set unmaskViewClasses
io.sentry.instrumentation.file.SentryFileInputStream: io.sentry.instrumentation.file.FileIOSpanManager spanManager
io.sentry.SpanContext: java.util.Map unknown
io.flutter.plugin.text.ProcessTextPlugin: android.content.pm.PackageManager packageManager
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
io.sentry.SentryStackTraceFactory: io.sentry.SentryOptions options
com.sanguinarypc.box_sensors.R$mipmap: int ic_launcher
io.sentry.android.core.SentryFrameMetrics: long slowFrameDelayNanos
io.sentry.android.core.AndroidCpuCollector: java.util.regex.Pattern newLinePattern
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.fragment.app.Fragment: java.lang.String mTag
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
io.sentry.protocol.SentryStackFrame: java.util.List preContext
io.sentry.SentryEnvelopeItemHeader$JsonKeys: java.lang.String LENGTH
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $VALUES
io.flutter.plugin.platform.VirtualDisplayController$2: io.flutter.plugin.platform.VirtualDisplayController this$0
io.sentry.HostnameCache$HostnameCacheThreadFactory: int cnt
io.sentry.android.replay.util.MainLooperHandler: android.os.Handler handler
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: java.lang.String DATA
io.flutter.plugin.common.StandardMessageCodec: java.lang.String TAG
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.DataCategory: io.sentry.DataCategory Default
io.flutter.plugin.platform.VirtualDisplayController: java.lang.String TAG
io.flutter.embedding.android.KeyboardMap: long kUnicodePlane
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String CCCD
io.sentry.protocol.App: java.util.List viewNames
io.flutter.plugin.common.FlutterException: java.lang.String TAG
io.flutter.embedding.android.FlutterTextureView: java.lang.String TAG
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: int replyId
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
io.sentry.TypeCheckHint: java.lang.String ANDROID_CONFIGURATION
io.sentry.Session: io.sentry.Session$State status
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
io.sentry.CheckIn: java.lang.Double duration
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String PAYLOAD
io.sentry.SentryEvent$JsonKeys: java.lang.String MESSAGE
io.sentry.HostnameCache: io.sentry.HostnameCache INSTANCE
io.sentry.flutter.SentryFlutterReplayRecorder: io.sentry.android.replay.ReplayIntegration integration
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String identifier
io.sentry.SentryEnvelopeItemHeader: int length
io.sentry.transport.NoOpEnvelopeCache: io.sentry.transport.NoOpEnvelopeCache instance
io.sentry.TypeCheckHint: java.lang.String SPRING_REQUEST_FILTER_REQUEST
io.sentry.android.core.ANRWatchDog: long lastKnownActiveUiTimestampMs
io.sentry.CpuCollectionData: double cpuUsagePercentage
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.metrics.MetricsHelper: char TAGS_KEY_VALUE_DELIMITER
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: io.sentry.IHub hub
io.sentry.internal.gestures.UiElement: java.lang.String origin
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType ContextMenu
io.sentry.vendor.gson.stream.JsonReader: long peekedLong
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.SpellCheckPlugin spellCheckPlugin
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel$StreamHandler handler
androidx.activity.OnBackPressedCallback: kotlin.jvm.functions.Function0 enabledChangedCallback
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType Focus
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
io.sentry.android.core.internal.util.ContentProviderSecurityChecker: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACE_PROPAGATION_TARGETS
io.sentry.ExternalOptions: java.lang.Boolean sendModules
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
io.sentry.android.core.internal.util.RootChecker: java.lang.String[] rootPackages
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
io.sentry.SentryIntegrationPackageStorage: java.util.Set integrations
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String initialRoute
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
io.sentry.android.core.internal.util.FirstDrawDoneListener$1: io.sentry.android.core.internal.util.FirstDrawDoneListener val$listener
io.sentry.config.FilesystemPropertiesLoader: java.lang.String filePath
io.sentry.android.core.performance.AppStartMetrics: java.util.List activityLifecycles
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
io.sentry.SpanContext$JsonKeys: java.lang.String TRACE_ID
io.sentry.android.replay.ReplayIntegration: io.sentry.SentryOptions options
io.flutter.embedding.android.KeyChannelResponder: java.lang.String TAG
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String TRACE_IDS
io.sentry.android.core.AndroidOptionsInitializer: java.lang.String SENTRY_COMPOSE_GESTURE_INTEGRATION_CLASS_NAME
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState HIDDEN
io.sentry.android.replay.ScreenshotRecorder: java.util.concurrent.atomic.AtomicBoolean contentChanged
io.sentry.SentryCrashLastRunState: java.lang.Boolean crashedLastRun
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
io.sentry.android.core.internal.debugmeta.AssetsDebugMetaLoader: io.sentry.ILogger logger
io.sentry.flutter.SentryFlutter$updateOptions$24$2: kotlin.jvm.internal.Ref$ObjectRef $sdkVersion
io.sentry.metrics.NoopMetricsAggregator: io.sentry.metrics.NoopMetricsAggregator instance
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DART_FLAGS
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $VALUES
io.sentry.SentryEvent: io.sentry.SentryLevel level
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_REPLAY_ID
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: java.lang.String $propertyName$inlined
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_EXPANDED_STATE
io.sentry.Instrumenter: io.sentry.Instrumenter OTEL
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
io.sentry.protocol.App: java.lang.String appBuild
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2: kotlin.jvm.internal.Ref$ObjectRef $screen
androidx.fragment.app.Fragment: java.lang.String mTargetWho
io.sentry.Stack$StackItem: io.sentry.IScope scope
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int MOVE
io.sentry.protocol.Device: java.lang.String family
io.sentry.vendor.gson.stream.JsonWriter: boolean serializeNulls
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String PLATFORM
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern SLEEPING_ON_RE
io.flutter.plugin.editing.SpellCheckPlugin: android.view.textservice.TextServicesManager mTextServicesManager
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information KIBIBYTE
io.sentry.SentryOptions$Proxy: java.lang.String port
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.engine.systemchannels.ScribeChannel$1: io.flutter.embedding.engine.systemchannels.ScribeChannel this$0
io.flutter.embedding.android.KeyboardMap$TogglingGoal: long logicalKey
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
io.sentry.SentryAppStartProfilingOptions: int profilingTracesHz
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource MouseInteraction
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: java.lang.ref.WeakReference currentWindow
io.sentry.android.core.ContextUtils: io.sentry.android.core.util.AndroidLazyEvaluator staticPackageInfo
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String MEASUREMENTS
io.sentry.JsonSerializer: java.nio.charset.Charset UTF_8
io.sentry.JsonObjectDeserializer$1: int[] $SwitchMap$io$sentry$vendor$gson$stream$JsonToken
io.sentry.protocol.Request: java.lang.String cookies
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.sentry.vendor.gson.stream.JsonReader: int[] pathIndices
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.sanguinarypc.box_sensors.R$xml: int device_admin_sample
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState STOPPED
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
androidx.fragment.app.Fragment: int mState
io.sentry.rrweb.RRWebVideoEvent: java.lang.String REPLAY_FRAME_RATE_TYPE_CONSTANT
io.sentry.android.core.internal.gestures.SentryGestureListener: java.lang.String TRACE_ORIGIN
io.sentry.protocol.Device: java.lang.Long freeMemory
io.sentry.MainEventProcessor: io.sentry.SentryExceptionFactory sentryExceptionFactory
io.sentry.protocol.Device: java.util.Map unknown
io.sentry.android.core.internal.util.Debouncer: io.sentry.transport.ICurrentDateProvider timeProvider
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
io.sentry.android.core.SentryAndroidOptions: boolean attachViewHierarchy
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: java.lang.Object $oldValue
io.flutter.embedding.android.FlutterFragment$1: io.flutter.embedding.android.FlutterFragment this$0
io.sentry.MonitorConfig: java.lang.Long recoveryThreshold
io.sentry.protocol.Mechanism: java.lang.String description
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String REPLAY_ID
io.sentry.SpanStatus: io.sentry.SpanStatus INTERNAL_ERROR
io.sentry.protocol.Device: java.lang.String locale
io.flutter.plugin.editing.SpellCheckPlugin: io.flutter.plugin.common.MethodChannel$Result pendingResult
io.flutter.view.FlutterRunArguments: java.lang.String bundlePath
io.sentry.protocol.Gpu: java.lang.String version
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
io.sentry.SpanStatus: io.sentry.SpanStatus INVALID_ARGUMENT
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Gauge
io.sentry.Hub: io.sentry.metrics.MetricsApi metricsApi
io.sentry.SentryTracer$FinishStatus: io.sentry.SpanStatus spanStatus
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Swipe
io.sentry.android.core.AndroidDateUtils: io.sentry.SentryDateProvider dateProvider
io.sentry.SentryOptions$Proxy: java.net.Proxy$Type type
io.sentry.clientreport.DiscardReason: java.lang.String reason
io.sentry.android.replay.WindowRecorder: java.util.concurrent.atomic.AtomicBoolean isRecording
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap activitiesWithOngoingTransactions
io.sentry.protocol.ViewHierarchyNode: java.util.List children
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
androidx.fragment.app.Fragment: int mContainerId
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration HOUR
io.sentry.ShutdownHookIntegration: java.lang.Runtime runtime
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
io.sentry.SentryThreadFactory: io.sentry.SentryOptions options
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
io.sentry.android.core.AndroidProfiler: java.io.File traceFilesDir
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.android.core.internal.gestures.SentryWindowCallback: io.sentry.SentryOptions options
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.SpanStatus: io.sentry.SpanStatus OUT_OF_RANGE
io.sentry.CheckIn: io.sentry.protocol.SentryId checkInId
io.sentry.transport.ProxyAuthenticator: java.lang.String user
io.sentry.protocol.DebugMeta: io.sentry.protocol.SdkInfo sdkInfo
io.sentry.protocol.Device: java.lang.String name
io.flutter.view.AccessibilityBridge: int ACTION_SHOW_ON_SCREEN
io.sentry.protocol.OperatingSystem: java.lang.Boolean rooted
io.sentry.android.core.ScreenshotEventProcessor: io.sentry.android.core.SentryAndroidOptions options
io.sentry.android.core.LifecycleWatcher: java.util.Timer timer
io.sentry.ReplayRecording$JsonKeys: java.lang.String SEGMENT_ID
io.sentry.Breadcrumb$JsonKeys: java.lang.String TIMESTAMP
io.sentry.android.replay.ScreenshotRecorder$prescaledMatrix$2: io.sentry.android.replay.ScreenshotRecorder this$0
io.sentry.DataCategory: io.sentry.DataCategory Monitor
io.sentry.flutter.SentryFlutter$updateOptions$20: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.replay.WindowRecorder: java.util.concurrent.ScheduledFuture capturingTask
io.flutter.view.AccessibilityBridge: float DEFAULT_TRANSITION_ANIMATION_SCALE
io.sentry.vendor.gson.stream.MalformedJsonException: long serialVersionUID
io.flutter.embedding.android.KeyboardMap$KeyPair: long physicalKey
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
io.sentry.PropagationContext: io.sentry.SpanId parentSpanId
io.sentry.protocol.Device: java.lang.String[] archs
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
io.sentry.clientreport.DiscardedEvent: java.util.Map unknown
io.sentry.protocol.Device: java.lang.Double processorFrequency
io.sentry.backpressure.BackpressureMonitor: int INITIAL_CHECK_DELAY_IN_MS
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int CANCEL
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String START_NS
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENABLE_APP_START_PROFILING
io.sentry.Sentry: java.lang.String APP_START_PROFILING_CONFIG_FILE_NAME
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
io.sentry.android.core.ANRWatchDog: long timeoutIntervalMillis
io.sentry.SentryOptions: io.sentry.internal.modules.IModulesLoader modulesLoader
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
io.sentry.android.core.AndroidProfiler: java.util.ArrayDeque slowFrameRenderMeasurements
io.sentry.protocol.Request: java.lang.String method
io.flutter.plugin.platform.PlatformViewWrapper: int top
io.sentry.android.replay.WindowRecorder$RecorderExecutorServiceThreadFactory: int cnt
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
io.sentry.protocol.Browser$JsonKeys: java.lang.String VERSION
io.sentry.android.core.DefaultAndroidEventProcessor: android.content.Context context
io.flutter.embedding.android.FlutterFragment: android.view.ViewTreeObserver$OnWindowFocusChangeListener onWindowFocusChangeListener
io.sentry.SentryOptions: java.util.List inAppExcludes
io.sentry.protocol.SentryRuntime: java.lang.String version
io.sentry.internal.modules.ManifestModulesLoader: java.util.regex.Pattern NAME_AND_VERSION
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: io.flutter.view.TextureRegistry$ImageTextureEntry textureEntry
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
io.sentry.android.core.internal.gestures.SentryGestureListener: java.lang.ref.WeakReference activityRef
io.sentry.Dsn: java.lang.String secretKey
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: java.util.concurrent.atomic.AtomicReference value
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter
io.sentry.config.CompositePropertiesProvider: java.util.List providers
io.sentry.SentryOptions: boolean enableTimeToFullDisplayTracing
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
io.sentry.cache.PersistingScopeObserver: java.lang.String REQUEST_FILENAME
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType[] $VALUES
io.sentry.Session: java.util.UUID sessionId
io.sentry.SentryOptions: io.sentry.backpressure.IBackpressureMonitor backpressureMonitor
io.sentry.android.replay.capture.SessionCaptureStrategy$stop$1: java.io.File $replayCacheDir
io.sentry.protocol.MeasurementValue: java.lang.String KEY_FRAMES_FROZEN
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String IN_APP
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3: java.io.File $screenshot
io.sentry.clientreport.ClientReportKey: java.lang.String reason
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.IHub hub
io.sentry.Session$State: io.sentry.Session$State[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
io.sentry.DirectoryProcessor: io.sentry.ILogger logger
io.sentry.android.replay.video.SimpleMp4FrameMuxer: long frameDurationUsec
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback beforeScreenshotCaptureCallback
io.sentry.SentryReplayOptions: java.lang.String WEB_VIEW_CLASS_NAME
io.sentry.config.ClasspathPropertiesLoader: java.lang.ClassLoader classLoader
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String RELEASE
io.sentry.TypeCheckHint: java.lang.String SPRING_REQUEST_INTERCEPTOR_RESPONSE
io.sentry.SpanOptions: boolean trimEnd
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String POINTER_ID
androidx.fragment.app.Fragment: boolean mRetainInstance
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
io.sentry.cache.tape.QueueFile: int elementCount
io.sentry.flutter.SentryFlutter$updateOptions$11: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.ManifestMetadataReader: java.lang.String NDK_SCOPE_SYNC_ENABLE
io.sentry.SentryOptions: int connectionTimeoutMillis
io.sentry.android.core.ANRWatchDog: android.content.Context context
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
io.sentry.protocol.Device$JsonKeys: java.lang.String SCREEN_DPI
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
io.sentry.SentryReplayOptions: java.lang.Double onErrorSampleRate
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
io.sentry.protocol.SentryTransaction: java.lang.String transaction
io.flutter.plugin.editing.TextInputPlugin: java.lang.String TAG
androidx.fragment.app.Fragment: boolean mDetached
io.flutter.view.AccessibilityBridge: float SCROLL_EXTENT_FOR_INFINITY
io.flutter.plugin.common.StandardMessageCodec: byte LONG_ARRAY
io.flutter.embedding.android.FlutterFragment: androidx.activity.OnBackPressedCallback onBackPressedCallback
io.sentry.SentryTracer: io.sentry.Instrumenter instrumenter
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
io.sentry.CircularFifoQueue: int end
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback onBackInvokedCallback
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.sentry.SentryEvent: java.util.List fingerprint
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.pm.PackageManager mPackageManager
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
io.sentry.Span: java.util.concurrent.atomic.AtomicBoolean isFinishing
io.sentry.protocol.Request: java.lang.String queryString
io.sentry.android.core.EnvelopeFileObserverIntegration: io.sentry.android.core.EnvelopeFileObserver observer
io.flutter.embedding.android.KeyData: long logicalKey
io.sentry.ExternalOptions: java.util.List contextTags
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String HEIGHT
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendTransactionCallback beforeSendTransaction
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
io.sentry.protocol.SdkInfo: java.lang.Integer versionPatchlevel
io.sentry.PropagationContext: io.sentry.protocol.SentryId traceId
com.sanguinarypc.box_sensors.R$style: int NormalTheme
io.sentry.util.MapObjectWriter: java.util.Map root
io.sentry.protocol.SentryThread: java.lang.Boolean crashed
androidx.fragment.app.Fragment: boolean mUserVisibleHint
io.sentry.protocol.MeasurementValue: java.util.Map unknown
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.SentryDate lastPausedTime
io.sentry.SentryReplayOptions: long errorReplayDuration
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
io.sentry.exception.InvalidSentryTraceHeaderException: java.lang.String sentryTraceHeader
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.sanguinarypc.box_sensors.R$drawable: int launch_background
androidx.fragment.app.FragmentActivity: boolean mStopped
io.sentry.SentryOptions$Cron: java.lang.Long defaultMaxRuntime
io.sentry.protocol.Device$JsonKeys: java.lang.String BRAND
io.sentry.DefaultTransactionPerformanceCollector: java.util.Map performanceDataMap
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String DATA
io.sentry.android.replay.util.FixedWindowCallback: android.view.Window$Callback delegate
io.sentry.NoOpScope: io.sentry.NoOpScope instance
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
io.sentry.protocol.SentryStackFrame: java.lang.String function
io.sentry.instrumentation.file.FileOutputStreamInitData: java.io.File file
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$ViewDelegate viewDelegate
io.sentry.android.replay.GeneratedVideo: java.io.File video
io.sentry.Dsn: java.lang.String path
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.view.Surface surface
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
io.flutter.view.AccessibilityBridge: java.lang.String TAG
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: long lastCapabilityNanos
io.sentry.SentryOptions: java.lang.Double sampleRate
io.sentry.util.Random: long multiplier
io.sentry.SpanStatus: io.sentry.SpanStatus NOT_FOUND
io.sentry.SentryExecutorService: java.util.concurrent.ScheduledExecutorService executorService
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget sender
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource CustomElement
io.sentry.TypeCheckHint: java.lang.String GRAPHQL_HANDLER_PARAMETERS
io.sentry.UncaughtExceptionHandler$Adapter: io.sentry.UncaughtExceptionHandler$Adapter INSTANCE
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
io.sentry.protocol.App$JsonKeys: java.lang.String START_TYPE
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.res.AssetManager mAssetManager
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_FLUTTER_ASSETS_DIR
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason NETWORK_ERROR
io.sentry.SpanContext: io.sentry.SpanId spanId
io.sentry.SentryNanotimeDate: long nanos
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map data
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: io.sentry.ILogger logger
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String OLD_GEN_HEAP_SIZE_META_DATA_KEY
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
io.sentry.instrumentation.file.SentryFileInputStream: java.io.FileInputStream delegate
io.sentry.UncaughtExceptionHandlerIntegration: io.sentry.IHub hub
io.sentry.ExternalOptions: java.lang.String dist
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: android.content.Context context
io.sentry.protocol.MetricSummary: java.util.Map unknown
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DART_ENTRYPOINT
io.sentry.vendor.gson.stream.JsonWriter: boolean htmlSafe
io.sentry.android.replay.ReplayIntegration: kotlin.Lazy random$delegate
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
io.sentry.android.core.ManifestMetadataReader: java.lang.String SDK_VERSION
io.sentry.android.core.AndroidProfiler: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.flutter.plugin.platform.VirtualDisplayController: int viewId
io.sentry.SentryExceptionFactory: io.sentry.SentryStackTraceFactory sentryStackTraceFactory
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_END_OBJECT
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
io.sentry.NoOpEnvelopeReader: io.sentry.NoOpEnvelopeReader instance
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleBreadcrumbs
io.sentry.android.core.PerformanceAndroidEventProcessor: boolean sentStartMeasurement
io.sentry.protocol.ViewHierarchy: java.util.Map unknown
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
io.sentry.protocol.SentryStackTrace: java.util.Map registers
io.sentry.protocol.Gpu$JsonKeys: java.lang.String MEMORY_SIZE
io.sentry.Session$JsonKeys: java.lang.String ERRORS
io.sentry.rrweb.RRWebSpanEvent: java.lang.String description
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
io.sentry.util.DebugMetaPropertiesApplier: java.lang.String DEBUG_META_PROPERTIES_FILENAME
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource TouchMove
io.sentry.protocol.App: java.lang.String appIdentifier
io.sentry.SentryOptions: java.lang.Long idleTimeout
io.sentry.android.core.AndroidCpuCollector: long numCores
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_VERBOSE_LOGGING
io.sentry.protocol.MeasurementValue: java.lang.String KEY_FRAMES_DELAY
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$JsonKeys: java.lang.String SOURCE
io.sentry.protocol.ViewHierarchyNode: java.lang.Double y
io.sentry.protocol.SentryStackFrame: java.lang.Integer lineno
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.sentry.vendor.Base64$Encoder: boolean $assertionsDisabled
io.sentry.ProfilingTransactionData: java.util.Map unknown
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.sentry.metrics.GaugeMetric: int count
io.sentry.android.core.SentryPerformanceProvider: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.protocol.Request$JsonKeys: java.lang.String COOKIES
io.sentry.android.replay.gestures.GestureRecorder$SentryReplayGestureRecorder: io.sentry.android.replay.gestures.TouchRecorderCallback touchRecorderCallback
io.sentry.protocol.MetricSummary: double max
io.sentry.cache.tape.QueueFile$Element: int HEADER_LENGTH
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
io.sentry.protocol.SentryThread: java.lang.String name
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_TO_OFFSET
io.sentry.android.core.ManifestMetadataReader: java.lang.String SESSION_TRACKING_ENABLE
io.sentry.SpanContext: io.sentry.TracesSamplingDecision samplingDecision
io.sentry.flutter.SentryFlutter$updateOptions$24$1: kotlin.jvm.internal.Ref$ObjectRef $sdkVersion
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String USER
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int PAN_ZOOM_END
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_BEGIN_ARRAY
io.flutter.embedding.android.FlutterActivity$1: io.flutter.embedding.android.FlutterActivity this$0
io.sentry.rrweb.RRWebInteractionEvent: int pointerId
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
androidx.fragment.app.Fragment: boolean mHidden
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
io.sentry.TypeCheckHint: java.lang.String APOLLO_RESPONSE
io.sentry.internal.modules.CompositeModulesLoader: java.util.List loaders
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String UNIT_HZ
io.sentry.android.core.LifecycleWatcher: java.util.concurrent.atomic.AtomicLong lastUpdatedSession
kotlinx.coroutines.CancelledContinuation: int _resumed
io.sentry.internal.debugmeta.ResourcesDebugMetaLoader: java.lang.ClassLoader classLoader
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String DURATION
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String IDENTIFIER
io.sentry.SentryReplayOptions$SentryReplayQuality: int screenshotQuality
io.sentry.android.core.LifecycleWatcher: boolean enableAppLifecycleBreadcrumbs
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.atomic.AtomicBoolean isTerminating
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory delegateFactory
io.sentry.android.core.SentryAndroidDateProvider: io.sentry.SentryDateProvider dateProvider
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.sentry.SentryTracer: io.sentry.Span root
io.sentry.protocol.SentryException$JsonKeys: java.lang.String TYPE
io.sentry.protocol.SentryTransaction: java.util.Map metricSummaries
io.sentry.SentryOptions: java.util.List ignoredCheckIns
io.flutter.embedding.android.KeyboardMap: long kAndroidPlane
io.sentry.TypeCheckHint: java.lang.String ANDROID_NAV_DESTINATION
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: android.net.Network currentNetwork
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
io.sentry.protocol.Device$JsonKeys: java.lang.String FAMILY
io.sentry.android.core.AndroidTransactionProfiler: int transactionsCounter
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.List positions
io.sentry.protocol.SdkInfo: java.lang.String sdkName
io.sentry.metrics.EncodedMetrics: java.util.Map buckets
io.flutter.embedding.android.AndroidTouchProcessor: int IMPLICIT_VIEW_ID
io.sentry.android.core.SentryPerformanceProvider: long sdkInitMillis
io.sentry.exception.ExceptionMechanismException: java.lang.Thread thread
io.sentry.SpanDataConvention: java.lang.String THREAD_NAME
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState RESUMED
io.sentry.Session: java.lang.String environment
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String TYPE
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.util.thread.MainThreadChecker: io.sentry.util.thread.MainThreadChecker instance
io.sentry.SentryReplayOptions: java.lang.String unmaskViewContainerClass
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int bufferWidth
io.sentry.android.core.internal.threaddump.Lines: int pos
io.sentry.SentryExecutorService$SentryExecutorServiceThreadFactory: int cnt
io.flutter.embedding.android.FlutterView: android.database.ContentObserver systemSettingsObserver
io.sentry.SentryReplayEvent: java.io.File videoFile
io.flutter.embedding.android.FlutterActivity: java.lang.String TAG
io.sentry.protocol.Device: java.lang.String brand
io.sentry.android.replay.ReplayIntegration: io.sentry.transport.ICurrentDateProvider dateProvider
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Click
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String TTFD_OP
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
io.sentry.SentryCrashLastRunState: io.sentry.SentryCrashLastRunState INSTANCE
io.sentry.android.core.UserInteractionIntegration: io.sentry.android.core.SentryAndroidOptions options
io.sentry.ProfilingTraceData: java.lang.String TRUNCATION_REASON_BACKGROUNDED
io.sentry.instrumentation.file.SentryFileOutputStream: io.sentry.instrumentation.file.FileIOSpanManager spanManager
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_ATTACH_ENGINE_TO_ACTIVITY
io.sentry.Breadcrumb: java.lang.String message
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
io.sentry.SentryLockReason$JsonKeys: java.lang.String PACKAGE_NAME
io.flutter.embedding.android.AndroidTouchProcessor: java.util.Map ongoingPans
io.sentry.SentryReplayEvent: java.util.Map unknown
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.ITransportGate transportGate
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.FullyDisplayedReporter fullyDisplayedReporter
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: io.sentry.ILogger logger
io.sentry.CheckIn$JsonKeys: java.lang.String DURATION
io.sentry.android.core.AppLifecycleIntegration: io.sentry.android.core.SentryAndroidOptions options
io.sentry.android.replay.RootViewsSpy: java.util.ArrayList delegatingViewList
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: long flushTimeoutMillis
io.sentry.JsonObjectSerializer: java.lang.String OBJECT_PLACEHOLDER
io.sentry.flutter.SentryFlutter: java.lang.String ANDROID_SDK
io.sentry.android.core.SpanFrameMetricsCollector: io.sentry.SentryNanotimeDate EMPTY_NANO_TIME
io.sentry.SpanStatus: io.sentry.SpanStatus UNAUTHENTICATED
io.sentry.cache.tape.QueueFile: long fileLength
io.sentry.TypeCheckHint: java.lang.String SPRING_RESOLVER_RESPONSE
io.sentry.SentryEvent$JsonKeys: java.lang.String EXCEPTION
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap ttidSpanMap
io.sentry.SentryAppStartProfilingOptions: java.lang.Double profileSampleRate
io.sentry.NoOpSentryClient: io.sentry.NoOpSentryClient instance
io.sentry.protocol.Gpu: java.lang.String name
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String WIDTH
io.sentry.JsonObjectDeserializer$TokenPrimitive: java.lang.Object value
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_SKIA_DETERMINISTIC_RENDERING
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.Map unknown
io.sentry.SentryAppStartProfilingOptions: boolean isProfilingEnabled
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.plugin.platform.PlatformViewRenderTarget renderTarget
io.sentry.android.core.DeviceInfoUtil: android.content.Context context
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
io.sentry.profilemeasurements.ProfileMeasurement$JsonKeys: java.lang.String VALUES
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_EXP_DIGIT
io.sentry.android.replay.ReplayCache: java.lang.Object encoderLock
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference activeSink
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_ARRAY
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String TAG
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.transport.ICurrentDateProvider dateProvider
io.sentry.TypeCheckHint: java.lang.String SENTRY_DART_SDK_NAME
io.sentry.SentryOptions$Cron: java.lang.Long defaultRecoveryThreshold
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: long messageData
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.Context context
io.sentry.transport.QueuedThreadPoolExecutor: io.sentry.SentryDateProvider dateProvider
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String TIMESTAMP
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
io.sentry.vendor.Base64$Decoder: int SKIP
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: float x
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String PLUGINS_RESTORATION_BUNDLE_KEY
io.sentry.SentryEnvelopeItem: java.nio.charset.Charset UTF_8
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
io.sentry.SentryTracer$FinishStatus: io.sentry.SentryTracer$FinishStatus NOT_FINISHED
io.sentry.TypeCheckHint: java.lang.String SENTRY_TYPE_CHECK_HINT
io.sentry.vendor.gson.stream.JsonWriter: boolean lenient
io.sentry.rrweb.RRWebMetaEvent$JsonKeys: java.lang.String DATA
io.sentry.SentryItemType: io.sentry.SentryItemType Statsd
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.sentry.vendor.Base64$Decoder: int[] DECODE
io.sentry.android.core.internal.util.Debouncer: long waitTimeMs
io.sentry.SpanDataConvention: java.lang.String HTTP_STATUS_CODE_KEY
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
io.sentry.TypeCheckHint: java.lang.String SENTRY_JAVASCRIPT_SDK_NAME
io.sentry.Session: java.util.Map unknown
io.sentry.TypeCheckHint: java.lang.String ANDROID_MOTION_EVENT
io.sentry.cache.PersistingScopeObserver: io.sentry.SentryOptions options
io.sentry.protocol.Device: java.lang.Boolean lowMemory
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern NATIVE_NO_LOC_RE
io.sentry.SentryOptions: boolean debug
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.sentry.android.core.AnrV2Integration$AnrV2Hint: boolean isBackgroundAnr
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String TAG
io.sentry.protocol.Device$JsonKeys: java.lang.String ARCHS
io.sentry.android.core.ActivityLifecycleIntegration: java.util.concurrent.Future ttfdAutoCloseFuture
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion Companion
kotlinx.coroutines.JobSupport: java.lang.Object _state
io.sentry.MemoryCollectionData: long usedNativeMemory
io.sentry.cache.PersistingScopeObserver: java.lang.String FINGERPRINT_FILENAME
io.flutter.embedding.android.AndroidTouchProcessor: int DEFAULT_VERTICAL_SCROLL_FACTOR
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
io.sentry.SentryEvent: java.lang.String logger
io.flutter.embedding.android.FlutterView: androidx.core.util.Consumer windowInfoListener
io.sentry.TracesSampler: io.sentry.SentryOptions options
io.sentry.exception.SentryHttpClientException: long serialVersionUID
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.os.Handler handler
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToSharedLibraryNames
io.sentry.protocol.Device: java.lang.Long freeStorage
io.sentry.CheckInStatus: io.sentry.CheckInStatus IN_PROGRESS
androidx.fragment.app.FragmentActivity: boolean mResumed
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: int nextConfigGeneration
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED
io.sentry.SentryOptions: io.sentry.SentryLevel diagnosticLevel
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.util.Map nameToSessionId
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality LOW
io.sentry.TypeCheckHint: java.lang.String ANDROID_VIEW
io.sentry.vendor.Base64: int NO_CLOSE
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.sentry.ProfilingTraceData: java.lang.String durationNs
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource[] $VALUES
io.sentry.protocol.User: java.util.Map data
androidx.fragment.app.Fragment: boolean mCalled
io.sentry.protocol.SentryException$JsonKeys: java.lang.String MODULE
io.sentry.SentrySpanStorage: io.sentry.SentrySpanStorage INSTANCE
io.sentry.protocol.Device$JsonKeys: java.lang.String ONLINE
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_IS_EMULATOR
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.jvm.functions.Function1 replayCacheProvider
io.sentry.transport.HttpConnection: io.sentry.SentryOptions options
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$2: com.lib.flutter_blue_plus.FlutterBluePlusPlugin this$0
io.sentry.Hint: java.util.List attachments
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_EXP_SIGN
io.sentry.SentryLockReason: java.lang.String packageName
io.sentry.android.replay.WindowRecorder$onRootViewsChanged$1$1: android.view.View $root
io.sentry.protocol.Device$JsonKeys: java.lang.String ORIENTATION
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.LifecycleChannel: java.lang.String CHANNEL_NAME
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.sentry.protocol.SentryStackFrame: java.lang.Integer colno
io.sentry.android.core.ManifestMetadataReader: java.lang.String ATTACH_SCREENSHOT
io.sentry.protocol.Device: java.lang.Integer screenDpi
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
io.sentry.metrics.Metric: java.lang.String key
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_VULKAN_VALIDATION
io.sentry.TypeCheckHint: java.lang.String WEBFLUX_FILTER_RESPONSE
io.sentry.android.core.DeviceInfoUtil$1: int[] $SwitchMap$io$sentry$IConnectionStatusProvider$ConnectionStatus
io.sentry.protocol.Mechanism: java.util.Map meta
io.sentry.SentryEnvelopeItemHeader: java.lang.String fileName
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern WAITING_ON_RE
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.android.replay.capture.BufferCaptureStrategy$Companion Companion
io.flutter.embedding.android.KeyboardMap: java.util.HashMap keyCodeToLogical
io.sentry.rrweb.RRWebEvent: long timestamp
io.sentry.UserFeedback$JsonKeys: java.lang.String COMMENTS
io.flutter.plugin.common.BasicMessageChannel: java.lang.String TAG
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String PROFILE_ID
io.sentry.protocol.Request: java.lang.String url
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback beforeViewHierarchyCaptureCallback
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String TOP
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String MEASUREMENTS
io.sentry.protocol.SdkInfo: java.lang.Integer versionMajor
io.sentry.ExternalOptions: java.lang.Boolean sendClientReports
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.lang.String TAG
io.sentry.Dsn: java.lang.String projectId
io.sentry.cache.PersistingScopeObserver: java.lang.String TRANSACTION_FILENAME
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_IMPELLER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
io.flutter.embedding.engine.dart.DartMessenger: java.lang.Object handlersLock
io.sentry.SentryOptions$Proxy: java.lang.String pass
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: android.graphics.Rect childRect
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String SERVER_NAME
io.sentry.Scope: io.sentry.SentryLevel level
io.sentry.android.core.AndroidProfiler$1: float lastRefreshRate
io.sentry.android.replay.LastSegmentData: java.util.List events
io.sentry.protocol.Device$JsonKeys: java.lang.String SCREEN_HEIGHT_PIXELS
io.sentry.android.core.ManifestMetadataReader: java.lang.String PROGUARD_UUID
io.sentry.android.core.ScreenshotEventProcessor: long DEBOUNCE_WAIT_TIME_MS
androidx.fragment.app.Fragment: int mContentLayoutId
io.sentry.android.core.AndroidProfiler: boolean isRunning
io.sentry.metrics.MetricsHelper: char TAGS_PAIR_DELIMITER
io.sentry.android.core.AndroidCpuCollector: long lastRealtimeNanos
io.sentry.android.core.internal.util.RootChecker: java.lang.Runtime runtime
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$4: java.util.Date $segmentTimestamp
io.sentry.CheckIn$JsonKeys: java.lang.String MONITOR_CONFIG
io.sentry.protocol.Device: java.util.Date bootTime
io.sentry.flutter.SentryFlutter$updateOptions$14: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.AndroidProfiler: java.io.File traceFile
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
io.sentry.protocol.Request$JsonKeys: java.lang.String URL
io.sentry.SentryClient: io.sentry.IMetricsAggregator metricsAggregator
io.sentry.protocol.SdkInfo$JsonKeys: java.lang.String VERSION_PATCHLEVEL
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.ScreenshotRecorderConfig recorderConfig
io.sentry.SpotlightIntegration: io.sentry.ISentryExecutorService executorService
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String DATA
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String IMAGE_ADDR
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern JNI_RE
io.sentry.SentryLockReason: int type
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: long id
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
io.flutter.plugin.editing.FlutterTextUtils: int CARRIAGE_RETURN
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1: io.flutter.embedding.engine.systemchannels.BackGestureChannel this$0
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int MAX_IMAGES
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: android.media.ImageReader reader
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.SentryClient: boolean enabled
io.sentry.Span: io.sentry.util.LazyEvaluator metricsAggregator
io.sentry.Stack$StackItem: io.sentry.SentryOptions options
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
io.sentry.transport.RateLimiter: io.sentry.SentryOptions options
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
io.sentry.Baggage$DSCKeys: java.lang.String USER_ID
io.flutter.plugin.editing.FlutterTextUtils: int COMBINING_ENCLOSING_KEYCAP
io.sentry.flutter.SentryFlutter$updateOptions$24: kotlin.jvm.internal.Ref$ObjectRef $sdkVersion
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SYSTRACE
io.sentry.util.Random: long mask
io.sentry.android.core.BuildInfoProvider: io.sentry.ILogger logger
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
io.sentry.SpanStatus: io.sentry.SpanStatus UNIMPLEMENTED
io.sentry.SentryOptions: boolean enableSpotlight
io.sentry.DataCategory: io.sentry.DataCategory Span
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Distribution
io.sentry.android.replay.capture.SessionCaptureStrategy: java.lang.String TAG
io.sentry.Scope: java.lang.String screen
io.sentry.Span: io.sentry.SentryDate timestamp
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalTop
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: float startX
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DART_FLAGS
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.fragment.app.Fragment: int mBackStackNesting
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner
io.sentry.android.core.ActivityFramesTracker: androidx.core.app.FrameMetricsAggregator frameMetricsAggregator
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String CONTAINER
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.lang.String TAG
io.sentry.clientreport.ClientReportRecorder: io.sentry.clientreport.IClientReportStorage storage
io.sentry.backpressure.BackpressureMonitor: int downsampleFactor
io.sentry.android.core.LifecycleWatcher: boolean enableSessionTracking
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.sentry.vendor.gson.stream.JsonReader: int limit
io.sentry.android.core.EnvelopeFileObserverIntegration: io.sentry.ILogger logger
io.sentry.EnvelopeSender: io.sentry.ILogger logger
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_IMPELLER_META_DATA_KEY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
io.sentry.ProfilingTraceData: java.lang.String buildId
io.sentry.SentryOptions: java.util.Set bundleIds
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener
io.sentry.DirectoryProcessor: io.sentry.IHub hub
io.flutter.view.VsyncWaiter$FrameCallback: long cookie
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.sentry.android.replay.util.AndroidTextLayout: int $stable
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$JsonKeys: java.lang.String X
io.sentry.vendor.gson.stream.JsonReader: java.lang.String peekedString
io.sentry.MainEventProcessor: io.sentry.HostnameCache hostnameCache
io.flutter.plugin.editing.SpellCheckPlugin: int MAX_SPELL_CHECK_SUGGESTIONS
io.sentry.rrweb.RRWebVideoEvent: int frameRate
io.sentry.config.FilesystemPropertiesLoader: io.sentry.ILogger logger
io.sentry.android.replay.ReplayLifecycle: io.sentry.android.replay.ReplayState currentState
androidx.fragment.app.Fragment: int STARTED
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$4: java.util.List $recordingPayload
io.sentry.JsonObjectDeserializer$TokenArray: java.util.ArrayList value
io.sentry.protocol.Response: java.lang.String TYPE
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: io.sentry.SentryDateProvider dateProvider
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit[] $VALUES
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit MONTH
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan sdkInitTimeSpan
io.sentry.SynchronizedCollection: java.util.Collection collection
io.sentry.transport.StdoutTransport: io.sentry.ISerializer serializer
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0$inline_fun
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
io.sentry.android.replay.util.ComposeTextLayout: boolean hasFillModifier
io.sentry.Baggage$DSCKeys: java.util.List ALL
io.sentry.MonitorScheduleType: io.sentry.MonitorScheduleType CRONTAB
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String METHOD_IS_STYLUS_HANDWRITING_AVAILABLE
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern WAITING_TO_LOCK_RE
io.sentry.android.core.AnrIntegration$AnrHint: boolean isBackgroundAnr
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
io.sentry.cache.PersistingOptionsObserver: java.lang.String TAGS_FILENAME
io.sentry.Attachment: java.lang.String pathname
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information PEBIBYTE
io.sentry.TraceContext$JsonKeys: java.lang.String RELEASE
io.sentry.android.core.internal.gestures.SentryGestureListener: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType activeEventType
io.sentry.flutter.SentryFlutterPlugin: io.flutter.plugin.common.MethodChannel channel
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String BUILD_ID
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String CODE_ID
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String TIMESTAMP
io.sentry.android.core.ActivityLifecycleIntegration: long lastPausedUptimeMillis
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: java.util.concurrent.atomic.AtomicReference value
io.flutter.plugin.editing.FlutterTextUtils: int CANCEL_TAG
io.sentry.SentryBaseEvent: java.util.List breadcrumbs
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
io.sentry.android.replay.ReplayIntegration: io.sentry.ReplayBreadcrumbConverter replayBreadcrumbConverter
io.sentry.SentryBaseEvent: io.sentry.protocol.SentryId eventId
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1: io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget this$0
io.sentry.protocol.SentrySpan: java.lang.String op
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_CPU_USAGE
io.sentry.protocol.SentryThread: java.lang.Boolean daemon
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: int $stable
io.flutter.plugin.common.EventChannel: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.lang.String TAG
io.sentry.Session: java.lang.String abnormalMechanism
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long endNanos
io.sentry.android.core.ManifestMetadataReader: java.lang.String RELEASE
io.sentry.flutter.SentryFlutterPlugin$setupReplay$2: io.sentry.flutter.SentryFlutterPlugin this$0
io.sentry.android.core.cache.AndroidEnvelopeCache: io.sentry.transport.ICurrentDateProvider currentDateProvider
io.flutter.embedding.engine.systemchannels.SystemChannel: java.lang.String TAG
io.sentry.android.core.AndroidProfiler$ProfileStartData: long startNanos
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_CACHED_ENGINE_GROUP_ID
io.sentry.Sentry: boolean globalHubMode
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay$Callback callback
io.sentry.rrweb.RRWebInteractionMoveEvent$JsonKeys: java.lang.String DATA
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$OnPreAttachedListener mSavedStateAttachListener
io.sentry.protocol.Device: java.lang.Integer screenHeightPixels
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner
io.sentry.protocol.SentryTransaction: java.lang.Double timestamp
io.sentry.protocol.SentryThread: java.lang.String state
io.sentry.rrweb.RRWebBreadcrumbEvent: double breadcrumbTimestamp
io.sentry.flutter.SentryFlutter$updateOptions$21: io.sentry.flutter.SentryFlutter this$0
io.sentry.protocol.App$JsonKeys: java.lang.String BUILD_TYPE
io.sentry.android.replay.video.SimpleVideoEncoder: io.sentry.android.replay.video.SimpleMp4FrameMuxer frameMuxer
io.sentry.SentryOptions: boolean printUncaughtStackTrace
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: boolean succeeded
io.sentry.vendor.Base64$Decoder: int value
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String HEIGHT
io.sentry.Breadcrumb$JsonKeys: java.lang.String DATA
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String HANDLED
io.sentry.RequestDetails: java.net.URL url
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory factory
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: java.lang.Object $value
io.sentry.Baggage: java.lang.Integer MAX_BAGGAGE_STRING_LENGTH
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.sentry.TracesSamplingDecision: java.lang.Double sampleRate
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
io.sentry.SentryOptions: java.util.List integrations
io.sentry.vendor.gson.stream.JsonScope: int NONEMPTY_OBJECT
io.sentry.android.core.AndroidProfiler: long profileStartNanos
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
io.sentry.android.replay.video.SimpleVideoEncoder: io.sentry.android.replay.video.MuxerConfig muxerConfig
io.sentry.JsonReflectionObjectSerializer: java.util.Set visiting
io.sentry.Session: java.lang.String ipAddress
io.sentry.clientreport.DiscardedEvent: java.lang.String reason
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String appBundlePath
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
io.sentry.instrumentation.file.FileIOSpanManager: io.sentry.SentryOptions options
io.sentry.cache.tape.QueueFile: boolean zero
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String METHOD_IS_FEATURE_AVAILABLE
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
io.sentry.protocol.SentryException$JsonKeys: java.lang.String MECHANISM
io.sentry.SentryOptions: java.util.List eventProcessors
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState RESUMED
io.sentry.protocol.SentryException: io.sentry.protocol.SentryStackTrace stacktrace
io.sentry.android.core.ManifestMetadataReader: java.lang.String IDLE_TIMEOUT
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType Counter
io.sentry.ProfilingTraceData: java.lang.String platform
io.sentry.android.replay.video.SimpleMp4FrameMuxer: int videoFrames
io.sentry.protocol.Device: java.lang.Float batteryTemperature
io.sentry.OutboxSender: io.sentry.ISerializer serializer
io.sentry.MetricsAggregator: io.sentry.SentryDateProvider dateProvider
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.dart.DartMessenger: java.lang.String TAG
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_SIGN
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
io.flutter.embedding.android.KeyData: io.flutter.embedding.android.KeyData$Type type
io.sentry.ProfilingTraceData: java.lang.String deviceLocale
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $VALUES
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
io.sentry.CheckIn$JsonKeys: java.lang.String STATUS
io.sentry.android.core.SpanFrameMetricsCollector$Frame: boolean isSlow
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$1: com.lib.flutter_blue_plus.FlutterBluePlusPlugin this$0
io.sentry.Stack: io.sentry.ILogger logger
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String NORMAL_THEME_META_DATA_KEY
io.sentry.SentryTracer: io.sentry.protocol.SentryId eventId
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kUp
io.sentry.android.core.ActivityFramesTracker: java.util.Map activityMeasurements
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.le.ScanCallback scanCallback
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngineGroup group
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_TRUE
io.sentry.NoOpReplayController: io.sentry.NoOpReplayController instance
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
io.sentry.SentryReplayEvent: java.util.List traceIds
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
io.sentry.android.replay.WindowSpy: io.sentry.android.replay.WindowSpy INSTANCE
io.sentry.SentryOptions: java.lang.String distinctId
io.sentry.android.core.internal.util.RootChecker: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.protocol.SdkInfo$JsonKeys: java.lang.String VERSION_MAJOR
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String REPLAY_TYPE
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
io.sentry.SentryOptions: java.lang.String spotlightConnectionUrl
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.transport.RateLimiter: java.lang.Object timerLock
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int PAN_ZOOM_UPDATE
io.sentry.android.core.SpanFrameMetricsCollector: boolean enabled
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type SCROLLABLE
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
io.sentry.SentryLockReason: java.lang.String address
io.sentry.cache.tape.FileObjectQueue: io.sentry.cache.tape.FileObjectQueue$DirectByteArrayOutputStream bytes
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
io.sentry.android.core.ContextUtils: io.sentry.android.core.util.AndroidLazyEvaluator deviceName
io.sentry.android.core.AnrV2Integration$ParseResult: io.sentry.android.core.AnrV2Integration$ParseResult$Type type
io.sentry.android.core.DeviceInfoUtil: io.sentry.android.core.DeviceInfoUtil instance
io.sentry.PerformanceCollectionData: io.sentry.MemoryCollectionData memoryData
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
io.sentry.android.core.EnvelopeFileObserver: java.lang.String rootPath
io.sentry.HostnameCache: long cacheDuration
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_END_ARRAY
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String ORIGIN
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2: io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2 INSTANCE
io.sentry.android.core.Installation: java.lang.String INSTALLATION
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.String TAG
io.sentry.metrics.MetricsHelper: long FLUSHER_SLEEP_TIME_MS
io.sentry.protocol.User$JsonKeys: java.lang.String NAME
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
io.sentry.android.core.EnvelopeFileObserverIntegration: boolean isClosed
io.sentry.SpanDataConvention: java.lang.String FRAMES_DELAY
io.sentry.SpanDataConvention: java.lang.String DB_SYSTEM_KEY
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
io.sentry.metrics.Metric: java.util.Map tags
io.flutter.embedding.android.FlutterFragment: java.lang.String TAG
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
io.sentry.vendor.gson.stream.JsonScope: int NONEMPTY_DOCUMENT
io.sentry.SentryOptions: io.sentry.FullyDisplayedReporter fullyDisplayedReporter
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource CanvasMutation
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
io.sentry.profilemeasurements.ProfileMeasurement: java.util.Collection values
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String FRAME_RATE_TYPE
io.sentry.protocol.OperatingSystem$JsonKeys: java.lang.String BUILD
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_ISOLATE_SNAPSHOT_DATA
io.flutter.plugin.common.ErrorLogResult: int level
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator: java.util.Iterator iterator
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Mutation
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.sentry.android.core.ViewHierarchyEventProcessor: long CAPTURE_TIMEOUT_MS
io.sentry.SentryItemType: io.sentry.SentryItemType Feedback
io.sentry.android.core.AndroidTransactionProfiler: boolean isProfilingEnabled
io.sentry.flutter.SentryFlutter$updateOptions$2: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.TypeCheckHint: java.lang.String ANDROID_FRAGMENT
io.sentry.protocol.Response$JsonKeys: java.lang.String BODY_SIZE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
io.sentry.protocol.SentryStackFrame: io.sentry.SentryLockReason lock
io.sentry.MonitorSchedule$JsonKeys: java.lang.String UNIT
io.sentry.protocol.User: java.lang.String ipAddress
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: java.lang.Object $value
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
io.sentry.protocol.User: java.lang.String email
io.sentry.PropagationContext: java.lang.Boolean sampled
io.sentry.android.core.AnrV2Integration$ParseResult: java.util.List threads
io.flutter.embedding.android.KeyEmbedderResponder: java.util.HashMap pressingRecords
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.sentry.protocol.DebugMeta$JsonKeys: java.lang.String IMAGES
io.sentry.HubAdapter: io.sentry.HubAdapter INSTANCE
io.sentry.Span: io.sentry.SentryTracer transaction
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.NdkHandlerStrategy ndkHandlerStrategy
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager windowFrameMetricsManager
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String ALPHA
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.editing.SpellCheckPlugin: android.view.textservice.SpellCheckerSession mSpellCheckerSession
io.sentry.SentryOptions: boolean enableDefaultTagsForMetrics
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
io.sentry.SpanContext: java.util.Map tags
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String TAGS
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmap$2: io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmap$2 INSTANCE
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: int combiningCharacter
io.sentry.Session: java.lang.String userAgent
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.sentry.protocol.Device$JsonKeys: java.lang.String TIMEZONE
io.sentry.RequestDetailsResolver: java.lang.String SENTRY_AUTH
io.sentry.DataCategory: io.sentry.DataCategory Replay
io.sentry.protocol.SentryThread: java.lang.Boolean current
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator serializer
io.sentry.TraceContext: io.sentry.protocol.SentryId replayId
io.sentry.android.replay.ReplayCache$persistSegmentValues$2: io.sentry.android.replay.ReplayCache$persistSegmentValues$2 INSTANCE
io.sentry.cache.tape.QueueFile$Builder: java.io.File file
io.sentry.Hint: java.util.Map PRIMITIVE_MAPPINGS
io.sentry.android.replay.capture.SessionCaptureStrategy$pause$1: io.sentry.android.replay.capture.SessionCaptureStrategy this$0
io.sentry.TraceContext: java.lang.String transaction
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: kotlin.jvm.functions.Function3 $onChange
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType[] $VALUES
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler
io.sentry.transport.AsyncHttpTransport: io.sentry.SentryOptions options
io.sentry.SentryLockReason: int BLOCKED
io.flutter.view.AccessibilityBridge: boolean isReleased
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SpellCheckChannel spellCheckChannel
io.sentry.protocol.User$JsonKeys: java.lang.String ID
io.sentry.vendor.Base64$Encoder: boolean do_newline
io.sentry.android.core.performance.AppStartMetrics: java.util.concurrent.atomic.AtomicBoolean firstDrawDone
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String CONTEXTS
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String FRAMEWORK_RESTORATION_BUNDLE_KEY
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type NO_DUMP
io.sentry.protocol.MeasurementValue: java.lang.Number value
io.sentry.util.TracingUtils$TracingHeaders: io.sentry.BaggageHeader baggageHeader
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Drag
io.sentry.TraceContext: java.lang.String userSegment
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String MODULE
io.sentry.vendor.Base64$Encoder: byte[] ENCODE_WEBSAFE
io.sentry.TraceContext: java.lang.String release
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.ScribeChannel scribeChannel
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
io.sentry.cache.EnvelopeCache: java.lang.String CRASH_MARKER_FILE
io.sentry.android.core.PerformanceAndroidEventProcessor: java.lang.String APP_METRICS_ACTIVITIES_OP
io.sentry.DataCategory: io.sentry.DataCategory Error
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_LOCALE
io.sentry.android.core.NdkHandlerStrategy: io.sentry.android.core.NdkHandlerStrategy SENTRY_HANDLER_STRATEGY_CHAIN_AT_START
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: io.sentry.IConnectionStatusProvider$IConnectionStatusObserver val$observer
io.sentry.metrics.SetMetric: java.util.Set values
io.sentry.ProfilingTraceData: java.util.Map unknown
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
io.sentry.cache.EnvelopeCache: java.lang.String SUFFIX_ENVELOPE_FILE
io.sentry.android.core.AndroidProfiler: java.util.concurrent.Future scheduledFinish
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
io.sentry.instrumentation.file.FileOutputStreamInitData: boolean append
io.sentry.android.core.NetworkBreadcrumbsIntegration: io.sentry.SentryOptions options
io.flutter.view.AccessibilityBridge: int ROOT_NODE_ID
io.sentry.android.replay.ScreenshotRecorder$maskingPaint$2: io.sentry.android.replay.ScreenshotRecorder$maskingPaint$2 INSTANCE
io.sentry.clientreport.ClientReport$JsonKeys: java.lang.String DISCARDED_EVENTS
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
io.sentry.DeduplicateMultithreadedEventProcessor: java.util.Map processedEvents
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: java.lang.String $propertyName
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA
io.sentry.protocol.Gpu: java.lang.Integer memorySize
io.sentry.SentryOptions: int maxQueueSize
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel
io.flutter.embedding.android.KeyData$Type: long value
io.sentry.ProfilingTraceData: java.lang.String versionCode
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader instance
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.Class activityClass
io.sentry.android.replay.gestures.ReplayGestureConverter: io.sentry.android.replay.gestures.ReplayGestureConverter$Companion Companion
io.sentry.protocol.SentrySpan: java.util.Map measurements
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Failed: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Failed INSTANCE
io.sentry.cache.tape.FileObjectQueue: io.sentry.cache.tape.QueueFile queueFile
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
io.sentry.NoOpLogger: io.sentry.NoOpLogger instance
io.sentry.rrweb.RRWebSpanEvent: java.util.Map data
io.sentry.exception.ExceptionMechanismException: long serialVersionUID
io.sentry.android.replay.ReplayCache: java.lang.String ONGOING_SEGMENT
io.sentry.android.core.PerformanceAndroidEventProcessor: java.lang.String APP_METRICS_ORIGIN
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastFlutterState
io.sentry.android.core.ManifestMetadataReader: java.lang.String BREADCRUMBS_APP_COMPONENTS_ENABLE
io.sentry.HostnameCache: java.util.concurrent.atomic.AtomicBoolean updateRunning
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: android.content.Context context
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String ERROR_IDS
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
io.sentry.android.replay.gestures.GestureRecorder: java.util.ArrayList rootViews
io.sentry.SentryEnvelopeHeader: java.util.Date sentAt
androidx.fragment.app.Fragment: boolean mRestored
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature HIGH_CONTRAST
io.sentry.android.core.ANRWatchDog: io.sentry.transport.ICurrentDateProvider timeProvider
io.sentry.SentryOptions: long maxTraceFileSize
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayFeatures
io.sentry.cache.tape.QueueFile$ElementIterator: int expectedModCount
io.sentry.cache.PersistingScopeObserver: io.sentry.util.LazyEvaluator breadcrumbsQueue
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$1: java.lang.String $propertyName
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
io.sentry.android.core.CurrentActivityHolder: io.sentry.android.core.CurrentActivityHolder instance
io.sentry.protocol.DebugMeta$JsonKeys: java.lang.String SDK_INFO
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
io.sentry.SentryEnvelopeItemHeader: io.sentry.SentryItemType type
io.sentry.android.core.internal.gestures.SentryGestureListener$1: int[] $SwitchMap$io$sentry$android$core$internal$gestures$SentryGestureListener$GestureType
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
io.sentry.Session$State: io.sentry.Session$State Crashed
io.sentry.Session: java.lang.String distinctId
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
io.sentry.android.core.UserInteractionIntegration: android.app.Application application
io.sentry.protocol.SentryException$JsonKeys: java.lang.String VALUE
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String FRAME_COUNT
io.sentry.TraceContext$JsonKeys: java.lang.String USER_ID
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String STATE
io.sentry.NoOpScope: io.sentry.SentryOptions emptyOptions
io.sentry.SentryOptions$Cron: java.lang.String defaultTimezone
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
io.sentry.flutter.SentryFlutter$updateOptions$5: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.SpanFrameMetricsCollector: java.lang.Object lock
io.sentry.vendor.Base64: int URL_SAFE
io.sentry.android.core.NetworkBreadcrumbsIntegration: io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback networkCallback
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENABLE_PERFORMANCE_V2
io.sentry.android.replay.gestures.ReplayGestureConverter: int $stable
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int UP
io.sentry.android.core.internal.modules.AssetsModulesLoader: android.content.Context context
io.sentry.SentryReplayOptions: java.lang.Double sessionSampleRate
io.sentry.clientreport.DiscardedEvent$JsonKeys: java.lang.String CATEGORY
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
androidx.fragment.app.Fragment: java.lang.String mPreviousWho
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.os.Handler onImageAvailableHandler
io.sentry.Baggage: java.util.Map keyValues
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.sentry.android.core.SendCachedEnvelopeIntegration: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget sender
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode this$0
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String initialRoute
io.sentry.DefaultTransactionPerformanceCollector: boolean hasNoCollectors
io.sentry.rrweb.RRWebMetaEvent$JsonKeys: java.lang.String HEIGHT
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: java.util.concurrent.ConcurrentLinkedQueue sentQueue
io.sentry.android.core.ManifestMetadataReader: java.lang.String ANR_ENABLE
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap mScanFilters
io.sentry.DataCategory: io.sentry.DataCategory Session
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String REPLAY_START_TIMESTAMP
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
io.sentry.DataCategory: io.sentry.DataCategory Attachment
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.Baggage$DSCKeys: java.lang.String TRACE_ID
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: java.util.Map pressedState
androidx.fragment.app.Fragment: int mTargetRequestCode
io.sentry.rrweb.RRWebVideoEvent: java.lang.String encoding
io.sentry.util.JsonSerializationUtils: java.nio.charset.Charset UTF_8
io.sentry.util.UrlUtils$UrlDetails: java.lang.String url
io.sentry.android.replay.capture.BufferCaptureStrategy$captureReplay$2: io.sentry.android.replay.capture.BufferCaptureStrategy this$0
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothAdapter mBluetoothAdapter
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
io.sentry.protocol.App: java.lang.String startType
io.sentry.android.replay.ReplayCache: java.util.List frames
io.flutter.view.AccessibilityBridge$Action: int value
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action FOCUS
io.sentry.cache.PersistingOptionsObserver: java.lang.String SDK_VERSION_FILENAME
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: int FLUTTER_SPLASH_VIEW_FALLBACK_ID
io.sentry.flutter.SentryFlutter$updateOptions$16: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: io.sentry.SentryLevel DEFAULT_DIAGNOSTIC_LEVEL
io.sentry.android.core.NetworkBreadcrumbsIntegration: boolean isClosed
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
io.sentry.cache.tape.FileObjectQueue: io.sentry.cache.tape.ObjectQueue$Converter converter
io.sentry.flutter.SentryFlutter$updateOptions$4: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.vendor.gson.stream.JsonWriter: java.lang.String indent
io.sentry.Attachment: java.lang.String contentType
io.sentry.SentryTraceHeader: java.lang.String SENTRY_TRACE_HEADER
io.sentry.Sentry: io.sentry.IHub mainHub
io.sentry.SentryEnvelopeHeader$JsonKeys: java.lang.String TRACE
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator parsedDsn
io.sentry.rrweb.RRWebVideoEvent: java.util.Map dataUnknown
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_FALSE
io.sentry.ExternalOptions: java.util.Set ignoredExceptionsForType
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
io.sentry.android.replay.ScreenshotRecorder$capture$1$1$1$1: android.graphics.Canvas $canvas
io.sentry.internal.modules.ModulesLoader: java.nio.charset.Charset UTF_8
io.sentry.DefaultTransactionPerformanceCollector: long TRANSACTION_COLLECTION_INTERVAL_MILLIS
io.sentry.android.core.SentryAndroidOptions: boolean enableSystemEventBreadcrumbs
io.sentry.SentryEvent: io.sentry.SentryValues exception
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: io.sentry.SentryOptions options
io.sentry.android.core.AndroidProfiler$ProfileEndData: long endCpuMillis
io.sentry.android.core.ANRWatchDog: io.sentry.ILogger logger
io.sentry.SentryTracer: java.util.TimerTask deadlineTimeoutTask
io.sentry.Breadcrumb: java.util.Date timestamp
io.sentry.rrweb.RRWebInteractionEvent: float x
androidx.fragment.app.Fragment: android.view.View mView
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.plugin.platform.PlatformViewWrapper$1: android.view.View$OnFocusChangeListener val$userFocusListener
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler processTextMethodHandler
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.ReplayCache cache
io.sentry.protocol.SentryStackFrame: java.lang.String contextLine
io.sentry.Breadcrumb$JsonKeys: java.lang.String TYPE
io.sentry.rrweb.RRWebEvent$JsonKeys: java.lang.String TYPE
io.sentry.ProfilingTraceData: java.lang.String DEFAULT_ENVIRONMENT
io.sentry.Scope: io.sentry.ITransaction transaction
io.sentry.protocol.DebugImage: java.lang.String imageAddr
io.sentry.ProfilingTraceData: int androidApiLevel
io.sentry.android.core.ManifestMetadataReader: java.lang.String AUTO_SESSION_TRACKING_ENABLE
androidx.activity.OnBackPressedCallback: boolean isEnabled
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: java.lang.Object $value
io.sentry.ExternalOptions: java.util.List inAppIncludes
io.sentry.android.core.Installation: java.lang.String deviceId
io.sentry.protocol.SentryId: io.sentry.protocol.SentryId EMPTY_ID
io.sentry.ExternalOptions: java.lang.Long idleTimeout
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterViewDelegate delegate
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information TERABYTE
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
io.sentry.SynchronizedCollection: long serialVersionUID
io.sentry.TracesSamplingDecision: java.lang.Double profileSampleRate
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList cancellables
io.sentry.SentryEvent: java.util.Map unknown
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: java.lang.String TAG
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_NONE
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String DESCRIPTION
io.sentry.protocol.OperatingSystem$JsonKeys: java.lang.String RAW_DESCRIPTION
io.sentry.transport.QueuedThreadPoolExecutor: io.sentry.transport.ReusableCountLatch unfinishedTasksCount
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
io.flutter.plugin.platform.SingleViewWindowManager: android.view.WindowManager delegate
io.sentry.protocol.DebugImage: java.lang.String debugFile
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
io.sentry.vendor.gson.stream.JsonScope: int DANGLING_NAME
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.android.core.ActivityFramesTracker activityFramesTracker
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_REPLAY_RECORDING
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$ChrFound: com.lib.flutter_blue_plus.FlutterBluePlusPlugin this$0
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: io.flutter.view.TextureRegistry$SurfaceTextureEntry surfaceTextureEntry
io.sentry.SentryOptions: boolean enableBackpressureHandling
io.sentry.vendor.gson.stream.JsonReader: boolean lenient
io.sentry.protocol.Response$JsonKeys: java.lang.String STATUS_CODE
io.flutter.embedding.android.KeyboardMap: long kValueMask
io.sentry.metrics.GaugeMetric: double last
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String NAME
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_OBJECT
io.sentry.clientreport.ClientReport: java.util.List discardedEvents
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String UNIT_UNKNOWN
io.sentry.protocol.Message$JsonKeys: java.lang.String PARAMS
io.sentry.Span: java.util.Map measurements
io.sentry.ReplayRecording: java.lang.Integer segmentId
io.sentry.android.core.AnrV2Integration: io.sentry.android.core.SentryAndroidOptions options
io.sentry.ProfilingTraceData: java.util.Map measurementsMap
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String MEASUREMENTS
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
io.sentry.android.core.AndroidProfiler$1: io.sentry.android.core.AndroidProfiler this$0
io.sentry.android.core.LifecycleWatcher: long sessionIntervalMillis
io.sentry.UncaughtExceptionHandlerIntegration: boolean registered
io.sentry.SentryReplayOptions: int frameRate
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String ANDROID_API_LEVEL
io.sentry.cache.tape.QueueFile$ElementIterator: int nextElementIndex
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information GIGABYTE
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: int encodedValue
io.sentry.android.core.internal.util.CpuInfoUtils: java.lang.String SYSTEM_CPU_PATH
io.sentry.SentryItemType: io.sentry.SentryItemType Profile
io.sentry.TypeCheckHint: java.lang.String SERVLET_REQUEST
io.sentry.vendor.gson.stream.JsonReader: java.lang.String[] pathNames
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_MULTILINE
androidx.fragment.app.Fragment: int RESUMED
io.sentry.rrweb.RRWebEvent: io.sentry.rrweb.RRWebEventType type
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.String cachedEngineGroupId
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
io.sentry.android.core.ManifestMetadataReader: java.lang.String SDK_NAME
io.sentry.SentryLevel: io.sentry.SentryLevel ERROR
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
io.sentry.SentryOptions: boolean enableScreenTracking
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ISOLATE_SNAPSHOT_DATA_KEY
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
io.sentry.protocol.User: io.sentry.protocol.Geo geo
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus DISCONNECTED
io.sentry.exception.SentryEnvelopeException: long serialVersionUID
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
io.flutter.plugin.platform.PlatformViewsController: boolean enableImageRenderTarget
io.sentry.cache.tape.QueueFile$Element: long position
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] VIEW_TYPES_REQUIRE_VIRTUAL_DISPLAY
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACES_ACTIVITY_ENABLE
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
io.sentry.protocol.Response: java.util.Map unknown
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
io.sentry.vendor.Base64$Encoder: byte[] ENCODE
io.flutter.embedding.android.FlutterView: java.lang.String TAG
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.android.AndroidTouchProcessor: int BYTES_PER_FIELD
io.sentry.SpanContext$JsonKeys: java.lang.String DESCRIPTION
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
io.sentry.protocol.Gpu: java.lang.String TYPE
io.sentry.SpanDataConvention: java.lang.String FRAMES_TOTAL
io.sentry.Baggage$DSCKeys: java.lang.String SAMPLED
io.sentry.android.core.AndroidProfiler: int BUFFER_SIZE_BYTES
io.sentry.SentryAppStartProfilingOptions: boolean profileSampled
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_SELECTED_STATE
io.sentry.util.Random: java.util.concurrent.atomic.AtomicLong seedUniquifier
io.flutter.embedding.engine.systemchannels.LifecycleChannel: boolean lastFocus
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.content.BroadcastReceiver mBluetoothAdapterStateReceiver
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
io.sentry.SentryReplayEvent: int segmentId
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality MEDIUM
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_HEIGHT
io.sentry.flutter.SentryFlutter$updateOptions$10: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.vendor.Base64$Encoder: boolean do_padding
io.sentry.flutter.SentryFlutter$updateOptions$13: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String PRIORITY
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE
io.sentry.android.replay.ReplayIntegration: java.util.concurrent.atomic.AtomicBoolean isEnabled
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int requestBufferWidth
io.sentry.UserFeedback$JsonKeys: java.lang.String NAME
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ON_OFF_SWITCH_LABELS
io.sentry.DisabledQueue: long serialVersionUID
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$ChrFound: java.lang.String error
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.capture.BaseCaptureStrategy$Companion Companion
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String SPANS
io.sentry.vendor.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS
io.sentry.android.replay.WindowManagerSpy$windowManagerClass$2: io.sentry.android.replay.WindowManagerSpy$windowManagerClass$2 INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
io.sentry.ProfilingTransactionData: java.lang.Long relativeEndCpuMs
io.sentry.clientreport.DiscardedEvent: java.lang.Long quantity
io.sentry.android.replay.capture.SessionCaptureStrategy: io.sentry.transport.ICurrentDateProvider dateProvider
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment flutterFragment
io.sentry.util.StringUtils: java.lang.String PROPER_NIL_UUID
io.sentry.protocol.SentryStackFrame: java.util.Map vars
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String TYPE
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENABLE_SCOPE_PERSISTENCE
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String TRUNCATION_REASON
io.sentry.rrweb.RRWebOptionsEvent$JsonKeys: java.lang.String DATA
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $VALUES
io.sentry.protocol.Gpu$JsonKeys: java.lang.String NAME
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.AppStartMetrics$AppStartType appStartType
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode INSTANCE
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information TEBIBYTE
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_ENABLE_STATE_RESTORATION
io.sentry.android.core.SpanFrameMetricsCollector: io.sentry.android.core.internal.util.SentryFrameMetricsCollector frameMetricsCollector
io.sentry.SentryAppStartProfilingOptions: java.lang.String profilingTracesDirPath
io.sentry.android.core.ManifestMetadataReader: java.lang.String REPLAYS_MASK_ALL_IMAGES
io.sentry.android.replay.BuildConfig: boolean DEBUG
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
io.sentry.android.replay.video.MuxerConfig: int recordingWidth
io.sentry.android.replay.ReplayIntegration: kotlin.jvm.functions.Function0 recorderProvider
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
io.sentry.protocol.Mechanism: java.lang.String type
io.sentry.TraceContext$JsonKeys: java.lang.String TRANSACTION
io.sentry.SentryEnvelopeHeader$JsonKeys: java.lang.String SENT_AT
io.sentry.SentryEvent$JsonKeys: java.lang.String FINGERPRINT
io.sentry.Breadcrumb$JsonKeys: java.lang.String ORIGIN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
io.sentry.protocol.Device: java.lang.String manufacturer
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern BEGIN_MANAGED_THREAD_RE
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: java.lang.String $propertyName
io.sentry.SpanDataConvention: java.lang.String FRAMES_SLOW
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String CHILDREN
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
io.sentry.android.core.AndroidProfiler: int intervalUs
io.flutter.embedding.android.FlutterSurfaceView: java.lang.String TAG
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource COMPONENT
io.sentry.protocol.User$JsonKeys: java.lang.String EMAIL
io.sentry.android.core.DefaultAndroidEventProcessor: java.util.concurrent.Future deviceInfoUtil
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.sentry.SpotlightIntegration: io.sentry.ILogger logger
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.android.replay.BuildConfig: java.lang.String BUILD_TYPE
io.sentry.NoOpHub: io.sentry.SentryOptions emptyOptions
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2: io.sentry.android.replay.ReplayIntegration this$0
io.sentry.PreviousSessionFinalizer: io.sentry.SentryOptions options
io.sentry.SpanDataConvention: java.lang.String THREAD_ID
io.sentry.vendor.Base64$Encoder: int LINE_GROUPS
io.sentry.android.replay.ScreenshotRecorder: io.sentry.android.replay.util.MainLooperHandler mainLooperHandler
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
io.sentry.TransactionContext: io.sentry.Instrumenter instrumenter
io.sentry.SentryOptions: java.util.List gestureTargetLocators
io.sentry.protocol.Device$JsonKeys: java.lang.String PROCESSOR_COUNT
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String UUID
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
io.sentry.SentryClient: java.lang.String SENTRY_PROTOCOL_VERSION
io.sentry.cache.tape.QueueFile: int VERSIONED_HEADER
io.sentry.cache.CacheStrategy: java.io.File directory
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
io.sentry.protocol.Gpu: java.lang.String apiType
io.sentry.protocol.DebugImage: java.lang.String PROGUARD
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.android.core.AndroidProfiler profiler
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
androidx.activity.ComponentActivity: int mContentLayoutId
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int width
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan applicationOnCreate
io.sentry.ProfilingTraceData: java.lang.String release
io.sentry.android.core.PerformanceAndroidEventProcessor: io.sentry.android.core.ActivityFramesTracker activityFramesTracker
io.sentry.android.replay.util.TextAttributes: boolean hasFillModifier
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
io.sentry.android.core.internal.util.RootChecker: android.content.Context context
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
io.flutter.plugin.platform.PlatformViewWrapper: int left
io.sentry.JsonObjectReader: io.sentry.vendor.gson.stream.JsonReader jsonReader
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
io.sentry.SentryBaseEvent: java.lang.String serverName
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit WEEK
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information MEGABYTE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalLeft
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.sentry.protocol.Gpu$JsonKeys: java.lang.String MULTI_THREADED_RENDERING
io.sentry.protocol.SentryRuntime: java.util.Map unknown
io.sentry.android.core.AnrIntegration: java.lang.Object startLock
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener
io.sentry.metrics.MetricsHelper: java.util.regex.Pattern TAG_KEY_PATTERN
io.sentry.android.replay.video.SimpleMp4FrameMuxer: int videoTrackIndex
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
io.sentry.util.HttpUtils: java.util.List SECURITY_COOKIES
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1: kotlin.jvm.internal.Ref$BooleanRef $removed
io.sentry.util.UrlUtils: java.lang.String SENSITIVE_DATA_SUBSTITUTE
io.sentry.protocol.Gpu: java.lang.String npotSupport
io.sentry.rrweb.RRWebInteractionMoveEvent$JsonKeys: java.lang.String POINTER_ID
io.sentry.rrweb.RRWebOptionsEvent: java.lang.String tag
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.android.core.internal.util.SentryFrameMetricsCollector frameMetricsCollector
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_OS_BUILD_NUMBER
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: java.lang.reflect.Field choreographerLastFrameTimeField
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
io.sentry.transport.RateLimiter: int HTTP_RETRY_AFTER_DEFAULT_DELAY_MILLIS
io.sentry.ProfilingTraceData: java.lang.String TRUNCATION_REASON_NORMAL
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED_NAME
io.sentry.protocol.SentrySpan: io.sentry.SpanId spanId
io.sentry.util.Random: long addend
io.sentry.SentryOptions: java.util.List inAppIncludes
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit DAY
io.sentry.android.core.internal.gestures.SentryWindowCallback: android.view.Window$Callback delegate
io.flutter.view.AccessibilityBridge: int previousRouteId
io.sentry.util.LazyEvaluator: java.lang.Object value
io.sentry.flutter.SentryFlutter: io.sentry.flutter.SentryFlutter$Companion Companion
io.sentry.rrweb.RRWebMetaEvent: java.lang.String href
io.sentry.android.core.DeviceInfoUtil: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.android.replay.WindowManagerSpy$windowManagerInstance$2: io.sentry.android.replay.WindowManagerSpy$windowManagerInstance$2 INSTANCE
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder clientReportRecorder
io.sentry.SentryOptions: int maxDepth
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
io.sentry.android.core.SentryPerformanceProvider: android.app.Application$ActivityLifecycleCallbacks activityCallback
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int STYLUS
io.sentry.metrics.DistributionMetric: java.util.List values
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
io.flutter.embedding.android.FlutterActivity: boolean hasRegisteredBackCallback
io.sentry.ProfilingTraceData: java.lang.String sampledProfile
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt: int MAX_PATH_IDENTIFIER_LENGTH
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String ID
io.sentry.rrweb.RRWebVideoEvent: java.lang.String REPLAY_ENCODING
io.sentry.android.core.ManifestMetadataReader: java.lang.String COLLECT_ADDITIONAL_CONTEXT
io.sentry.rrweb.RRWebBreadcrumbEvent: io.sentry.SentryLevel level
io.sentry.SentryOptions: java.util.List observers
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
io.sentry.android.replay.capture.SessionCaptureStrategy: io.sentry.SentryOptions options
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information KILOBYTE
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState PAUSED
io.flutter.plugin.common.StandardMessageCodec: byte BIGINT
io.sentry.TraceContext$JsonKeys: java.lang.String ENVIRONMENT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$JsonKeys: java.lang.String Y
io.sentry.NoOpHub: io.sentry.metrics.MetricsApi metricsApi
io.sentry.TransactionContext: io.sentry.Baggage baggage
io.sentry.android.replay.video.MuxerConfig: java.io.File file
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.sentry.CircularFifoQueue$1: int lastReturnedIndex
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
io.sentry.SentryOptions: io.sentry.IConnectionStatusProvider connectionStatusProvider
io.sentry.android.core.LifecycleWatcher: java.util.TimerTask timerTask
io.sentry.TypeCheckHint: java.lang.String SPRING_REQUEST_FILTER_RESPONSE
io.sentry.android.core.ActivityLifecycleIntegration: boolean isAllActivityCallbacksAvailable
io.sentry.protocol.DebugImage: java.lang.String JVM
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.datastore.preferences.PreferencesProto$Value: int BYTES_FIELD_NUMBER
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
io.sentry.TraceContext$JsonKeys: java.lang.String USER_SEGMENT
io.sentry.android.replay.WindowManagerSpy$mViewsField$2: io.sentry.android.replay.WindowManagerSpy$mViewsField$2 INSTANCE
io.sentry.android.core.ManifestMetadataReader: java.lang.String BREADCRUMBS_ACTIVITY_LIFECYCLE_ENABLE
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: java.lang.String OP
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType MouseUp
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
io.sentry.android.core.ManifestMetadataReader: java.lang.String SESSION_TRACKING_TIMEOUT_INTERVAL_MILLIS
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: kotlin.jvm.functions.Function3 $onChange
com.sanguinarypc.box_sensors.R$style: int LaunchTheme
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
io.sentry.ProfilingTraceData: java.lang.String profileId
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.sentry.vendor.Base64$Coder: int op
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
io.sentry.clientreport.ClientReport$JsonKeys: java.lang.String TIMESTAMP
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MICROSECOND
io.sentry.ExternalOptions: java.lang.Double tracesSampleRate
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type DUMP
io.sentry.DataCategory: io.sentry.DataCategory All
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion Companion
io.sentry.android.replay.SentryReplayModifiers: androidx.compose.ui.semantics.SemanticsPropertyKey SentryPrivacy
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE_ARRAY
io.sentry.SentryOptions: int maxCacheItems
io.sentry.android.replay.LastSegmentData: long duration
androidx.fragment.app.Fragment: boolean mDeferStart
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource StyleDeclaration
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.Class fragmentClass
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Failed: int $stable
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
io.sentry.android.core.SpanFrameMetricsCollector$Frame: boolean isFrozen
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0$inline_fun
io.sentry.protocol.TransactionInfo$JsonKeys: java.lang.String SOURCE
io.sentry.android.core.AndroidProfiler$ProfileEndData: java.io.File traceFile
io.sentry.UncaughtExceptionHandlerIntegration: io.sentry.SentryOptions options
io.sentry.SentryNanotimeDate: java.util.Date date
io.sentry.rrweb.RRWebMetaEvent$JsonKeys: java.lang.String WIDTH
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature BOLD_TEXT
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean debugDisableSurfaceClear
io.sentry.android.core.AnrV2Integration$AnrProcessor: long threshold
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason SAMPLE_RATE
io.sentry.instrumentation.file.FileInputStreamInitData: io.sentry.SentryOptions options
io.sentry.SendFireAndForgetOutboxSender: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath sendFireAndForgetDirPath
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_START_PAUSED
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCALE
io.sentry.SentryEnvelopeItemHeader$JsonKeys: java.lang.String FILENAME
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_INITIAL_ROUTE
io.sentry.TypeCheckHint: java.lang.String ANDROID_NETWORK_CAPABILITIES
io.sentry.TypeCheckHint: java.lang.String OPEN_FEIGN_REQUEST
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_AOT_SHARED_LIBRARY_NAME
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information MEBIBYTE
io.sentry.SentryOptions: io.sentry.ITransportFactory transportFactory
io.sentry.flutter.SentryFlutter$updateOptions$18: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty replayType$delegate
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
io.sentry.android.core.performance.AppStartMetrics: java.util.concurrent.atomic.AtomicInteger activeActivitiesCounter
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_WIDTH
io.sentry.profilemeasurements.ProfileMeasurementValue: double value
io.sentry.SentryItemType: io.sentry.SentryItemType ClientReport
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PHYSICAL_DISPLAY_PLATFORM_VIEW
io.flutter.plugin.common.BasicMessageChannel: java.lang.String CHANNEL_BUFFERS_CHANNEL
io.sentry.rrweb.RRWebSpanEvent: java.util.Map payloadUnknown
io.sentry.Hub: io.sentry.protocol.SentryId lastEventId
io.sentry.Scope: io.sentry.protocol.Request request
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_VM_SERVICE_PORT
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
io.sentry.protocol.SentryPackage: java.lang.String version
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.sentry.protocol.OperatingSystem: java.util.Map unknown
io.sentry.protocol.Request: java.lang.Object data
io.sentry.android.core.internal.util.Debouncer: int maxExecutions
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_DART_ENTRYPOINT
androidx.fragment.app.Fragment: boolean mRemoving
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mDataDirPath
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
io.flutter.embedding.android.KeyboardMap: java.util.HashMap scanCodeToPhysical
io.sentry.android.replay.WindowRecorder: java.lang.Object rootViewsLock
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type[] $VALUES
io.sentry.internal.modules.NoOpModulesLoader: io.sentry.internal.modules.NoOpModulesLoader instance
io.sentry.cache.PersistingScopeObserver: java.lang.String LEVEL_FILENAME
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothGattCallback mGattCallback
io.sentry.SentryTracer: java.util.Timer timer
io.sentry.util.UrlUtils: java.util.regex.Pattern AUTH_REGEX
io.sentry.ProfilingTraceData: java.lang.String truncationReason
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource ViewportResize
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.view.Surface surface
io.sentry.protocol.Device$JsonKeys: java.lang.String BOOT_TIME
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
io.sentry.android.replay.ReplayIntegration$ReplayExecutorServiceThreadFactory: int cnt
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
io.sentry.transport.TransportResult$ErrorTransportResult: int responseCode
io.sentry.SentryReplayOptions: java.lang.String maskViewContainerClass
io.sentry.android.core.AnrV2EventProcessor: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_MEMORY_NATIVE_FOOTPRINT
io.sentry.instrumentation.file.FileIOSpanManager: io.sentry.SpanStatus spanStatus
io.sentry.cache.CacheStrategy: java.nio.charset.Charset UTF_8
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType DomContentLoaded
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TAG
io.sentry.ExternalOptions: io.sentry.SentryOptions$Cron cron
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: long NON_TEXTURE_FALLBACK
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$JsonKeys: java.lang.String TIME_OFFSET
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
io.sentry.SentryBaseEvent: io.sentry.protocol.User user
io.flutter.plugin.platform.SingleViewPresentation: int viewId
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.replay.ReplayIntegration replay
io.sentry.protocol.OperatingSystem: java.lang.String version
io.sentry.android.replay.ReplayIntegration: java.util.concurrent.atomic.AtomicBoolean isManualPause
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String TAG
io.sentry.TraceContext: java.lang.String userId
io.sentry.protocol.ViewHierarchyNode: java.lang.Double x
io.flutter.view.AccessibilityBridge: int MIN_ENGINE_GENERATED_NODE_ID
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
io.sentry.protocol.SentryStackTrace: java.lang.Boolean snapshot
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
io.sentry.SentryOptions$Cron: java.lang.Long defaultFailureIssueThreshold
io.flutter.embedding.android.FlutterSurfaceView: boolean isPaused
io.sentry.protocol.Geo: java.lang.String city
io.sentry.android.replay.ScreenshotRecorder: java.util.concurrent.atomic.AtomicBoolean isCapturing
io.sentry.protocol.Device$JsonKeys: java.lang.String SCREEN_DENSITY
io.sentry.android.replay.gestures.ReplayGestureConverter: int TOUCH_MOVE_DEBOUNCE_THRESHOLD
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String SYMBOL_ADDR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason BACKPRESSURE
io.sentry.android.core.SentryPerformanceProvider: io.sentry.ILogger logger
io.sentry.Session$JsonKeys: java.lang.String TIMESTAMP
io.sentry.UserFeedback: java.lang.String name
io.sentry.transport.HttpConnection: io.sentry.RequestDetails requestDetails
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
io.sentry.protocol.SentryStackFrame: java.lang.String symbol
io.sentry.SentryEnvelope: java.lang.Iterable items
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String PROFILING_TRACES_DIR_PATH
io.sentry.JsonSerializer: io.sentry.SentryOptions options
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int enableBluetoothRequestCode
io.sentry.android.core.ANRWatchDog: boolean reportInDebug
io.sentry.Session$JsonKeys: java.lang.String ATTRS
io.sentry.ProfilingTraceData: java.lang.String deviceOsName
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
io.sentry.protocol.Device$JsonKeys: java.lang.String EXTERNAL_FREE_STORAGE
io.sentry.ExternalOptions: java.lang.String proguardUuid
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.QueuedThreadPoolExecutor executor
io.sentry.flutter.SentryFlutter$updateOptions$8: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.cache.PersistingScopeObserver: java.lang.String REPLAY_FILENAME
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: io.flutter.view.TextureRegistry$SurfaceProducer producer
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$ImageViewHierarchyNode: int $stable
io.sentry.android.core.internal.util.CpuInfoUtils: java.util.List cpuMaxFrequenciesMhz
io.sentry.ExternalOptions: java.util.List tracePropagationTargets
io.sentry.android.replay.util.TextAttributes: androidx.compose.ui.graphics.Color color
androidx.fragment.app.Fragment: android.os.Handler mPostponedHandler
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.util.Random: double DOUBLE_UNIT
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1
io.sentry.TransactionOptions: long DEFAULT_DEADLINE_TIMEOUT_AUTO_TRANSACTION
io.sentry.protocol.OperatingSystem: java.lang.String TYPE
io.sentry.flutter.SentryFlutter$updateOptions$19: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.protocol.Geo: java.lang.String countryCode
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String cachedEngineGroupId
io.sentry.android.core.AndroidProfiler: java.util.ArrayDeque frozenFrameRenderMeasurements
io.sentry.protocol.SentryException: java.lang.String value
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
io.sentry.protocol.Geo$JsonKeys: java.lang.String REGION
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.sentry.SynchronizedQueue: long serialVersionUID
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
io.sentry.android.core.EnvelopeFileObserverIntegration: java.lang.Object startLock
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.sentry.CheckIn$JsonKeys: java.lang.String RELEASE
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: boolean succeeded
io.sentry.ProfilingTraceData: boolean deviceIsEmulator
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: java.lang.ref.WeakReference _rootCoordinates
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
io.sentry.DiagnosticLogger: io.sentry.SentryOptions options
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DISABLE_MERGED_PLATFORM_UI_THREAD_KEY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_EXPANDED
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: java.util.concurrent.atomic.AtomicBoolean isClosed
io.sentry.rrweb.RRWebEvent$JsonKeys: java.lang.String TIMESTAMP
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information BIT
io.flutter.plugin.platform.VirtualDisplayController$2: java.lang.Runnable val$onNewSizeFrameAvailable
io.sentry.rrweb.RRWebInteractionEvent: java.util.Map unknown
io.sentry.backpressure.BackpressureMonitor: io.sentry.SentryOptions sentryOptions
io.sentry.SentryBaseEvent: io.sentry.protocol.Contexts contexts
io.sentry.JsonObjectWriter: io.sentry.JsonObjectSerializer jsonObjectSerializer
io.sentry.android.core.ManifestMetadataReader: java.lang.String NDK_ENABLE
io.sentry.cache.tape.QueueFile: byte[] ZEROES
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.gestures.GestureRecorder gestureRecorder
io.sentry.config.AbstractPropertiesProvider: java.util.Properties properties
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
io.sentry.protocol.SentrySpan: java.lang.String origin
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String TAG
io.sentry.protocol.Device$JsonKeys: java.lang.String MODEL_ID
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String X
io.sentry.SentryReplayEvent: io.sentry.SentryReplayEvent$ReplayType replayType
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment: int $stable
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: java.util.concurrent.atomic.AtomicReference value
io.sentry.android.replay.gestures.ReplayGestureConverter: long lastCapturedMoveEvent
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion sdkVersion
io.sentry.ReplayRecording$1: int[] $SwitchMap$io$sentry$rrweb$RRWebEventType
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: java.lang.Object $oldValue
io.sentry.Session$State: io.sentry.Session$State Abnormal
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
io.sentry.SpanStatus: io.sentry.SpanStatus OK
io.sentry.SentryOptions: boolean enableMetrics
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String IMAGE_ADDR
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
io.sentry.android.replay.ReplayCache: io.sentry.protocol.SentryId replayId
io.sentry.android.replay.WindowManagerSpy: kotlin.Lazy windowManagerClass$delegate
io.sentry.android.replay.video.MuxerConfig: int recordingHeight
io.sentry.protocol.SentryStackFrame: java.lang.Boolean inApp
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_NULL
io.sentry.protocol.Request$JsonKeys: java.lang.String ENV
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
io.sentry.android.core.SentryAndroidOptions: long anrTimeoutIntervalMillis
io.flutter.embedding.engine.systemchannels.BackGestureChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_LONG
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String RENDERING_SYSTEM
io.sentry.protocol.Device$JsonKeys: java.lang.String BATTERY_TEMPERATURE
io.sentry.Breadcrumb$JsonKeys: java.lang.String MESSAGE
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NUMBER
io.sentry.transport.QueuedThreadPoolExecutor: io.sentry.SentryDate lastRejectTimestamp
io.sentry.android.core.ManifestMetadataReader: java.lang.String MAX_BREADCRUMBS
io.sentry.metrics.LocalMetricsAggregator: java.util.Map buckets
io.sentry.SentryTracer: io.sentry.SentryTracer$FinishStatus finishStatus
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACES_SAMPLE_RATE
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.util.List dartEntrypointArgs
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
io.sentry.android.replay.R$id: int sentry_privacy
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.sentry.CircularFifoQueue: int maxElements
io.sentry.SpanDataConvention: java.lang.String CALL_STACK_KEY
io.sentry.OutboxSender: java.nio.charset.Charset UTF_8
io.sentry.clientreport.ClientReportKey: java.lang.String category
io.flutter.plugin.common.BinaryCodec: boolean returnsDirectByteBufferFromDecoding
io.sentry.Scope: io.sentry.protocol.User user
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceTextureEntry texture
io.sentry.MonitorScheduleType: io.sentry.MonitorScheduleType INTERVAL
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.flutter.embedding.engine.FlutterEngineGroup$Options: android.content.Context context
io.sentry.android.replay.ReplayIntegration: kotlin.jvm.functions.Function0 gestureRecorderProvider
io.sentry.rrweb.RRWebMetaEvent: int width
io.sentry.SentryReplayOptions$SentryReplayQuality: int bitRate
io.sentry.android.core.AnrV2Integration$AnrV2Hint: long timestamp
io.sentry.android.core.ContextUtils: io.sentry.android.core.util.AndroidLazyEvaluator staticAppInfo33
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
io.sentry.protocol.SentryRuntime$JsonKeys: java.lang.String VERSION
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES
io.flutter.embedding.android.FlutterView: android.view.textservice.TextServicesManager textServicesManager
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: java.util.Map listenerMap
io.sentry.HttpStatusCodeRange: int DEFAULT_MAX
io.sentry.SentryItemType: java.lang.String itemType
io.sentry.MonitorConfig$JsonKeys: java.lang.String FAILURE_ISSUE_THRESHOLD
io.sentry.metrics.CounterMetric: double value
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_CACHED_ENGINE_GROUP_ID
io.sentry.clientreport.ClientReportRecorder: io.sentry.SentryOptions options
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
io.sentry.android.core.AndroidTransactionProfiler: long profileStartCpuMillis
io.sentry.ReplayRecording$1: int[] $SwitchMap$io$sentry$rrweb$RRWebIncrementalSnapshotEvent$IncrementalSource
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
io.sentry.OptionsContainer: java.lang.Class clazz
io.sentry.protocol.Device: java.lang.String cpuDescription
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
io.sentry.TypeCheckHint: java.lang.String OKHTTP_REQUEST
io.sentry.android.core.SentryAndroidOptions: boolean anrReportInDebug
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service service
io.sentry.protocol.OperatingSystem$JsonKeys: java.lang.String ROOTED
io.sentry.android.replay.ScreenshotRecorderConfig: int frameRate
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: java.lang.String $propertyName
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
io.sentry.transport.ReusableCountLatch: io.sentry.transport.ReusableCountLatch$Sync sync
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
io.sentry.protocol.MetricSummary$JsonKeys: java.lang.String MIN
io.sentry.ProfilingTraceData: java.lang.String deviceOsBuildNumber
io.sentry.Scope: java.util.Map tags
io.sentry.SentryLockReason: java.lang.Long threadId
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
io.sentry.Attachment: java.lang.String VIEW_HIERARCHY_ATTACHMENT_TYPE
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String ENVIRONMENT
io.sentry.protocol.SentrySpan: java.util.Map metricsSummaries
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
io.sentry.NoOpSerializer: io.sentry.NoOpSerializer instance
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String CHANNEL_NAME
io.sentry.Session$JsonKeys: java.lang.String ENVIRONMENT
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String TRACE_ID
io.sentry.vendor.gson.stream.JsonReader: int[] stack
io.sentry.cache.PersistingScopeObserver: java.lang.String EXTRAS_FILENAME
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String DEBUG_META
io.sentry.android.replay.capture.BufferCaptureStrategy$onConfigurationChanged$1: io.sentry.android.replay.capture.BufferCaptureStrategy this$0
io.sentry.protocol.SentryException: io.sentry.protocol.Mechanism mechanism
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: android.view.Window$OnFrameMetricsAvailableListener frameMetricsAvailableListener
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType Blur
io.sentry.SpanDataConvention: java.lang.String BLOCKED_MAIN_THREAD_KEY
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_SKIA_DETERMINISTIC_RENDERING
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
io.sentry.transport.ProxyAuthenticator: java.lang.String password
io.flutter.plugin.editing.FlutterTextUtils: int ZERO_WIDTH_JOINER
io.sentry.Scope: java.lang.Object transactionLock
io.sentry.protocol.ViewHierarchyNode: java.lang.String visibility
io.sentry.SentryOptions: boolean enableUserInteractionBreadcrumbs
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.sentry.protocol.Device: java.lang.String TYPE
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: float y
io.sentry.android.core.ManifestMetadataReader: java.lang.String BREADCRUMBS_APP_LIFECYCLE_ENABLE
io.sentry.android.core.SentryAndroidOptions: boolean attachAnrThreadDump
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: java.lang.String $propertyName$inlined
io.sentry.SentryTracer: java.util.concurrent.atomic.AtomicBoolean isDeadlineTimerRunning
io.sentry.SentryReplayEvent: java.util.Date replayStartTimestamp
io.sentry.TypeCheckHint: java.lang.String SENTRY_SYNTHETIC_EXCEPTION
io.sentry.protocol.SentryStackTrace$JsonKeys: java.lang.String SNAPSHOT
io.sentry.OutboxSender: io.sentry.IHub hub
io.sentry.ProfilingTransactionData: java.lang.String traceId
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.core.ActivityFramesTracker framesTracker
io.sentry.android.core.SentryAndroidOptions: long startupCrashFlushTimeoutMillis
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
io.sentry.android.core.SentryAndroidOptions: boolean enableScopeSync
io.sentry.SpanContext: java.lang.String description
io.sentry.android.core.BuildConfig: java.lang.String VERSION_NAME
io.sentry.Hub: io.sentry.SentryOptions options
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int UNKNOWN
io.sentry.protocol.Device$JsonKeys: java.lang.String BATTERY_LEVEL
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
androidx.fragment.app.Fragment: int mFragmentId
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.android.core.SentryAndroidOptions options
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String TRANSACTION_NAME
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.android.core.internal.util.Debouncer debouncer
io.sentry.protocol.Message: java.util.Map unknown
io.sentry.android.core.NetworkBreadcrumbsIntegration$1: io.sentry.IHub val$hub
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
io.sentry.SynchronizedCollection: java.lang.Object lock
io.sentry.MonitorSchedule$JsonKeys: java.lang.String VALUE
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String SPAN_ID
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
io.sentry.SentryEnvelopeHeader: io.sentry.protocol.SdkVersion sdkVersion
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1: long $bufferLimit
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_LIBRARY
io.sentry.android.core.ManifestMetadataReader: java.lang.String ATTACH_VIEW_HIERARCHY
io.sentry.SentryOptions: io.sentry.ExperimentalOptions experimental
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String TIMESTAMP
io.sentry.protocol.User$JsonKeys: java.lang.String USERNAME
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
androidx.fragment.app.FragmentActivity: boolean mCreated
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap ttfdSpanMap
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup
io.sentry.android.replay.util.PersistableLinkedList: io.sentry.SentryOptions options
io.sentry.android.core.ManifestMetadataReader: java.lang.String BREADCRUMBS_NETWORK_EVENTS_ENABLE
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern WAITING_TO_LOCK_UNKNOWN_RE
io.sentry.android.core.internal.util.RootChecker: java.lang.String[] rootFiles
io.sentry.android.core.internal.gestures.ViewUtils: int[] coordinates
io.sentry.TransactionOptions: io.sentry.TransactionFinishedCallback transactionFinishedCallback
io.sentry.android.core.SendCachedEnvelopeIntegration: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory factory
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.sentry.android.replay.ReplayCache: java.util.LinkedHashMap ongoingSegment
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: boolean isAndroidXAvailable
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.sentry.SentryLevel: io.sentry.SentryLevel WARNING
io.sentry.util.Random: long serialVersionUID
io.sentry.flutter.SentryFlutterPlugin: io.sentry.flutter.SentryFlutterPlugin$Companion Companion
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int requestedBufferHeight
io.sentry.SentryEvent$JsonKeys: java.lang.String THREADS
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: boolean isAvailable
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String backgroundMode
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
io.sentry.SentryBaseEvent: java.lang.Throwable throwable
io.sentry.protocol.SentryPackage: java.lang.String name
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback frameCallback
io.sentry.SentryEnvelopeItemHeader: java.util.concurrent.Callable getLength
io.sentry.JsonReflectionObjectSerializer: int maxDepth
io.sentry.vendor.gson.stream.JsonScope: int EMPTY_ARRAY
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String NAME
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
io.sentry.TypeCheckHint: java.lang.String SENTRY_IS_FROM_HYBRID_SDK
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayRecording
io.sentry.transport.RateLimiter: java.util.List rateLimitObservers
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_STARTUP
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.res.AssetManager mAssetManager
io.sentry.protocol.SentryPackage: java.util.Map unknown
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_SLOW_FRAME_RENDERS
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $VALUES
io.sentry.SpanContext$JsonKeys: java.lang.String TAGS
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
io.sentry.exception.ExceptionMechanismException: boolean snapshot
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: java.lang.String $propertyName$inlined
io.sentry.Scope$SessionPair: io.sentry.Session current
io.sentry.android.core.Installation: java.nio.charset.Charset UTF_8
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask mExtractTask
io.sentry.SentryAppStartProfilingOptions: java.lang.Double traceSampleRate
io.sentry.protocol.MetricSummary: double min
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource AdoptedStyleSheet
io.sentry.CheckIn: java.lang.String monitorSlug
io.sentry.android.replay.ReplayCache: io.sentry.android.replay.video.SimpleVideoEncoder encoder
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENDLESS_TRACE_BUFFER
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: int paddingLeft
io.sentry.SpanContext$JsonKeys: java.lang.String PARENT_SPAN_ID
io.sentry.NoOpTransactionProfiler: io.sentry.NoOpTransactionProfiler instance
io.sentry.protocol.Gpu: java.lang.String vendorName
io.sentry.BaggageHeader: java.lang.String value
io.flutter.embedding.android.KeyData: boolean synthesized
io.sentry.protocol.SentryStackTrace: java.util.Map unknown
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
io.sentry.android.replay.capture.BufferCaptureStrategy$captureReplay$2: kotlin.jvm.functions.Function1 $onSegmentSent
io.sentry.android.replay.WindowSpy$decorViewClass$2: io.sentry.android.replay.WindowSpy$decorViewClass$2 INSTANCE
io.sentry.profilemeasurements.ProfileMeasurementValue$JsonKeys: java.lang.String VALUE
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String IMAGE_SIZE
io.sentry.protocol.Request$JsonKeys: java.lang.String HEADERS
io.sentry.android.replay.util.AndroidTextLayout: android.text.Layout layout
io.sentry.ProfilingTraceData: java.lang.String devicePhysicalMemoryBytes
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion Companion
io.sentry.Scope: java.lang.String transactionName
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: boolean closed
io.sentry.android.core.internal.gestures.SentryGestureListener: io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState scrollState
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String dartLibraryUri
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation PORTRAIT
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
io.sentry.android.core.AnrIntegration: io.sentry.SentryOptions options
io.sentry.SentryOptions: io.sentry.SentryOptions$Cron cron
io.sentry.rrweb.RRWebSpanEvent: java.util.Map unknown
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENVIRONMENT
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
io.sentry.android.core.SentryAndroidOptions: boolean enableNdk
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
io.sentry.protocol.SentryStackTrace: java.util.List frames
io.sentry.DuplicateEventDetectionEventProcessor: java.util.Map capturedObjects
io.sentry.flutter.SentryFlutterPluginKt: int APP_START_MAX_DURATION_MS
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.plugin.common.BinaryMessenger messenger
io.sentry.SpanStatus: io.sentry.SpanStatus CANCELLED
io.sentry.android.core.AndroidCpuCollector: double nanosecondsPerClockTick
io.sentry.android.core.SentryAndroidOptions: boolean attachScreenshot
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int INVERTED_STYLUS
io.sentry.vendor.Base64$Coder: byte[] output
io.sentry.android.replay.capture.SessionCaptureStrategy: io.sentry.android.replay.capture.SessionCaptureStrategy$Companion Companion
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
io.sentry.MonitorConfig: java.lang.Long checkinMargin
io.sentry.android.replay.ScreenshotRecorder$capture$1$1$1$1: io.sentry.android.replay.ScreenshotRecorder this$0
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt: int MAX_PATH_ITEMS
io.sentry.protocol.Gpu$JsonKeys: java.lang.String NPOT_SUPPORT
io.sentry.protocol.Device: java.lang.Boolean online
io.sentry.protocol.SentryStackFrame: java.lang.String symbolAddr
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String TAG
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_NONE
io.sentry.metrics.Metric: io.sentry.metrics.MetricType type
io.sentry.protocol.SdkVersion$JsonKeys: java.lang.String INTEGRATIONS
io.sentry.ExternalOptions: java.lang.Boolean printUncaughtStackTrace
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: java.util.Map unknown
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
io.sentry.util.StringUtils: java.lang.String CORRUPTED_NIL_UUID
io.sentry.protocol.Gpu: java.lang.String vendorId
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.sentry.android.core.ManifestMetadataReader: java.lang.String ANR_TIMEOUT_INTERVAL_MILLIS
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
io.sentry.protocol.MeasurementValue: java.lang.String KEY_TIME_TO_FULL_DISPLAY
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String pathToBundle
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int height
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: java.lang.Object $oldValue
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.sentry.TraceContext$JsonKeys: java.lang.String REPLAY_ID
io.sentry.Scope: io.sentry.PropagationContext propagationContext
io.sentry.config.AbstractPropertiesProvider: java.lang.String prefix
io.sentry.SentryEvent: java.lang.String transaction
io.sentry.cache.tape.QueueFile: io.sentry.cache.tape.QueueFile$Element last
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.reflect.KProperty[] $$delegatedProperties
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_OS_VERSION
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: android.graphics.Rect visibleRect
io.sentry.TransactionContext: boolean isForNextAppStart
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty recorderConfig$delegate
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.flutter.embedding.android.AndroidTouchProcessor: int DEFAULT_HORIZONTAL_SCROLL_FACTOR
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
io.sentry.MetricsAggregator: io.sentry.ILogger logger
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
io.sentry.protocol.SentryStackFrame: java.lang.String absPath
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
io.sentry.internal.gestures.UiElement: java.lang.String resourceName
io.sentry.UserFeedback: io.sentry.protocol.SentryId eventId
io.sentry.android.core.AnrIntegration: io.sentry.android.core.ANRWatchDog anrWatchDog
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: long queuedTime
io.sentry.rrweb.RRWebInteractionMoveEvent: int pointerId
io.sentry.internal.modules.ManifestModulesLoader: java.lang.ClassLoader classLoader
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader$OnImageAvailableListener onImageAvailableListener
io.sentry.android.replay.LastSegmentData: io.sentry.SentryReplayEvent$ReplayType replayType
io.sentry.android.replay.capture.SessionCaptureStrategy: io.sentry.IHub hub
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String TRANSACTION_INFO
io.sentry.NoOpSpan: io.sentry.NoOpSpan instance
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.android.core.SentryAndroidOptions options
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
io.sentry.Baggage$DSCKeys: java.lang.String ENVIRONMENT
io.sentry.SentryBaseEvent: io.sentry.protocol.Request request
io.sentry.protocol.SentryStackFrame: java.lang.String rawFunction
io.sentry.protocol.Request: java.lang.Long bodySize
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String dartEntrypoint
io.flutter.embedding.engine.FlutterEngineGroup: java.util.List activeEngines
io.sentry.android.replay.ReplayFrame: long timestamp
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
io.sentry.DataCategory: io.sentry.DataCategory Transaction
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: java.nio.ByteBuffer message
io.sentry.DataCategory: io.sentry.DataCategory Security
io.sentry.android.core.internal.util.FirstDrawDoneListener: android.os.Handler mainThreadHandler
io.sentry.rrweb.RRWebIncrementalSnapshotEvent: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource source
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_TO_FILE
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.Set onTrimMemoryListeners
io.sentry.MonitorConfig: java.util.Map unknown
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit HOUR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
io.sentry.MetricsAggregator: boolean isClosed
io.sentry.android.core.AnrV2Integration: android.content.Context context
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: int generationNumber
io.sentry.transport.AsyncHttpTransport$AsyncConnectionThreadFactory: int cnt
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_RENDER_MODE
io.sentry.vendor.gson.stream.JsonWriter: java.io.Writer out
io.sentry.android.core.PerformanceAndroidEventProcessor: java.lang.String APP_METRICS_PROCESS_INIT_OP
io.sentry.instrumentation.file.FileInputStreamInitData: java.io.File file
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
io.sentry.flutter.SentryFlutter$updateOptions$28: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.ProfilingTransactionData: java.lang.String id
io.sentry.ProfilingTransactionData: java.lang.Long relativeStartNs
io.sentry.SendFireAndForgetEnvelopeSender: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath sendFireAndForgetDirPath
io.sentry.SentryOptions$Cron: java.lang.Long defaultCheckinMargin
io.sentry.util.Platform: boolean isJavaNinePlus
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] $VALUES
io.sentry.MonitorSchedule: java.util.Map unknown
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.Class activityClass
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String NATIVE
io.sentry.SpanDataConvention: java.lang.String DB_NAME_KEY
io.sentry.SentryLockReason: java.lang.String className
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener listener
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan appStartSpan
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode lca
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ExecutorService executor
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleTracingAutoFinish
io.sentry.SentryOptions: io.sentry.ILogger logger
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
io.sentry.HttpStatusCodeRange: int min
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean isVisible
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_SURFACE_CONTROL
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: int upBandwidth
io.sentry.transport.HttpConnection: java.net.Proxy proxy
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: io.sentry.IHub hub
io.sentry.android.replay.capture.BufferCaptureStrategy: java.lang.String TAG
io.sentry.android.replay.ScreenshotRecorder: kotlin.Lazy prescaledMatrix$delegate
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String initialRoute
io.flutter.embedding.android.KeyData: int BYTES_PER_FIELD
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String NETWORK_POLICY_METADATA_KEY
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_USE_TEST_FONTS
io.sentry.rrweb.RRWebSpanEvent: double startTimestamp
io.sentry.Session$JsonKeys: java.lang.String RELEASE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
io.sentry.protocol.MetricSummary$JsonKeys: java.lang.String SUM
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
io.sentry.android.core.CurrentActivityHolder: java.lang.ref.WeakReference currentActivity
io.sentry.android.core.AndroidProfiler$ProfileEndData: long endNanos
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
io.sentry.SentryOptions: int readTimeoutMillis
io.sentry.util.Pair: java.lang.Object first
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy proxy
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: int encodedValue
io.sentry.flutter.SentryFlutterPlugin: java.lang.ref.WeakReference activity
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
io.sentry.SentryReplayEvent: io.sentry.protocol.SentryId replayId
io.sentry.android.core.AndroidTransactionProfiler: boolean isInitialized
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ConcurrentLinkedQueue queue
io.sentry.android.core.SentryAndroid: java.lang.String SENTRY_REPLAY_INTEGRATION_CLASS_NAME
io.flutter.view.VsyncWaiter$DisplayListener: android.hardware.display.DisplayManager displayManager
io.sentry.protocol.User: java.lang.String id
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String UNIT_BYTES
io.flutter.embedding.engine.FlutterOverlaySurface: int id
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
io.sentry.android.core.LifecycleWatcher: io.sentry.transport.ICurrentDateProvider currentDateProvider
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
io.sentry.flutter.SentryFlutter$updateOptions$1: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.DuplicateEventDetectionEventProcessor: io.sentry.SentryOptions options
io.flutter.embedding.engine.renderer.FlutterRenderer: java.lang.String TAG
io.sentry.android.core.ManifestMetadataReader: java.lang.String DEBUG_LEVEL
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_FROZEN_FRAME_RENDERS
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
io.sentry.rrweb.RRWebVideoEvent: int segmentId
io.sentry.android.replay.WindowSpy: kotlin.Lazy decorViewClass$delegate
io.sentry.HostnameCache: long expirationTimestamp
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
io.sentry.protocol.Request$JsonKeys: java.lang.String BODY_SIZE
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayVideo
io.sentry.android.core.SentryAndroidOptions: boolean reportHistoricalAnrs
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
io.sentry.protocol.OperatingSystem$JsonKeys: java.lang.String VERSION
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
io.sentry.android.core.AnrIntegration: boolean isClosed
io.sentry.protocol.App$JsonKeys: java.lang.String APP_BUILD
io.sentry.Span: io.sentry.SentryDate startTimestamp
io.sentry.Attachment: java.lang.String DEFAULT_ATTACHMENT_TYPE
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kKeyboard
io.flutter.embedding.engine.FlutterEngineGroupCache: io.flutter.embedding.engine.FlutterEngineGroupCache instance
io.sentry.SpanStatus: io.sentry.SpanStatus DATA_LOSS
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.sentry.SentryEnvelopeHeader: java.util.Map unknown
io.sentry.Session: java.lang.Double duration
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String SYNTHETIC
io.sentry.clientreport.ClientReport: java.util.Date timestamp
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.sentry.internal.modules.ModulesLoader: java.lang.String EXTERNAL_MODULES_FILENAME
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
io.sentry.vendor.gson.stream.JsonReader: int peekedNumberLength
io.sentry.rrweb.RRWebVideoEvent: int width
androidx.fragment.app.Fragment: int CREATED
io.flutter.embedding.android.KeyData: java.lang.String CHANNEL
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.transport.ICurrentDateProvider dateProvider
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information BYTE
io.sentry.android.replay.gestures.GestureRecorder$onRootViewsChanged$1$1: android.view.View $root
io.sentry.rrweb.RRWebSpanEvent: java.lang.String op
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
io.sentry.cache.PersistingScopeObserver: java.lang.String TRACE_FILENAME
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.flutter.plugin.common.StandardMessageCodec: byte NULL
io.sentry.Stack: java.util.Deque items
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
io.flutter.embedding.android.KeyboardMap$PressingGoal: io.flutter.embedding.android.KeyboardMap$KeyPair[] keys
io.sentry.protocol.Device: java.lang.Long storageSize
io.sentry.android.replay.RootViewsSpy: java.util.concurrent.CopyOnWriteArrayList listeners
io.sentry.flutter.SentryFlutter$updateOptions$28: java.util.Map $data
io.sentry.android.core.performance.AppStartMetrics: boolean isCallbackRegistered
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String ENVIRONMENT
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: java.lang.String $propertyName$inlined
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.SentryOptions options
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.sentry.protocol.Gpu: java.lang.Integer id
io.sentry.SentryCrashLastRunState: java.lang.Object crashedLastRunLock
io.sentry.cache.CacheStrategy: io.sentry.util.LazyEvaluator serializer
io.flutter.plugin.text.ProcessTextPlugin: java.util.Map requestsByCode
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
io.sentry.MonitorSchedule: java.lang.String type
io.sentry.android.core.PerformanceAndroidEventProcessor: java.lang.String APP_METRICS_APPLICATION_OP
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String PLATFORM
io.sentry.flutter.SentryFlutter$updateOptions$9: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
io.sentry.SentryEnvelope: io.sentry.SentryEnvelopeHeader header
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type
io.sentry.rrweb.RRWebMetaEvent$JsonKeys: java.lang.String HREF
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_START_PAUSED
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
io.sentry.android.core.AndroidProfiler: java.util.ArrayDeque screenFrameRateMeasurements
io.sentry.android.core.ActivityBreadcrumbsIntegration: boolean enabled
io.sentry.MemoryCollectionData: long timestampMillis
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: java.lang.Object $value
io.sentry.metrics.GaugeMetric: double min
io.sentry.util.UrlUtils$UrlDetails: java.lang.String query
io.sentry.transport.HttpConnection: java.nio.charset.Charset UTF_8
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
io.sentry.android.core.PerformanceAndroidEventProcessor: java.lang.String APP_METRICS_CONTENT_PROVIDER_OP
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACES_ACTIVITY_AUTO_FINISH_ENABLE
io.sentry.android.core.ManifestMetadataReader: java.lang.String ENABLE_ROOT_CHECK
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize MEDIUM
io.sentry.android.core.NdkHandlerStrategy: io.sentry.android.core.NdkHandlerStrategy SENTRY_HANDLER_STRATEGY_DEFAULT
io.sentry.TransactionContext: io.sentry.protocol.TransactionNameSource transactionNameSource
io.sentry.android.core.NdkIntegration: java.lang.Class sentryNdkClass
io.sentry.android.replay.ReplayCache: java.util.concurrent.atomic.AtomicBoolean isClosed
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: java.util.concurrent.CountDownLatch latch
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.embedding.android.AndroidTouchProcessor touchProcessor
io.sentry.android.replay.ReplayIntegration: kotlin.Lazy rootViewsSpy$delegate
io.sentry.android.core.ManifestMetadataReader: java.lang.String UNCAUGHT_EXCEPTION_HANDLER_ENABLE
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: java.util.concurrent.ExecutorService executor
io.sentry.internal.gestures.UiElement: java.lang.ref.WeakReference viewRef
io.sentry.DataCategory: java.lang.String category
io.sentry.ReplayRecording: java.util.Map unknown
io.sentry.rrweb.RRWebVideoEvent: java.util.Map payloadUnknown
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.util.Random random
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: long timestampNanos
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: float startY
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String ON_BACK_CALLBACK_ENABLED_KEY
io.sentry.android.core.internal.util.RootChecker: java.nio.charset.Charset UTF_8
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_REPLAY_TYPE
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator envelopeReader
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: android.content.res.AssetManager androidAssetManager
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
io.sentry.flutter.SentryFlutter$updateOptions$27: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.Session: java.util.Date timestamp
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
io.sentry.metrics.MetricsHelper$1: int[] $SwitchMap$io$sentry$MeasurementUnit$Duration
io.sentry.android.replay.ScreenshotRecorderConfig: int bitRate
io.sentry.SentryLockReason: int LOCKED
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: java.util.List actions
io.sentry.SentryAutoDateProvider: io.sentry.SentryDateProvider dateProvider
io.sentry.internal.gestures.UiElement: java.lang.String className
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$3: com.lib.flutter_blue_plus.FlutterBluePlusPlugin this$0
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean isSerial
io.sentry.android.replay.gestures.ReplayGestureConverter: long touchMoveBaseline
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: java.util.concurrent.atomic.AtomicReference value
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
io.sentry.MeasurementUnit: java.lang.String NONE
io.flutter.plugin.editing.SpellCheckPlugin: java.lang.String SUGGESTIONS_KEY
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_VULKAN_VALIDATION
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit MINUTE
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String PLATFORM
io.sentry.SentryOptions: boolean enableUncaughtExceptionHandler
io.sentry.rrweb.RRWebVideoEvent: java.util.Map unknown
io.sentry.SentryReplayOptions: java.lang.String EXOPLAYER_STYLED_CLASS_NAME
io.sentry.protocol.SentryStackFrame: java.lang.String imageAddr
io.sentry.ExternalOptions: java.lang.String PROXY_PORT_DEFAULT
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
io.sentry.SentryOptions: io.sentry.ITransactionProfiler transactionProfiler
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
io.sentry.metrics.Metric: io.sentry.MeasurementUnit unit
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String METHOD_PROCESS_TEXT_ACTION
io.sentry.flutter.SentryFlutter$updateOptions$15: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.graphics.SurfaceTexture surfaceTexture
io.sentry.cache.EnvelopeCache: java.lang.String SUFFIX_SESSION_FILE
io.sentry.SentryAppStartProfilingOptions: java.util.Map unknown
io.sentry.android.core.ContextUtils: io.sentry.android.core.util.AndroidLazyEvaluator staticAppInfo
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$4: com.lib.flutter_blue_plus.FlutterBluePlusPlugin this$0
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
io.sentry.protocol.MeasurementValue: java.lang.String KEY_APP_START_COLD
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED
io.flutter.plugin.common.StandardMessageCodec: byte INT_ARRAY
io.sentry.android.core.AndroidProfiler$ProfileStartData: long startCpuMillis
io.sentry.protocol.User$JsonKeys: java.lang.String GEO
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType COLD
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String UNIT_PERCENT
io.sentry.clientreport.DiscardedEvent$JsonKeys: java.lang.String REASON
io.sentry.android.core.ManifestMetadataReader: java.lang.String CLIENT_REPORTS_ENABLE
io.sentry.protocol.Message$JsonKeys: java.lang.String MESSAGE
io.sentry.SentryReplayOptions: java.lang.String IMAGE_VIEW_CLASS_NAME
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AUTOMATICALLY_REGISTER_PLUGINS_KEY
io.sentry.OutboxSender: io.sentry.IEnvelopeReader envelopeReader
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long lastFrameEndNanos
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern BLANK_RE
io.sentry.android.core.internal.gestures.SentryWindowCallback: androidx.core.view.GestureDetectorCompat gestureDetector
io.sentry.vendor.gson.stream.JsonReader: int stackSize
io.sentry.DataCategory: io.sentry.DataCategory[] $VALUES
io.sentry.android.core.BuildConfig: boolean DEBUG
io.sentry.android.replay.WindowRecorder: java.util.ArrayList rootViews
io.sentry.SentryItemType: io.sentry.SentryItemType Event
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
io.flutter.view.AccessibilityBridge$StringAttribute: int end
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
io.flutter.plugin.editing.SpellCheckPlugin: io.flutter.embedding.engine.systemchannels.SpellCheckChannel mSpellCheckChannel
io.sentry.SentryOptions: boolean enableDeduplication
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
io.sentry.CheckInStatus: io.sentry.CheckInStatus[] $VALUES
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason EVENT_PROCESSOR
io.sentry.MonitorContexts: long serialVersionUID
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_TO_FILE
io.sentry.protocol.MeasurementValue$JsonKeys: java.lang.String VALUE
io.sentry.metrics.MetricsHelper: java.util.regex.Pattern UNIT_PATTERN
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String LOCK
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.profilemeasurements.ProfileMeasurementValue$JsonKeys: java.lang.String START_NS
io.sentry.android.replay.capture.BufferCaptureStrategy: long ENVELOPE_PROCESSING_DELAY
io.sentry.SamplingContext: io.sentry.TransactionContext transactionContext
io.sentry.SentryItemType: io.sentry.SentryItemType Attachment
io.sentry.MetricsAggregator: io.sentry.metrics.IMetricsClient client
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.plugin.platform.SingleViewWindowManager: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowRootView
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String TAG
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
io.sentry.SpanContext: io.sentry.SpanId parentSpanId
io.sentry.MonitorConfig: java.lang.Long failureIssueThreshold
io.sentry.protocol.Response: java.lang.Object data
io.sentry.SentryOptions: io.sentry.SentryReplayOptions sessionReplay
io.sentry.ExternalOptions: java.lang.Boolean enablePrettySerializationOutput
io.sentry.android.core.internal.threaddump.Line: java.lang.String text
io.flutter.embedding.engine.FlutterJNI: float displayWidth
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
io.sentry.android.core.ManifestMetadataReader: java.lang.String BREADCRUMBS_USER_INTERACTION_ENABLE
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int $stable
io.sentry.SentryRuntimeEventProcessor: java.lang.String javaVendor
io.sentry.android.core.AndroidTransactionProfiler: int profilingTracesHz
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState PAUSED
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
io.sentry.SentryBaseEvent: java.lang.String release
io.sentry.android.core.AndroidTransportGate: io.sentry.SentryOptions options
io.sentry.SentryLockReason: int SLEEPING
io.sentry.android.replay.capture.CaptureStrategy$Companion: long MAX_SEGMENT_DURATION
io.sentry.TraceContext$JsonKeys: java.lang.String SAMPLE_RATE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
io.sentry.android.core.ActivityFramesTracker: io.sentry.android.core.SentryAndroidOptions options
io.sentry.Baggage$DSCKeys: java.lang.String SAMPLE_RATE
io.sentry.protocol.SentryStackFrame: java.lang.String platform
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String STATUS
io.sentry.Attachment: java.lang.String filename
io.flutter.embedding.android.KeyboardMap$PressingGoal: int mask
io.sentry.protocol.Device: java.lang.Float batteryLevel
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.embedding.android.FlutterImageView: java.lang.String TAG
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
io.sentry.protocol.SentryThread: java.lang.Long id
io.flutter.embedding.android.KeyData$DeviceType: long value
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: java.lang.String filePath
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
io.sentry.SentryLockReason$JsonKeys: java.lang.String CLASS_NAME
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint dartEntrypoint
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
io.sentry.android.core.LifecycleWatcher: io.sentry.IHub hub
io.sentry.SentryOptions: io.sentry.util.LazyEvaluator dateProvider
io.sentry.Baggage: java.lang.String thirdPartyHeader
io.sentry.android.core.performance.AppStartMetrics: io.sentry.ITransactionProfiler appStartProfiler
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map unknown
io.sentry.android.core.AnrV2EventProcessor: io.sentry.SentryExceptionFactory sentryExceptionFactory
io.sentry.android.core.ManifestMetadataReader: java.lang.String SENTRY_GRADLE_PLUGIN_INTEGRATIONS
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
io.sentry.SentryEvent$JsonKeys: java.lang.String LOGGER
io.sentry.PerformanceCollectionData: io.sentry.CpuCollectionData cpuData
io.sentry.rrweb.RRWebVideoEvent: java.lang.String REPLAY_CONTAINER
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.sentry.PreviousSessionFinalizer: io.sentry.IHub hub
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize ALWAYS
io.sentry.android.core.internal.gestures.SentryGestureListener: io.sentry.ITransaction activeTransaction
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason[] $VALUES
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TAG
io.sentry.android.core.SpanFrameMetricsCollector: java.util.concurrent.ConcurrentSkipListSet frames
io.sentry.SentryOptions: java.lang.Double profilesSampleRate
io.sentry.SentryBaseEvent: java.util.Map extra
io.sentry.ExternalOptions: java.lang.String dsn
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
io.sentry.android.replay.ScreenshotRecorderConfig: float scaleFactorY
io.sentry.ProfilingTraceData: java.lang.String deviceManufacturer
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
io.sentry.android.core.AndroidCpuCollector: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
io.sentry.android.core.AnrIntegration: java.lang.Object watchDogLock
io.sentry.android.ndk.DebugImagesLoader: io.sentry.android.ndk.NativeModuleListLoader moduleListLoader
io.sentry.SamplingContext: io.sentry.CustomSamplingContext customSamplingContext
io.sentry.DefaultTransactionPerformanceCollector$2: io.sentry.DefaultTransactionPerformanceCollector this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_USE_TEST_FONTS
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED_NAME
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_INITIAL_ROUTE
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource Scroll
io.sentry.android.replay.SentryReplayModifiers: io.sentry.android.replay.SentryReplayModifiers INSTANCE
io.sentry.android.core.ANRWatchDog: java.util.concurrent.atomic.AtomicBoolean reported
io.sentry.protocol.SentryTransaction: java.lang.String type
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.sentry.transport.RateLimiter: java.util.Map sentryRetryAfterLimit
io.sentry.android.core.internal.threaddump.ThreadDumpParser: io.sentry.SentryOptions options
io.flutter.plugin.editing.ScribePlugin: android.view.inputmethod.InputMethodManager mInputMethodManager
io.sentry.protocol.SentryRuntime: java.lang.String name
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason CACHE_OVERFLOW
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality HIGH
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.util.MainLooperHandler mainLooperHandler
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_CACHE_SKSL
io.sentry.android.replay.util.PersistableLinkedList: kotlin.jvm.functions.Function0 cacheProvider
io.sentry.android.replay.ScreenshotRecorderConfig: float scaleFactorX
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
io.sentry.ProfilingTraceData: java.util.List deviceCpuFrequencies
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.BackGestureChannel backGestureChannel
io.sentry.protocol.SdkVersion$JsonKeys: java.lang.String NAME
io.sentry.protocol.App$JsonKeys: java.lang.String VIEW_NAMES
io.sentry.SentryReplayEvent: java.util.List errorIds
io.sentry.protocol.Gpu: java.lang.Boolean multiThreadedRendering
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.sentry.android.core.NetworkBreadcrumbsIntegration: android.content.Context context
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus CONNECTED
io.sentry.SentryOptions: long flushTimeoutMillis
io.sentry.MonitorConfig$JsonKeys: java.lang.String CHECKIN_MARGIN
io.sentry.android.replay.ReplayIntegration: io.sentry.IHub hub
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1: io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget this$0
io.sentry.android.replay.WindowSpy$windowField$2: io.sentry.android.replay.WindowSpy$windowField$2 INSTANCE
io.sentry.protocol.App$JsonKeys: java.lang.String IN_FOREGROUND
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String OP
io.sentry.android.core.AnrV2EventProcessor: android.content.Context context
io.sentry.RequestDetailsResolver: java.lang.String USER_AGENT
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int unsetValue
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: java.util.concurrent.atomic.AtomicReference value
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int TOUCH
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String message
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: java.lang.String TAG
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String COLNO
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DART_ENTRYPOINT_URI_META_DATA_KEY
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.SentryEnvelope envelope
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
io.sentry.TypeCheckHint: java.lang.String SPRING_EXCHANGE_FILTER_REQUEST
io.sentry.SentryEvent: java.util.Date timestamp
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: android.content.Context context
io.sentry.protocol.Geo: java.lang.String region
io.sentry.vendor.gson.stream.JsonReader: java.io.Reader in
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: float x
io.sentry.CheckIn: io.sentry.MonitorContexts contexts
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
io.sentry.transport.ReusableCountLatch$Sync: long serialVersionUID
io.flutter.plugin.platform.SingleViewWindowManager: java.lang.String TAG
io.sentry.android.core.AndroidProfiler$ProfileEndData: boolean didTimeout
io.sentry.rrweb.RRWebInteractionEvent: int id
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
io.sentry.SentryOptions: java.util.List optionsObservers
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
io.sentry.protocol.SdkInfo: java.util.Map unknown
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.android.replay.video.SimpleVideoEncoder: kotlin.jvm.functions.Function0 onClose
io.sentry.protocol.SentrySpan: java.util.Map tags
io.flutter.view.FlutterRunArguments: java.lang.String entrypoint
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String CONTEXT_LINE
io.sentry.protocol.SentryRuntime$JsonKeys: java.lang.String RAW_DESCRIPTION
io.sentry.android.core.NoOpDebugImagesLoader: io.sentry.android.core.NoOpDebugImagesLoader instance
io.sentry.MeasurementUnit$Custom: java.lang.String name
io.sentry.android.replay.gestures.ReplayGestureConverter: int CAPTURE_MOVE_EVENT_THRESHOLD
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: int paddingTop
io.sentry.protocol.SdkVersion$JsonKeys: java.lang.String VERSION
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
io.sentry.android.core.ManifestMetadataReader: java.lang.String ANR_REPORT_DEBUG
io.sentry.android.core.AppState: io.sentry.android.core.AppState instance
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String CODE_FILE
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray sessionIdToLoadingUnitId
io.sentry.clientreport.DiscardedEvent: java.lang.String category
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_ARRAY
io.sentry.android.replay.video.SimpleVideoEncoder: kotlin.Lazy mediaFormat$delegate
io.sentry.SentryOptions: int profilingTracesHz
io.sentry.internal.modules.ResourcesModulesLoader: java.lang.ClassLoader classLoader
io.sentry.android.replay.util.PersistableLinkedList: java.util.concurrent.ScheduledExecutorService persistingExecutor
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.HttpConnection connection
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: java.util.Map supportedNetworkData
io.sentry.protocol.SentryException$JsonKeys: java.lang.String STACKTRACE
io.sentry.protocol.Response$JsonKeys: java.lang.String HEADERS
io.sentry.MetricsAggregator: java.util.NavigableMap buckets
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: java.util.concurrent.atomic.AtomicBoolean isInitialized
io.sentry.protocol.SentryStackFrame: java.lang.String instructionAddr
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_OBSERVATORY_PORT
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: io.sentry.android.replay.RootViewsSpy this$0
io.sentry.protocol.Request: java.lang.String apiTarget
io.sentry.android.core.AndroidProfiler: java.lang.String frameMetricsCollectorId
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: java.lang.String $propertyName
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode parent
io.sentry.SentryTracer: io.sentry.protocol.TransactionNameSource transactionNameSource
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
io.sentry.DataCategory: io.sentry.DataCategory Unknown
io.sentry.android.core.ManifestMetadataReader: java.lang.String ATTACH_THREADS
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.embedding.android.KeyData: io.flutter.embedding.android.KeyData$DeviceType deviceType
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String RELEASE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $VALUES
io.flutter.plugin.common.StandardMessageCodec: byte STRING
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$1: kotlin.jvm.functions.Function0 $task
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String DATA
io.sentry.protocol.Device$JsonKeys: java.lang.String SIMULATOR
io.sentry.android.core.internal.util.AndroidMainThreadChecker: io.sentry.android.core.internal.util.AndroidMainThreadChecker instance
io.sentry.protocol.App$JsonKeys: java.lang.String APP_PERMISSIONS
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$DisplayListener listener
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
io.sentry.android.core.performance.TimeSpan: long startUnixTimeMs
io.sentry.protocol.SentrySpan: java.util.Map data
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_BACKGROUND_MODE
io.sentry.TraceContext$JsonKeys: java.lang.String PUBLIC_KEY
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus UNKNOWN
io.sentry.hints.BlockingFlushHint: java.util.concurrent.CountDownLatch latch
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String PARENT_SPAN_ID
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel VERBOSE
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource CUSTOM
io.sentry.ProfilingTraceData: java.util.List transactions
kotlinx.coroutines.CompletedExceptionally: int _handled
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
io.sentry.Hint: io.sentry.Attachment threadDump
io.flutter.embedding.android.FlutterFragment$2: io.flutter.embedding.android.FlutterFragment this$0
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue this$0
io.sentry.ExternalOptions: java.lang.Boolean enableBackpressureHandling
io.sentry.ProfilingTraceData: java.io.File traceFile
io.sentry.SentryClient: io.sentry.transport.ITransport transport
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: java.util.List children
io.sentry.transport.NoOpTransportGate: io.sentry.transport.NoOpTransportGate instance
io.sentry.protocol.App: java.lang.String TYPE
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType[] $VALUES
io.sentry.protocol.Request$JsonKeys: java.lang.String API_TARGET
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
io.sentry.SentryBaseEvent: java.lang.String platform
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel WARNING
io.sentry.protocol.Response: java.lang.Integer statusCode
io.sentry.android.core.SentryAndroidOptions: boolean enablePerformanceV2
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DURATION_NS
io.sentry.util.thread.MainThreadChecker: long mainThreadId
io.flutter.embedding.engine.systemchannels.LocalizationChannel: java.lang.String TAG
io.sentry.SentryTracer$1: io.sentry.SentryTracer this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
io.sentry.protocol.Contexts: java.lang.String REPLAY_ID
io.flutter.plugin.text.ProcessTextPlugin: io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.Hint hint
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
io.sentry.SentryEvent$JsonKeys: java.lang.String MODULES
io.sentry.cache.PersistingOptionsObserver: io.sentry.SentryOptions options
io.sentry.internal.modules.ModulesLoader: io.sentry.ILogger logger
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String BRIEFLY_SHOW_PASSWORD
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DESTROY_ENGINE_WITH_ACTIVITY
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: java.lang.String $propertyName$inlined
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader debugImagesLoader
io.sentry.android.ndk.BuildConfig: boolean DEBUG
io.sentry.protocol.DebugImage: java.lang.String debugId
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String REQUEST
io.sentry.android.replay.ScreenshotRecorder$RecorderExecutorServiceThreadFactory: int cnt
io.sentry.android.core.internal.gestures.SentryGestureListener: io.sentry.internal.gestures.UiElement activeUiElement
io.sentry.SentryReplayOptions: boolean trackOrientationChange
io.sentry.Span: io.sentry.SpanContext context
io.sentry.internal.debugmeta.NoOpDebugMetaLoader: io.sentry.internal.debugmeta.NoOpDebugMetaLoader instance
io.sentry.android.core.internal.threaddump.Lines: int mMax
io.sentry.android.core.NetworkBreadcrumbsIntegration: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.protocol.DebugImage: java.util.Map unknown
io.sentry.android.core.internal.threaddump.Lines: java.util.ArrayList mList
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kHdmi
kotlinx.coroutines.InvokeOnCancelling: int _invoked
io.sentry.android.core.ActivityLifecycleIntegration: android.app.Application application
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int UNKNOWN
io.sentry.protocol.MetricSummary: java.util.Map tags
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
io.sentry.SpanStatus: int maxHttpStatusCode
io.flutter.embedding.engine.systemchannels.BackGestureChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.ExternalOptions: java.util.List ignoredCheckIns
io.sentry.SentryBaseEvent: io.sentry.protocol.SdkVersion sdk
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String FILENAME
io.sentry.BuildConfig: java.lang.String SENTRY_JAVA_SDK_NAME
io.sentry.protocol.User$JsonKeys: java.lang.String DATA
io.sentry.android.core.performance.TimeSpan: long startSystemNanos
io.sentry.protocol.Device: java.lang.Long externalFreeStorage
io.sentry.internal.modules.ModulesLoader: java.util.Map cachedModules
io.sentry.protocol.MeasurementValue: java.lang.String KEY_FRAMES_SLOW
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: io.sentry.IHub hub
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize SMALL
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
io.sentry.transport.RateLimiter: io.sentry.transport.ICurrentDateProvider currentDateProvider
io.sentry.MetricsAggregator: io.sentry.ISentryExecutorService executorService
io.sentry.MonitorConfig$JsonKeys: java.lang.String MAX_RUNTIME
io.sentry.protocol.Gpu$JsonKeys: java.lang.String VERSION
io.sentry.protocol.SentryPackage$JsonKeys: java.lang.String VERSION
io.sentry.vendor.gson.stream.JsonScope: int CLOSED
io.sentry.SentryOptions: boolean enableSpanLocalMetricAggregation
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
io.sentry.protocol.Device$JsonKeys: java.lang.String LOW_MEMORY
io.sentry.ProfilingTraceData: java.lang.String transactionName
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_HANDLE_DEEPLINKING
io.sentry.android.replay.capture.BaseCaptureStrategy$ReplayPersistingExecutorServiceThreadFactory: int cnt
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: io.sentry.ILogger logger
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
io.sentry.protocol.Device: java.util.TimeZone timezone
io.sentry.SentryOptions: boolean attachThreads
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
io.sentry.cache.EnvelopeCache: java.util.Map fileNameMap
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
io.sentry.SpanDataConvention: java.lang.String HTTP_FRAGMENT_KEY
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
io.sentry.protocol.Device$JsonKeys: java.lang.String LANGUAGE
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String APP_START_COLD
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType MouseDown
kotlin.SafePublicationLazyImpl: java.lang.Object _value
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
io.sentry.flutter.SentryFlutterPlugin$setupReplay$1: io.sentry.flutter.SentryFlutterPlugin$setupReplay$1 INSTANCE
io.sentry.CircularFifoQueue$1: boolean isFirst
io.sentry.IpAddressUtils: java.lang.String DEFAULT_IP_ADDRESS
io.sentry.protocol.Message: java.lang.String formatted
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE
io.sentry.protocol.Device$JsonKeys: java.lang.String CPU_DESCRIPTION
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.sentry.SentryRuntimeEventProcessor: java.lang.String javaVersion
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] $VALUES
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
io.sentry.android.ndk.DebugImagesLoader: java.util.List debugImages
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration previousEnqueuedConfiguration
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator: io.sentry.cache.tape.FileObjectQueue this$0
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String PROFILING_TRACES_HZ
io.sentry.cache.PersistingScopeObserver: java.nio.charset.Charset UTF_8
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: android.util.DisplayMetrics displayMetrics
io.sentry.android.core.SentryFrameMetrics: int slowFrameCount
io.sentry.flutter.SentryFlutter$updateOptions$22: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.ScreenshotEventProcessor: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.sentry.protocol.MeasurementValue: java.lang.String KEY_APP_START_WARM
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
io.sentry.protocol.Browser: java.lang.String name
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.SpanDataConvention: java.lang.String HTTP_QUERY_KEY
io.sentry.vendor.Base64$Decoder: int EQUALS
io.flutter.embedding.engine.FlutterJNI: float displayDensity
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
io.sentry.Breadcrumb: java.util.Map unknown
io.sentry.android.core.EnvelopeFileObserver: io.sentry.IEnvelopeSender envelopeSender
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String META
io.sentry.vendor.Base64$Encoder: int tailLen
io.sentry.protocol.App: java.util.Date appStartTime
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
io.sentry.protocol.ViewHierarchyNode: java.lang.Double alpha
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
io.sentry.SentryReplayOptions: java.lang.String ANDROIDX_MEDIA_VIEW_CLASS_NAME
io.sentry.android.replay.gestures.ReplayGestureConverter: java.util.LinkedHashMap currentPositions
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.IHub hub
io.sentry.flutter.SentryFlutterReplayRecorder: io.flutter.plugin.common.MethodChannel channel
io.sentry.SentryLockReason$JsonKeys: java.lang.String TYPE
io.sentry.SentryEnvelopeItem$CachedItem: java.util.concurrent.Callable dataFactory
io.sentry.protocol.Gpu$JsonKeys: java.lang.String VENDOR_ID
io.sentry.SentryIntegrationPackageStorage: io.sentry.SentryIntegrationPackageStorage INSTANCE
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String FUNCTION
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
io.sentry.rrweb.RRWebVideoEvent: java.lang.String container
io.sentry.protocol.Device$JsonKeys: java.lang.String MODEL
io.sentry.vendor.gson.stream.JsonReader: long MIN_INCOMPLETE_INTEGER
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String ID
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
io.sentry.internal.modules.ManifestModulesLoader$Module: java.lang.String name
io.sentry.SentryTraceHeader: java.lang.Boolean sampled
io.sentry.exception.InvalidSentryTraceHeaderException: long serialVersionUID
io.sentry.rrweb.RRWebOptionsEvent: java.util.Map dataUnknown
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
io.sentry.protocol.SentryThread: java.util.Map unknown
io.flutter.embedding.android.KeyboardMap$TogglingGoal: boolean enabled
io.sentry.SentryOptions: java.util.List viewHierarchyExporters
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.sentry.vendor.Base64: boolean $assertionsDisabled
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
io.sentry.NoOpTransaction: io.sentry.NoOpTransaction instance
io.sentry.Breadcrumb: java.lang.String category
io.sentry.android.replay.ReplayCache$rotate$1: io.sentry.android.replay.ReplayCache this$0
io.sentry.android.core.NetworkBreadcrumbsIntegration: java.lang.Object lock
io.sentry.protocol.Message: java.util.List params
io.sentry.TraceContext: io.sentry.protocol.SentryId traceId
io.sentry.protocol.App: java.lang.String deviceAppHash
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.sanguinarypc.box_sensors.R$string: int app_name
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
io.sentry.SpanDataConvention: java.lang.String HTTP_RESPONSE_CONTENT_LENGTH_KEY
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_PURGE_PERSISTENT_CACHE
io.sentry.protocol.App$JsonKeys: java.lang.String APP_START_TIME
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map operationsOnPermission
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: java.util.concurrent.atomic.AtomicReference value
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int bufferHeight
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String TRACE_SAMPLE_RATE
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource MediaInteraction
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String DESCRIPTION
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
io.sentry.cache.tape.QueueFile: byte[] buffer
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_VMSERVICE_SHARED_LIBRARY_NAME
io.sentry.cache.tape.QueueFile: java.io.File file
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToEmbeddedView
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: java.lang.String $propertyName
io.sentry.protocol.Geo$JsonKeys: java.lang.String CITY
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String MESSAGE
io.sentry.android.core.BuildConfig: java.lang.String BUILD_TYPE
io.sentry.SpanStatus: io.sentry.SpanStatus ABORTED
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long oneSecondInNanos
io.sentry.TraceContext$TraceContextUser$JsonKeys: java.lang.String SEGMENT
io.sentry.protocol.Mechanism: java.lang.String helpLink
io.sentry.android.core.SendCachedEnvelopeIntegration: io.sentry.IHub hub
io.sentry.cache.PersistingOptionsObserver: java.lang.String DIST_FILENAME
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason RATELIMIT_BACKOFF
androidx.fragment.app.Fragment: android.os.Bundle mArguments
io.flutter.embedding.android.KeyboardMap$2: long serialVersionUID
io.sentry.SentryOptions: boolean enabled
io.sentry.android.replay.WindowManagerSpy: kotlin.Lazy mViewsField$delegate
io.sentry.protocol.DebugImage: java.lang.String type
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCROLL
io.sentry.SentryEvent$JsonKeys: java.lang.String LEVEL
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource MouseMove
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: java.lang.String DESCRIPTION
io.sentry.protocol.Device$JsonKeys: java.lang.String PROCESSOR_FREQUENCY
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mBondingDevices
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String unit
io.sentry.android.core.util.AndroidLazyEvaluator: io.sentry.android.core.util.AndroidLazyEvaluator$AndroidEvaluator evaluator
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_ENABLE_STATE_RESTORATION
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$1: kotlin.jvm.functions.Function0 $task
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec codec
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
io.sentry.android.core.cache.AndroidEnvelopeCache: java.lang.String LAST_ANR_REPORT
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
io.sentry.protocol.App: java.util.Map permissions
io.sentry.android.replay.LastSegmentData: java.util.Date timestamp
io.sentry.ExternalOptions: java.lang.Double profilesSampleRate
io.sentry.android.core.ManifestMetadataReader: java.lang.String REPLAYS_ERROR_SAMPLE_RATE
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_DECIMAL
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayUnmask$1: io.sentry.android.replay.ModifierExtensionsKt$sentryReplayUnmask$1 INSTANCE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA
io.sentry.NoOpReplayBreadcrumbConverter: io.sentry.NoOpReplayBreadcrumbConverter instance
io.sentry.protocol.SentryStackTrace$JsonKeys: java.lang.String FRAMES
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: java.lang.Object $oldValue
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
io.sentry.android.replay.video.MuxerConfig: int frameRate
io.sentry.android.core.SendCachedEnvelopeIntegration: java.util.concurrent.atomic.AtomicBoolean isClosed
io.flutter.plugin.common.StandardMessageCodec: byte FALSE
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: java.lang.String TAG
io.sentry.transport.QueuedThreadPoolExecutor: int maxQueueSize
io.sentry.SentryOptions: long maxAttachmentSize
io.sentry.SentryOptions: long sessionTrackingIntervalMillis
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String TRANSACTION
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.android.FlutterView this$0
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
io.sentry.android.core.AndroidCpuCollector: long NANOSECOND_PER_SECOND
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
io.sentry.Span: io.sentry.SpanOptions options
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCROLL_INERTIA_CANCEL
io.sentry.Span: io.sentry.SpanFinishedCallback spanFinishedCallback
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
io.sentry.android.core.internal.gestures.SentryWindowCallback: io.sentry.android.core.internal.gestures.SentryGestureListener gestureListener
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.util.Set onModeChangeListeners
io.sentry.android.core.DeviceInfoUtil: java.lang.Long totalMem
io.sentry.android.core.AnrV2Integration$ParseResult: byte[] dump
io.sentry.Session$JsonKeys: java.lang.String DID
io.sentry.cache.CacheStrategy: io.sentry.SentryOptions options
io.sentry.android.core.SentryAndroidOptions: java.lang.String nativeSdkName
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mPackageName
io.sentry.Hub: java.util.Map throwableToSpan
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView flutterView
io.sentry.protocol.ViewHierarchy: java.util.List windows
io.sentry.android.core.EnvelopeFileObserver: long flushTimeoutMillis
io.sentry.vendor.gson.stream.JsonScope: int EMPTY_DOCUMENT
io.sentry.SpanDataConvention: java.lang.String CONTRIBUTES_TTID
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA_ALLOWLIST
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String X
io.sentry.SpanId: java.lang.String value
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: long id
io.sentry.SentryEnvelopeItemHeader: java.util.Map unknown
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
io.sentry.android.core.NdkIntegration: java.lang.String SENTRY_NDK_CLASS_NAME
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit YEAR
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.Recorder recorder
io.sentry.android.replay.video.SimpleMp4FrameMuxer: int $stable
androidx.fragment.app.Fragment: boolean mMenuVisible
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmapCanvas$2: io.sentry.android.replay.ScreenshotRecorder this$0
io.sentry.metrics.MetricsHelper: long FLUSH_SHIFT_MS
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String FLUTTER_ASSETS_DIR_KEY
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: java.util.Set trackedWindows
io.sentry.NoOpSentryExecutorService: io.sentry.NoOpSentryExecutorService instance
io.flutter.embedding.android.FlutterFragmentActivity: int FRAGMENT_CONTAINER_ID
io.sentry.SentryOptions: boolean enableScopePersistence
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DART_ENTRYPOINT_ARGS
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.atomic.AtomicBoolean isRunning
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mWriteDesc
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
io.sentry.cache.EnvelopeCache: java.lang.String PREFIX_CURRENT_SESSION_FILE
io.sentry.android.core.performance.AppStartMetrics: java.util.Map contentProviderOnCreates
io.sentry.protocol.SentryStackFrame: java.util.List framesOmitted
io.sentry.flutter.SentryFlutterPlugin: long NATIVE_CRASH_WAIT_TIME
io.sentry.SentryLevel: io.sentry.SentryLevel FATAL
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
io.sentry.TypeCheckHint: java.lang.String SPRING_REQUEST_INTERCEPTOR_REQUEST
io.sentry.android.core.AndroidLogger: java.lang.String tag
io.sentry.android.core.NetworkBreadcrumbsIntegration$1: io.sentry.SentryOptions val$options
io.sentry.android.core.AppState: java.lang.Boolean inBackground
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_OBJECT
io.sentry.protocol.SentrySpan: java.lang.String description
io.sentry.MonitorConfig$JsonKeys: java.lang.String TIMEZONE
io.sentry.ProfilingTransactionData: java.lang.String name
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
io.sentry.android.replay.gestures.GestureRecorder: java.lang.Object rootViewsLock
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider contentProvider
io.sentry.metrics.MetricsHelper: int MAX_TOTAL_WEIGHT
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.sentry.Hub: io.sentry.TransactionPerformanceCollector transactionPerformanceCollector
io.sentry.SentryEnvelopeItemHeader$JsonKeys: java.lang.String TYPE
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
io.flutter.embedding.android.FlutterFragment: int FLUTTER_VIEW_ID
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: io.sentry.IHub hub
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: io.sentry.android.core.BuildInfoProvider buildInfoProvider
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_STARTUP
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int MOUSE
io.sentry.protocol.ViewHierarchyNode: java.lang.String renderingSystem
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_VULKAN_VALIDATION_META_DATA_KEY
io.sentry.SentryOptions: java.lang.String DEFAULT_ENVIRONMENT
io.sentry.TypeCheckHint: java.lang.String JUL_LOG_RECORD
io.flutter.plugin.text.ProcessTextPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String TRACE_ID
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String dartEntrypoint
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: java.lang.Object $oldValue
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
io.flutter.view.AccessibilityBridge: float DISABLED_TRANSITION_ANIMATION_SCALE
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String ABS_PATH
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] SUPPORTED_ABIS
io.sentry.android.core.SentryPerformanceProvider: android.app.Application app
io.sentry.SentryEnvelopeItem: java.util.concurrent.Callable dataFactory
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map dataUnknown
io.sentry.metrics.MetricType: java.lang.String statsdCode
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
io.sentry.android.core.AndroidProfiler: java.util.Map measurementsMap
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information EXABYTE
io.sentry.flutter.SentryFlutter$updateOptions$12: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel INFO
io.sentry.rrweb.RRWebInteractionEvent: int POINTER_TYPE_TOUCH
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.ISentryExecutorService executorService
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
io.sentry.transport.CurrentDateProvider: io.sentry.transport.ICurrentDateProvider instance
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean handleDeeplinking
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onWindowFocusChangedListeners
io.sentry.MonitorConfig$JsonKeys: java.lang.String RECOVERY_THRESHOLD
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
io.sentry.SentryThreadFactory: io.sentry.SentryStackTraceFactory sentryStackTraceFactory
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty screenAtStart$delegate
io.sentry.Attachment: io.sentry.JsonSerializable serializable
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1: io.sentry.android.replay.capture.BufferCaptureStrategy this$0
io.sentry.TypeCheckHint: java.lang.String WEBFLUX_EXCEPTION_HANDLER_REQUEST
io.flutter.plugin.text.ProcessTextPlugin: java.util.Map resolveInfosById
io.sentry.android.replay.video.SimpleVideoEncoder$mediaFormat$2: io.sentry.android.replay.video.SimpleVideoEncoder this$0
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NULL
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
io.sentry.protocol.ViewHierarchy$JsonKeys: java.lang.String WINDOWS
io.sentry.android.core.LifecycleWatcher: java.lang.Object timerLock
io.sentry.CheckIn: java.lang.String release
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TIMESTAMP_PREFIX
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
io.sentry.protocol.SentryException: java.lang.String module
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.transport.AsyncHttpTransport this$0
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
io.sentry.internal.modules.ManifestModulesLoader: java.util.regex.Pattern URL_LIB_PATTERN
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SYSTRACE
io.flutter.plugin.platform.PlatformViewsController: boolean enableSurfaceProducerRenderTarget
io.sentry.DefaultTransactionPerformanceCollector: java.util.concurrent.atomic.AtomicBoolean isStarted
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_ID
io.flutter.plugin.platform.PlatformViewWrapper: int prevLeft
io.sentry.transport.RateLimiter$1: io.sentry.transport.RateLimiter this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: android.content.pm.PackageManager packageManager
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType type
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
io.sentry.android.replay.LastSegmentData: java.lang.String screenAtStart
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: java.lang.Object $value
io.sentry.SentryTracer: io.sentry.TransactionPerformanceCollector transactionPerformanceCollector
androidx.fragment.app.Fragment: boolean mFromLayout
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages
io.sentry.config.ClasspathPropertiesLoader: io.sentry.ILogger logger
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type ERROR
io.sentry.android.replay.RootViewsSpy: java.lang.Object viewListLock
androidx.fragment.app.Fragment: int INITIALIZING
io.sentry.rrweb.RRWebMetaEvent: java.util.Map unknown
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
io.sentry.instrumentation.file.FileInputStreamInitData: io.sentry.ISpan span
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAttachEngineToActivity
io.sentry.TransactionOptions: java.lang.Long deadlineTimeout
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource VIEW
io.sentry.SentryInstantDate: java.time.Instant date
io.sentry.protocol.SentryStackFrame: java.lang.Boolean _native
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DESTROY_ENGINE_WITH_FRAGMENT
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
io.sentry.SpanDataConvention: java.lang.String FRAMES_FROZEN
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern WAITING_TO_LOCK_HELD_RE
io.sentry.SentryLevel: io.sentry.SentryLevel[] $VALUES
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String TTID_OP
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String LINENO
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: java.lang.String $propertyName$inlined
io.sentry.android.core.ScreenshotEventProcessor: int DEBOUNCE_MAX_EXECUTIONS
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean waitForRestorationData
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int HOVER
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality[] $VALUES
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.sentry.android.core.internal.util.RootChecker: io.sentry.ILogger logger
io.sentry.protocol.SentryThread: java.util.Map heldLocks
io.sentry.protocol.MeasurementValue: java.lang.String KEY_TIME_TO_INITIAL_DISPLAY
io.sentry.ProfilingTraceData: java.util.Date timestamp
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
io.sentry.Scope: java.lang.Object propagationContextLock
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType IncrementalSnapshot
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
io.sentry.SentryEnvelopeHeader: io.sentry.TraceContext traceContext
io.sentry.cache.tape.QueueFile$Element: io.sentry.cache.tape.QueueFile$Element NULL
io.sentry.protocol.ViewHierarchyNode: java.lang.String type
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_SCREEN_FRAME_RATES
io.sentry.ExternalOptions: java.util.Map tags
io.sentry.instrumentation.file.FileOutputStreamInitData: io.sentry.SentryOptions options
io.sentry.protocol.ViewHierarchyNode: java.lang.Double height
io.sentry.EnvelopeReader: io.sentry.ISerializer serializer
io.sentry.SpanStatus: io.sentry.SpanStatus FAILED_PRECONDITION
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
io.sentry.protocol.SentryException$JsonKeys: java.lang.String THREAD_ID
io.sentry.Baggage$DSCKeys: java.lang.String PUBLIC_KEY
io.sentry.SentryOptions: java.util.List tracePropagationTargets
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver receiver
io.sentry.CircularFifoQueue: java.lang.Object[] elements
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.systemchannels.BackGestureChannel: java.lang.String TAG
io.sentry.SentryItemType: io.sentry.SentryItemType Transaction
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.Map dataUnknown
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BOOLEAN
io.sentry.ExternalOptions: java.util.Set bundleIds
io.sentry.Session$JsonKeys: java.lang.String STARTED
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.SentryOptions options
io.sentry.vendor.Base64: int NO_WRAP
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_DELAY_FIRST_ANDROID_VIEW_DRAW
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
io.sentry.Session: java.util.concurrent.atomic.AtomicInteger errorCount
io.sentry.ProfilingTransactionData: java.lang.Long relativeEndNs
io.sentry.TypeCheckHint: java.lang.String SENTRY_DOTNET_SDK_NAME
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
io.sentry.protocol.SentryTransaction: java.util.List spans
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: java.lang.String type
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType WARM
io.sentry.protocol.ViewHierarchy: java.lang.String renderingSystem
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
io.flutter.plugin.editing.ScribePlugin: android.view.View mView
io.sentry.util.TracingUtils$TracingHeaders: io.sentry.SentryTraceHeader sentryTraceHeader
io.sentry.android.replay.capture.BufferCaptureStrategy$pause$1: io.sentry.android.replay.capture.BufferCaptureStrategy this$0
io.sentry.protocol.Device: java.lang.Long externalStorageSize
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
io.sentry.flutter.SentryFlutterPlugin: java.lang.Long pluginRegistrationTime
io.sentry.android.core.SentryAndroidOptions: boolean enableFramesTracking
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
io.sentry.Attachment: byte[] bytes
io.sentry.MainEventProcessor: io.sentry.SentryThreadFactory sentryThreadFactory
io.sentry.SentryLockReason: int ANY
io.flutter.plugin.platform.PlatformViewsController: boolean usesSoftwareRendering
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: java.lang.Object $oldValue
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
androidx.fragment.app.Fragment: boolean mIsCreated
io.sentry.EnvelopeSender: io.sentry.IHub hub
io.sentry.config.SystemPropertyPropertiesProvider: java.lang.String PREFIX
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTER_INITIALIZATION_ARGS
io.sentry.SentryOptions: boolean traceOptionsRequests
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String NATIVE_SPELL_CHECK_SERVICE_DEFINED
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long lastFrameStartNanos
io.sentry.android.replay.ReplayIntegration: kotlin.jvm.functions.Function1 recorderConfigProvider
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path path
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.SentryReplayEvent replay
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
io.sentry.Breadcrumb$JsonKeys: java.lang.String LEVEL
io.sentry.android.replay.video.SimpleMp4FrameMuxer: boolean started
io.sentry.SentryOptions: java.lang.String DEFAULT_PROPAGATION_TARGETS
io.sentry.protocol.ViewHierarchyNode: java.lang.Double width
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3: io.sentry.android.replay.ReplayIntegration this$0
io.sentry.vendor.gson.stream.JsonReader: int lineStart
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENDLESS_TRACE_BUFFER
io.sentry.protocol.DebugImage$JsonKeys: java.lang.String DEBUG_FILE
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
io.sentry.android.core.AndroidOptionsInitializer: java.lang.String COMPOSE_CLASS_NAME
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.Deque currentEvents
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String INITIAL_ROUTE_META_DATA_KEY
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_AUTOMATICALLY_HANDLE_ON_BACK_PRESSED
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAttachEngineToActivity
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long delayNanos
kotlin.jvm.internal.Lambda: int arity
io.sentry.android.core.ManifestMetadataReader: java.lang.String SEND_MODULES
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType UNKNOWN
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType BUFFER
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: java.util.concurrent.ExecutorService executorService
io.sentry.android.replay.ScreenshotRecorderConfig: io.sentry.android.replay.ScreenshotRecorderConfig$Companion Companion
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String TRACE_ID
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: io.sentry.ILogger logger
io.sentry.android.core.ManifestMetadataReader: java.lang.String AUTO_INIT
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
io.flutter.plugin.text.ProcessTextPlugin: java.lang.String TAG
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_FRACTION_DIGIT
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
io.flutter.embedding.engine.renderer.FlutterRenderer$2: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
io.flutter.plugin.editing.FlutterTextUtils: int LINE_FEED
io.sentry.SentryReplayEvent: java.lang.String REPLAY_EVENT_TYPE
io.flutter.plugin.common.MethodChannel: java.lang.String name
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: java.lang.String ORIGIN
io.sentry.android.replay.ReplayFrame: java.lang.String screen
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.IHub hub
io.sentry.protocol.SentryId: java.util.UUID uuid
io.sentry.android.replay.WindowRecorder: io.sentry.android.replay.ScreenshotRecorderCallback screenshotRecorderCallback
io.sentry.SpanContext: java.lang.String op
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String MAIN
io.sentry.transport.HttpConnection: io.sentry.transport.RateLimiter rateLimiter
io.sentry.UserFeedback: java.lang.String email
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray autofillConfiguration
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.android.core.AnrV2Integration$AnrProcessor: android.content.Context context
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
io.sentry.android.ndk.SentryNdk: java.util.concurrent.CountDownLatch loadLibraryLatch
io.sentry.protocol.MetricSummary: int count
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String START_TIMESTAMP
io.sentry.android.replay.ScreenshotRecorder: kotlin.Lazy singlePixelBitmap$delegate
io.sentry.android.core.SentryAndroidOptions: boolean enableNetworkEventBreadcrumbs
io.sentry.NoOpTransactionPerformanceCollector: io.sentry.NoOpTransactionPerformanceCollector instance
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel this$0
io.sentry.Baggage: java.lang.Integer MAX_BAGGAGE_LIST_MEMBER_COUNT
io.sentry.metrics.MetricsHelper: int ROLLUP_IN_SECONDS
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.gestures.ReplayGestureConverter gestureConverter
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_TRANSPARENCY_MODE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_VIRTUAL_FALLBACK
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_BEGIN_OBJECT
io.flutter.plugin.common.MethodChannel: java.lang.String TAG
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
io.sentry.SentryItemType: io.sentry.SentryItemType Session
io.sentry.DeduplicateMultithreadedEventProcessor: io.sentry.SentryOptions options
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int DOWN
io.sentry.SentryReplayOptions: io.sentry.SentryReplayOptions$SentryReplayQuality quality
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus[] $VALUES
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Plugin
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
io.sentry.android.core.util.AndroidLazyEvaluator: java.lang.Object value
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD
io.sentry.android.core.SpanFrameMetricsCollector: java.util.SortedSet runningSpans
io.sentry.android.replay.gestures.GestureRecorder$SentryReplayGestureRecorder: io.sentry.SentryOptions options
io.sentry.ProfilingTraceData: java.lang.String TRUNCATION_REASON_TIMEOUT
io.sentry.TraceContext$TraceContextUser: java.util.Map unknown
io.sentry.protocol.Mechanism$JsonKeys: java.lang.String TYPE
io.sentry.TypeCheckHint: java.lang.String SENTRY_EVENT_DROP_REASON
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItemHeader header
io.sentry.clientreport.AtomicClientReportStorage: io.sentry.util.LazyEvaluator lostEventCounts
io.sentry.DefaultTransactionPerformanceCollector$1: io.sentry.DefaultTransactionPerformanceCollector this$0
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.sentry.TransactionOptions: boolean bindToScope
io.sentry.protocol.User$JsonKeys: java.lang.String IP_ADDRESS
io.sentry.rrweb.RRWebOptionsEvent: java.util.Map unknown
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String IS_PROFILING_ENABLED
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
io.sentry.android.core.AnrV2Integration: long NINETY_DAYS_THRESHOLD
io.sentry.ProfilingTraceData: java.lang.String environment
io.sentry.android.core.CurrentActivityIntegration: android.app.Application application
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map payloadUnknown
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.sentry.Session$JsonKeys: java.lang.String ABNORMAL_MECHANISM
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: boolean retry
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String CHANNEL_NAME
io.flutter.embedding.android.KeyData: int FIELD_COUNT
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode nodeSubtree
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String ID_MEMORY_FOOTPRINT
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
io.sentry.rrweb.RRWebInteractionEvent: io.sentry.rrweb.RRWebInteractionEvent$InteractionType interactionType
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
io.sentry.SentryOptions: int maxBreadcrumbs
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.platform.PlatformPlugin$2: android.view.View val$decorView
io.sentry.Breadcrumb: java.lang.String origin
io.sentry.rrweb.RRWebVideoEvent: int top
io.sentry.MonitorSchedule: java.lang.String value
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.android.core.SentryAndroidOptions options
io.sentry.android.core.ManifestMetadataReader: java.lang.String DEBUG
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
io.sentry.cache.EnvelopeCache: java.lang.String NATIVE_CRASH_MARKER_FILE
io.sentry.Hub: boolean isEnabled
io.sentry.vendor.Base64$Encoder: byte[] alphabet
io.sentry.flutter.SentryFlutter: java.lang.String FLUTTER_SDK
io.sentry.vendor.gson.stream.JsonScope: int EMPTY_OBJECT
io.sentry.android.ndk.BuildConfig: java.lang.String VERSION_NAME
io.sentry.exception.ExceptionMechanismException: io.sentry.protocol.Mechanism exceptionMechanism
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel channel
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.sentry.cache.EnvelopeCache: java.lang.String STARTUP_CRASH_MARKER_FILE
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: java.lang.String TAG
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: io.sentry.android.replay.capture.BaseCaptureStrategy this$0$inline_fun
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DART_ENTRYPOINT_META_DATA_KEY
io.sentry.CpuCollectionData: long timestampMillis
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
io.sentry.Scope: java.lang.Object sessionLock
io.sentry.protocol.Response: java.lang.String cookies
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String PAYLOAD
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
io.sentry.ProfilingTraceData: java.util.concurrent.Callable deviceCpuFrequenciesReader
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.replay.ScreenshotRecorderConfig replayConfig
io.sentry.android.core.internal.util.Debouncer: java.util.concurrent.atomic.AtomicLong lastExecutionTime
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEnvelopeCallback beforeEnvelopeCallback
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.sentry.cache.tape.QueueFile: boolean closed
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String TRANSACTION_ID
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int REMOVE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.ReplayRecording recording
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
io.sentry.protocol.App: java.lang.Boolean inForeground
io.sentry.protocol.Device$JsonKeys: java.lang.String ID
io.sentry.protocol.SentrySpan$JsonKeys: java.lang.String DATA
io.sentry.protocol.Request: java.util.Map other
io.sentry.android.replay.WindowRecorder: kotlin.Lazy capturer$delegate
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
io.sentry.CheckInStatus: io.sentry.CheckInStatus OK
io.sentry.android.core.ActivityFramesTracker$FrameCounts: int frozenFrames
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: io.sentry.android.core.SentryAndroidOptions options
io.sentry.SentryOptions: java.util.Map tags
io.flutter.embedding.android.FlutterView$4: java.lang.Runnable val$onDone
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Scroll
io.sentry.protocol.Device: java.lang.String modelId
io.sentry.protocol.DebugImage: java.lang.String arch
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverterKt: double MILLIS_PER_SECOND
io.sentry.Scope: io.sentry.protocol.SentryId replayId
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.ReplayCache cache
io.sentry.android.core.SentryAndroidOptions: boolean enableAppComponentBreadcrumbs
io.sentry.android.core.ContextUtils: io.sentry.util.LazyEvaluator isForegroundImportance
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: io.sentry.internal.gestures.UiElement target
io.sentry.CircularFifoQueue: int start
io.sentry.Breadcrumb: java.util.Map data
io.sentry.util.MapObjectReader: java.util.Deque stack
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String TIMESTAMP
io.sentry.SentryStackTraceFactory: int STACKTRACE_FRAME_LIMIT
io.flutter.embedding.engine.systemchannels.LifecycleChannel: java.lang.String TAG
io.sentry.ExternalOptions: io.sentry.SentryOptions$RequestSize maxRequestBodySize
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_CACHE_SKSL
io.sentry.rrweb.RRWebOptionsEvent: java.util.Map optionsPayload
io.sentry.vendor.Base64$Encoder: boolean do_cr
io.sentry.cache.PersistingScopeObserver: java.lang.String SCOPE_CACHE
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.sentry.SentryOptions: boolean sendModules
io.sentry.android.core.AndroidCpuCollector: boolean isEnabled
io.sentry.android.core.internal.threaddump.ThreadDumpParser: boolean isBackground
io.sentry.android.replay.WindowRecorder: java.lang.String TAG
io.sentry.vendor.Base64: int NO_PADDING
io.sentry.vendor.gson.stream.JsonScope: int NONEMPTY_ARRAY
io.sentry.rrweb.RRWebInteractionEvent: java.util.Map dataUnknown
io.sentry.android.core.performance.WindowContentChangedCallback: java.lang.Runnable callback
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT
io.flutter.plugin.platform.PlatformViewsController: java.lang.String TAG
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: java.lang.String $propertyName
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
io.sentry.android.replay.ReplayCache: java.lang.String SEGMENT_KEY_BIT_RATE
com.sanguinarypc.box_sensors.R$mipmap: int launcher_icon
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACING_ORIGINS
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
io.sentry.android.core.NdkHandlerStrategy: io.sentry.android.core.NdkHandlerStrategy[] $VALUES
io.sentry.android.core.ManifestMetadataReader: java.lang.String ANR_ATTACH_THREAD_DUMPS
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason MULTITHREADED_DEDUPLICATION
io.sentry.ProfilingTransactionData: java.lang.Long relativeStartCpuMs
io.sentry.JsonObjectDeserializer: java.util.ArrayList tokens
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
io.sentry.protocol.Device$JsonKeys: java.lang.String FREE_MEMORY
io.sentry.metrics.GaugeMetric: double sum
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String dartEntrypoint
io.sentry.SentryLongDate: long nanos
io.sentry.android.replay.ScreenshotRecorder: kotlin.Lazy maskingPaint$delegate
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String LEFT
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty segmentTimestamp$delegate
io.sentry.vendor.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS
io.sentry.protocol.Device$JsonKeys: java.lang.String NAME
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String STACKTRACE
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType Click
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
io.sentry.cache.tape.QueueFile$ElementIterator: io.sentry.cache.tape.QueueFile this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int lastEventId
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String ARCHITECTURE
io.sentry.protocol.Request$JsonKeys: java.lang.String METHOD
io.sentry.rrweb.RRWebMetaEvent: java.util.Map dataUnknown
io.sentry.cache.PersistingOptionsObserver: java.lang.String REPLAY_ERROR_SAMPLE_RATE_FILENAME
io.sentry.protocol.MeasurementValue$JsonKeys: java.lang.String UNIT
io.sentry.MetricsAggregator$1: int[] $SwitchMap$io$sentry$metrics$MetricType
io.sentry.android.replay.ReplayCache: int $stable
io.sentry.SpanContext$JsonKeys: java.lang.String ORIGIN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String tag
io.sentry.protocol.TransactionInfo: java.lang.String source
io.sentry.protocol.ViewHierarchyNode: java.util.Map unknown
io.sentry.SentryTracer: java.lang.Object timerLock
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.lang.String initialRoute
io.sentry.cache.CacheUtils: java.nio.charset.Charset UTF_8
io.sentry.android.replay.ScreenshotRecorder: io.sentry.android.replay.ScreenshotRecorderCallback screenshotRecorderCallback
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
io.flutter.plugin.common.ErrorLogResult: java.lang.String tag
androidx.fragment.app.Fragment: int AWAITING_EXIT_EFFECTS
io.sentry.backpressure.BackpressureMonitor: int MAX_DOWNSAMPLE_FACTOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Meta
io.sentry.CheckIn: java.util.Map unknown
io.sentry.Stack$StackItem: io.sentry.ISentryClient client
io.sentry.Breadcrumb: java.lang.String type
io.sentry.android.replay.gestures.GestureRecorder: io.sentry.android.replay.gestures.TouchRecorderCallback touchRecorderCallback
io.sentry.android.replay.SentryReplayModifiers$SentryPrivacy$1: io.sentry.android.replay.SentryReplayModifiers$SentryPrivacy$1 INSTANCE
io.sentry.android.replay.capture.CaptureStrategy$Companion: io.sentry.android.replay.capture.CaptureStrategy$Companion $$INSTANCE
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: android.view.Choreographer choreographer
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation LANDSCAPE
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
io.sentry.SpanContext$JsonKeys: java.lang.String STATUS
io.flutter.plugin.editing.InputConnectionAdaptor: java.lang.String TAG
io.sentry.android.core.AndroidProfiler: int PROFILING_TIMEOUT_MILLIS
io.sentry.DataCategory: io.sentry.DataCategory UserReport
io.flutter.embedding.engine.FlutterEngine: java.lang.String TAG
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode $node
io.sentry.protocol.User$JsonKeys: java.lang.String OTHER
io.sentry.protocol.Contexts: long serialVersionUID
io.sentry.android.core.ManifestMetadataReader: java.lang.String PERFORM_FRAMES_TRACKING
io.sentry.protocol.Device: java.lang.Boolean charging
io.sentry.SentryOptions: java.lang.String serverName
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$6: int[] $SwitchMap$com$lib$flutter_blue_plus$FlutterBluePlusPlugin$LogLevel
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String TYPE
io.sentry.cache.PersistingOptionsObserver: java.lang.String PROGUARD_UUID_FILENAME
io.sentry.SpanDataConvention: java.lang.String HTTP_START_TIMESTAMP
io.sentry.protocol.Request$JsonKeys: java.lang.String FRAGMENT
io.flutter.view.AccessibilityBridge: boolean accessibleNavigation
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel ERROR
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern NATIVE_RE
io.sentry.Breadcrumb$JsonKeys: java.lang.String CATEGORY
io.sentry.android.replay.ReplayCache: io.sentry.android.replay.ReplayCache$Companion Companion
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource StyleSheetRule
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback profilesSampler
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: io.sentry.android.replay.capture.BaseCaptureStrategy this$0$inline_fun
io.sentry.android.replay.video.SimpleVideoEncoder: android.media.MediaCodec mediaCodec
io.sentry.JsonObjectDeserializer$TokenMap: java.util.HashMap value
io.sentry.android.replay.capture.SessionCaptureStrategy$stop$1: io.sentry.android.replay.capture.SessionCaptureStrategy this$0
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.sentry.android.core.ActivityLifecycleIntegration: boolean timeToFullDisplaySpanEnabled
io.sentry.android.core.DeviceInfoUtil: io.sentry.android.core.ContextUtils$SideLoadedInfo sideLoadedInfo
io.sentry.SentryOptions: java.lang.String release
io.sentry.SentryClient: io.sentry.SentryClient$SortBreadcrumbsByDate sortBreadcrumbsByDate
io.sentry.android.replay.WindowRecorder: java.util.concurrent.ScheduledExecutorService replayExecutor
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
io.sentry.protocol.Request: java.util.Map headers
io.sentry.android.core.AnrV2Integration$AnrV2Hint: boolean shouldEnrich
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String TYPE
io.sentry.SpanOptions: boolean isIdle
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.sentry.UncaughtExceptionHandlerIntegration: io.sentry.UncaughtExceptionHandler threadAdapter
io.sentry.android.core.NdkHandlerStrategy: int value
io.sentry.IpAddressUtils: java.util.List DEFAULT_IP_ADDRESS_VALID_VALUES
io.sentry.Breadcrumb: io.sentry.SentryLevel level
io.flutter.embedding.android.KeyboardMap$1: long serialVersionUID
io.sentry.protocol.SentryTransaction: java.util.Map measurements
io.sentry.SentryReplayOptions: java.lang.String TEXT_VIEW_CLASS_NAME
io.sentry.PropagationContext: io.sentry.SpanId spanId
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACE_SAMPLING
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FIELD_COUNT
io.sentry.protocol.Device: java.lang.Float screenDensity
io.sentry.MetricsAggregator: boolean flushScheduled
io.sentry.DiagnosticLogger: io.sentry.ILogger logger
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: long DEBOUNCE_WAIT_TIME_MS
io.sentry.protocol.OperatingSystem: java.lang.String kernelVersion
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String RAW_FUNCTION
io.sentry.cache.EnvelopeCache: java.util.concurrent.CountDownLatch previousSessionLatch
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.sentry.android.replay.capture.CaptureStrategy$Companion: long BREADCRUMB_START_OFFSET
io.sentry.HostnameCache: java.util.concurrent.Callable getLocalhost
io.sentry.vendor.gson.stream.JsonWriter: java.lang.String separator
io.sentry.protocol.SentryException: java.lang.String type
io.flutter.plugin.platform.PlatformViewWrapper: java.lang.String TAG
io.sentry.MetricsAggregator: java.util.concurrent.atomic.AtomicInteger totalBucketsWeight
io.sentry.BuildConfig: java.lang.String VERSION_NAME
io.sentry.protocol.Request: java.util.Map env
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$JsonKeys: java.lang.String ID
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean shouldMask
io.sentry.flutter.SentryFlutterPlugin: android.content.Context context
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
io.sentry.SentryEnvelopeItemHeader$JsonKeys: java.lang.String ATTACHMENT_TYPE
io.flutter.plugin.common.StandardMessageCodec: byte LIST
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState DETACHED
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_SOFTWARE_RENDERING
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mAutoConnected
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
io.flutter.plugin.common.StandardMessageCodec: byte INT
io.sentry.profilemeasurements.ProfileMeasurement$JsonKeys: java.lang.String UNIT
io.sentry.JsonObjectSerializer: io.sentry.JsonReflectionObjectSerializer jsonReflectionObjectSerializer
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
io.sentry.SentryOptions: java.lang.String dsnHash
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
io.sentry.flutter.SentryFlutterPlugin$setupReplay$3: io.sentry.flutter.SentryFlutterPlugin this$0
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
io.sentry.Scope: java.util.Map extra
io.sentry.android.core.ActivityLifecycleIntegration: boolean performanceEnabled
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.android.core.internal.gestures.SentryGestureListener: io.sentry.android.core.SentryAndroidOptions options
io.flutter.plugin.editing.SpellCheckPlugin: java.lang.String START_INDEX_KEY
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: java.lang.Object $value
io.sentry.android.core.internal.util.ScreenshotUtils: long CAPTURE_TIMEOUT_MS
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType Custom
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler spellCheckMethodHandler
io.sentry.protocol.App$JsonKeys: java.lang.String APP_IDENTIFIER
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_MODEL
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.sentry.internal.gestures.UiElement: java.lang.String tag
io.flutter.view.AccessibilityBridge$Flag: int value
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: java.lang.String SENTRY_MASK_TAG
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String CONFIGURATION_ID
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String initialRoute
io.sentry.android.replay.GeneratedVideo: long duration
io.sentry.android.core.NetworkBreadcrumbsIntegration$1: io.sentry.android.core.NetworkBreadcrumbsIntegration this$0
io.sentry.Session$JsonKeys: java.lang.String STATUS
io.sentry.android.core.ActivityBreadcrumbsIntegration: android.app.Application application
io.sentry.android.replay.ReplayCache$ongoingSegmentFile$2: io.sentry.android.replay.ReplayCache this$0
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.sentry.protocol.DebugImage: java.lang.String codeFile
io.sentry.SentryReplayEvent$JsonKeys: java.lang.String SEGMENT_ID
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String cachedEngineGroupId
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.NoOpTransportFactory: io.sentry.NoOpTransportFactory instance
io.sentry.SentryOptions: boolean enablePrettySerializationOutput
io.sentry.SentryOptions: java.util.List contextTags
io.sentry.TypeCheckHint: java.lang.String WEBFLUX_FILTER_REQUEST
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG_FLUTTER_FRAGMENT
io.sentry.protocol.SentryTransaction: java.lang.Double startTimestamp
io.sentry.android.core.SentryAndroidOptions: boolean enableRootCheck
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
io.sentry.cache.tape.QueueFile: java.io.RandomAccessFile raf
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: android.view.Window$Callback delegate
io.sentry.EnvelopeReader: java.nio.charset.Charset UTF_8
io.sentry.android.core.performance.TimeSpan: long stopUptimeMs
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature REDUCE_MOTION
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: io.flutter.embedding.engine.systemchannels.KeyboardChannel this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
io.sentry.PreviousSessionFinalizer: java.nio.charset.Charset UTF_8
io.sentry.SentryEnvelopeItem$CachedItem: byte[] bytes
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState CLOSED
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String METRICS_SUMMARY
io.sentry.protocol.MetricSummary$JsonKeys: java.lang.String MAX
io.sentry.TransactionContext: io.sentry.TracesSamplingDecision parentSamplingDecision
io.sentry.android.core.SendCachedEnvelopeIntegration: io.sentry.IConnectionStatusProvider connectionStatusProvider
io.sentry.android.replay.ScreenshotRecorderConfig: int recordingWidth
io.sentry.EnvelopeSender: io.sentry.ISerializer serializer
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: boolean isVpn
io.sentry.android.core.ActivityBreadcrumbsIntegration: io.sentry.IHub hub
io.sentry.android.replay.ReplayIntegration$replayExecutor$2: io.sentry.android.replay.ReplayIntegration$replayExecutor$2 INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.sentry.protocol.Device: java.lang.String connectionType
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_INITIAL_ROUTE
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern BEGIN_UNMANAGED_NATIVE_THREAD_RE
io.sentry.android.core.SentryFrameMetrics: long frozenFrameDelayNanos
io.sentry.android.core.EmptySecureContentProvider: io.sentry.android.core.internal.util.ContentProviderSecurityChecker securityChecker
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayCutouts
io.sentry.android.core.SpanFrameMetricsCollector: long ONE_SECOND_NANOS
io.sentry.SpanStatus: io.sentry.SpanStatus ALREADY_EXISTS
io.flutter.plugin.common.StandardMessageCodec: byte LONG
io.sentry.SentryLockReason: int WAITING
io.sentry.TransactionContext: java.lang.String DEFAULT_OPERATION
io.sentry.PropagationContext: io.sentry.Baggage baggage
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode HYBRID_ONLY
io.sentry.NoOpHub: io.sentry.NoOpHub instance
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler scribeMethodHandler
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mMtu
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEmitMetricCallback beforeEmitMetricCallback
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel NONE
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$ChrFound: android.bluetooth.BluetoothGattCharacteristic characteristic
io.sentry.TypeCheckHint: java.lang.String WEBFLUX_EXCEPTION_HANDLER_EXCHANGE
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN
io.sentry.TraceContext$JsonKeys: java.lang.String USER
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TOGGLE_IMPELLER
io.sentry.MonitorSchedule$JsonKeys: java.lang.String TYPE
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mAdvSeen
kotlinx.coroutines.channels.BufferedChannel: long receivers
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
io.sentry.android.core.PerformanceAndroidEventProcessor: io.sentry.android.core.SentryAndroidOptions options
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: java.lang.String $propertyName$inlined
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String CRASHED
io.sentry.protocol.App$JsonKeys: java.lang.String APP_VERSION
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mConnectedDevices
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_CPU_FREQUENCIES
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int PAN_ZOOM_START
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean destroyEngineWithFragment
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_SHARED_LIBRARY_NAME
io.sentry.rrweb.RRWebSpanEvent: double endTimestamp
io.sentry.android.core.internal.util.FirstDrawDoneListener: java.lang.Runnable callback
io.sentry.SentryBaseEvent: java.lang.String dist
io.sentry.protocol.Browser: java.lang.String version
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: boolean released
io.sentry.cache.tape.QueueFile$Builder: int size
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager this$0
io.sentry.SentryOptions$Proxy: java.lang.String host
io.sentry.protocol.MetricSummary: double sum
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.lang.String TAG
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Bitmap screenshot
io.flutter.view.VsyncWaiter$FrameCallback: io.flutter.view.VsyncWaiter this$0
io.sentry.SentryValues: java.util.List values
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String EVENT_TAG
io.sentry.android.core.ActivityFramesTracker: io.sentry.android.core.MainLooperHandler handler
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
io.sentry.android.replay.gestures.GestureRecorder: io.sentry.SentryOptions options
io.sentry.SentryOptions: java.util.List defaultTracePropagationTargets
io.sentry.protocol.ViewHierarchyNode$JsonKeys: java.lang.String Y
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
io.sentry.android.core.ActivityLifecycleIntegration: boolean firstActivityCreated
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
io.sentry.android.core.ActivityFramesTracker: java.util.Map frameCountAtStartSnapshots
io.sentry.rrweb.RRWebVideoEvent: int left
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
io.sentry.UserFeedback: java.util.Map unknown
io.sentry.transport.NoOpTransport: io.sentry.transport.NoOpTransport instance
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES
io.flutter.plugin.platform.PlatformPlugin: int DEFAULT_SYSTEM_UI
io.sentry.SentryOptions: io.sentry.internal.debugmeta.IDebugMetaLoader debugMetaLoader
io.sentry.protocol.Device: java.lang.Long memorySize
io.sentry.metrics.MetricsHelper: char TAGS_ESCAPE_CHAR
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.sentry.vendor.gson.stream.JsonReader: int lineNumber
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.plugin.common.StandardMessageCodec: byte FLOAT_ARRAY
io.sentry.TransactionOptions: java.lang.Long idleTimeout
io.sentry.SpanStatus: io.sentry.SpanStatus DEADLINE_EXCEEDED
io.sentry.ExternalOptions: java.lang.Boolean enableTracing
io.sentry.Span: java.lang.Throwable throwable
io.sentry.protocol.Request: java.util.Map unknown
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_PHYSICAL_MEMORY_BYTES
io.sentry.android.replay.gestures.GestureRecorder: int $stable
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
io.sentry.Instrumenter: io.sentry.Instrumenter SENTRY
io.sentry.rrweb.RRWebVideoEvent: java.lang.String REPLAY_FRAME_RATE_TYPE_VARIABLE
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String category
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayMask$1: io.sentry.android.replay.ModifierExtensionsKt$sentryReplayMask$1 INSTANCE
io.sentry.SentryTracer$2: io.sentry.SentryTracer this$0
io.flutter.plugin.common.StandardMessageCodec: byte TRUE
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String ALWAYS_USE_24_HOUR_FORMAT
io.sentry.TypeCheckHint: java.lang.String SPRING_RESOLVER_REQUEST
io.sentry.android.core.ManifestMetadataReader: java.lang.String SEND_DEFAULT_PII
io.sentry.SentryOptions: boolean traceSampling
io.sentry.protocol.SdkVersion: java.util.Map unknown
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
io.sentry.SentryTracer$FinishStatus: boolean isFinishing
io.sentry.protocol.Response: java.util.Map headers
io.flutter.view.FlutterRunArguments: java.lang.String libraryPath
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: java.lang.String PAYLOAD
io.sentry.protocol.SentryPackage$JsonKeys: java.lang.String NAME
io.sentry.android.core.AndroidProfiler$ProfileStartData: java.util.Date startTimestamp
io.sentry.SentryBaseEvent: java.util.Map tags
io.sentry.protocol.Message$JsonKeys: java.lang.String FORMATTED
io.sentry.android.core.performance.AppStartMetrics: long CLASS_LOADED_UPTIME_MS
io.sentry.android.core.performance.AppStartMetrics: io.sentry.TracesSamplingDecision appStartSamplingDecision
io.sentry.CustomSamplingContext: java.util.Map data
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.util.List dartEntrypointArgs
io.sentry.HostnameCache: java.lang.String hostname
io.sentry.util.thread.NoOpMainThreadChecker: io.sentry.util.thread.NoOpMainThreadChecker instance
io.sentry.android.core.ManifestMetadataReader: java.lang.String REPLAYS_SESSION_SAMPLE_RATE
io.sentry.ProfilingTransactionData$JsonKeys: java.lang.String ID
io.sentry.protocol.OperatingSystem$JsonKeys: java.lang.String KERNEL_VERSION
io.sentry.MonitorSchedule: java.lang.String unit
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.Class fragmentClass
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean mIsScanning
io.flutter.embedding.android.AndroidTouchProcessor: java.lang.String TAG
io.sentry.rrweb.RRWebInteractionMoveEvent$JsonKeys: java.lang.String POSITIONS
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$1: kotlin.jvm.functions.Function0 $task
io.sentry.protocol.SentrySpan: java.lang.Double timestamp
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: java.util.concurrent.CountDownLatch latch
io.flutter.plugin.platform.VirtualDisplayController$2: android.view.View val$embeddedView
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE_DIRECT
io.sentry.protocol.Browser$JsonKeys: java.lang.String NAME
io.sentry.TransactionOptions: boolean waitForChildren
io.flutter.embedding.android.KeyData: long physicalKey
io.sentry.SentryOptions: io.sentry.ReplayController replayController
io.sentry.flutter.SentryFlutter$updateOptions$17: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.rrweb.RRWebOptionsEvent: java.lang.String EVENT_TAG
io.sentry.android.core.SentryAndroid: long sdkInitMillis
io.sentry.util.HttpUtils: java.util.List SENSITIVE_HEADERS
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String MAPPING_KEY
io.sentry.HostnameCache: long HOSTNAME_CACHE_DURATION
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_VERBOSE_LOGGING
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType Unknown
io.sentry.SentryReplayOptions: java.lang.String VIDEO_VIEW_CLASS_NAME
io.sentry.android.ndk.NdkScopeObserver: io.sentry.android.ndk.INativeScope nativeScope
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: java.lang.String POINTER_TYPE
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kRepeat
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String METHOD_START_STYLUS_HANDWRITING
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
io.sentry.android.core.SentryAndroidOptions: boolean anrEnabled
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACES_PROFILING_ENABLE
io.sentry.metrics.MetricsApi: io.sentry.metrics.MetricsApi$IMetricsInterface aggregator
io.sentry.protocol.App: java.lang.String appName
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN_ERROR
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
io.sentry.android.replay.ScreenshotRecorder: io.sentry.android.replay.ScreenshotRecorderConfig config
io.sentry.protocol.SentryStackFrame: java.lang.String _package
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType DblClick
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: io.sentry.android.replay.capture.BaseCaptureStrategy this$0
io.sentry.SentryEnvelopeHeader: io.sentry.protocol.SentryId eventId
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.cache.IEnvelopeCache envelopeCache
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
io.sentry.rrweb.RRWebVideoEvent: int height
io.sentry.MonitorConfig: java.lang.Long maxRuntime
io.sentry.protocol.User: java.lang.String name
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: io.sentry.android.core.performance.TimeSpan onCreate
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
io.sentry.TransactionOptions: boolean isAppStartTransaction
io.sentry.rrweb.RRWebSpanEvent: java.lang.String EVENT_TAG
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
io.sentry.SentryBaseEvent$JsonKeys: java.lang.String SDK
io.sentry.SentryOptions: boolean enableShutdownHook
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
io.sentry.android.core.SentryFrameMetrics: int frozenFrameCount
io.sentry.transport.AsyncHttpTransport: io.sentry.cache.IEnvelopeCache envelopeCache
io.sentry.protocol.SentryException: java.util.Map unknown
io.sentry.util.Pair: java.lang.Object second
io.flutter.plugin.platform.PlatformOverlayView: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityDelegate
io.sentry.TraceContext: java.lang.String environment
io.flutter.plugin.platform.PlatformViewWrapper$1: io.flutter.plugin.platform.PlatformViewWrapper this$0
io.sentry.SentryTracer: io.sentry.Baggage baggage
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: boolean isClosed
io.sentry.TypeCheckHint: java.lang.String ANDROID_ACTIVITY
io.sentry.metrics.MetricsHelper: java.util.regex.Pattern NAME_PATTERN
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType FullSnapshot
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
io.flutter.plugin.common.FlutterException: java.lang.Object details
io.sentry.flutter.SentryFlutter$updateOptions$28$1: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.replay.ReplayCache$rotate$1: kotlin.jvm.internal.Ref$ObjectRef $screen
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
io.sentry.android.core.AndroidProfiler$ProfileEndData: java.util.Map measurementsMap
io.sentry.android.replay.LastSegmentData: int id
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String TYPE
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
androidx.fragment.app.Fragment: boolean mHasMenu
io.flutter.embedding.android.FlutterTextureView: boolean isPaused
io.sentry.protocol.Gpu$JsonKeys: java.lang.String ID
io.flutter.plugin.platform.VirtualDisplayController$2$1: io.flutter.plugin.platform.VirtualDisplayController$2 this$1
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.sentry.Sentry: java.lang.ThreadLocal currentHub
io.sentry.SentryLockReason$JsonKeys: java.lang.String THREAD_ID
io.sentry.CircularFifoQueue$1: io.sentry.CircularFifoQueue this$0
io.sentry.SpanContext: io.sentry.SpanStatus status
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String HELD_LOCKS
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.content.BroadcastReceiver mBluetoothPairRequestReceiver
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String APP_START_WARM
io.sentry.rrweb.RRWebInteractionEvent: float y
io.sentry.android.core.ActivityFramesTracker$FrameCounts: int totalFrames
io.sentry.protocol.TransactionInfo: java.util.Map unknown
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction RATIO
io.sentry.android.core.internal.gestures.SentryGestureListener: java.lang.String UI_ACTION
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.transport.TransportResult failedResult
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
io.sentry.android.core.AnrV2Integration$AnrProcessor: io.sentry.android.core.SentryAndroidOptions options
io.sentry.android.replay.ScreenshotRecorder: java.lang.ref.WeakReference rootView
io.sentry.rrweb.RRWebMetaEvent: int height
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACING_ENABLE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
io.sentry.flutter.SentryFlutter$updateOptions$7: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.replay.capture.BaseCaptureStrategy: java.lang.String TAG
io.sentry.metrics.GaugeMetric: double max
io.sentry.android.core.SentryFrameMetrics: long totalDurationNanos
io.flutter.plugin.mouse.MouseCursorPlugin$2: long serialVersionUID
io.flutter.plugin.editing.SpellCheckPlugin: java.lang.String END_INDEX_KEY
io.sentry.Scope: io.sentry.protocol.Contexts contexts
io.sentry.transport.TransportResult$SuccessTransportResult: io.sentry.transport.TransportResult$SuccessTransportResult INSTANCE
io.sentry.SpanContext: java.lang.String TYPE
io.sentry.protocol.Mechanism: java.lang.Boolean handled
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.protocol.SentryStackFrame: java.lang.String module
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$GenericViewHierarchyNode: int $stable
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.sentry.instrumentation.file.FileIOSpanManager: io.sentry.SentryStackTraceFactory stackTraceFactory
io.sentry.cache.PersistingOptionsObserver: java.lang.String OPTIONS_CACHE
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: android.media.Image image
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
io.sentry.cache.PersistingOptionsObserver: java.lang.String RELEASE_FILENAME
io.sentry.Hint: io.sentry.Attachment screenshot
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map mBondingPins
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.ISpan appStartSpan
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: boolean shouldRecreateSurfaceForLowMemory
io.sentry.rrweb.RRWebOptionsEvent$JsonKeys: java.lang.String PAYLOAD
io.sentry.ExternalOptions: io.sentry.SentryOptions$Proxy proxy
io.sentry.Dsn: java.lang.String publicKey
io.sentry.Session: java.lang.Object sessionLock
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
io.sentry.util.Platform: boolean isAndroid
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.regex.Pattern JAVA_RE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.protocol.Mechanism: java.util.Map unknown
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VM_SNAPSHOT_DATA_KEY
io.sentry.protocol.Response$JsonKeys: java.lang.String COOKIES
io.sentry.instrumentation.file.FileOutputStreamInitData: java.io.FileOutputStream delegate
io.sentry.android.replay.ReplayIntegration$random$2: io.sentry.android.replay.ReplayIntegration$random$2 INSTANCE
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String LEAK_VM_META_DATA_KEY
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.String initialRoute
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AUTOMATICALLY_REGISTER_PLUGINS_METADATA_KEY
io.sentry.protocol.Device$JsonKeys: java.lang.String STORAGE_SIZE
io.sentry.Span: boolean finished
io.sentry.android.replay.ScreenshotRecorder: io.sentry.SentryOptions options
io.sentry.SentryEvent: io.sentry.protocol.Message message
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ScribeChannel scribeChannel
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_UNQUOTED
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToState
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: java.lang.Object $oldValue
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
io.flutter.view.AccessibilityBridge: int BOLD_TEXT_WEIGHT_ADJUSTMENT
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState[] $VALUES
io.sentry.SentryEnvelopeHeader$JsonKeys: java.lang.String EVENT_ID
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: java.lang.Object startLock
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: long flushTimeoutMillis
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
io.sentry.SentryReplayOptions: java.lang.String EXOPLAYER_CLASS_NAME
io.sentry.android.replay.video.SimpleVideoEncoder: io.sentry.SentryOptions options
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: io.sentry.android.core.internal.util.AndroidConnectionStatusProvider this$0
io.sentry.CheckIn$JsonKeys: java.lang.String CONTEXTS
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mDataDirPath
io.sentry.protocol.DebugImage: java.lang.String uuid
io.sentry.protocol.SentrySpan: java.util.Map unknown
io.sentry.protocol.Request$JsonKeys: java.lang.String OTHER
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.Class activityClass
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mPackageName
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.concurrent.Semaphore mMethodCallMutex
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
io.sentry.android.core.ScreenshotEventProcessor: io.sentry.android.core.internal.util.Debouncer debouncer
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String SIZE
io.sentry.protocol.Device: java.lang.Boolean simulator
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: java.util.Map registeredCallbacks
io.sentry.UserFeedback$JsonKeys: java.lang.String EVENT_ID
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState INITIAL
io.sentry.protocol.DebugImage: java.lang.String codeId
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT_URI
io.sentry.android.replay.ReplayCache: io.sentry.SentryOptions options
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType TouchMove_Departed
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2: android.graphics.Bitmap $bitmap
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: java.lang.String UTC_ID
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: java.lang.String CATEGORY
io.sentry.android.replay.capture.CaptureStrategy: io.sentry.android.replay.capture.CaptureStrategy$Companion Companion
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
io.sentry.Scope: java.util.List attachments
io.sentry.SentryOptions: java.util.List performanceCollectors
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: java.lang.Object $value
io.flutter.plugin.editing.TextEditingDelta: java.lang.String TAG
io.sentry.Scope: java.util.List fingerprint
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean notifiedDestroy
io.sentry.protocol.Device$JsonKeys: java.lang.String CONNECTION_TYPE
io.sentry.android.ndk.BuildConfig: java.lang.String BUILD_TYPE
io.sentry.android.replay.BuildConfig: java.lang.String VERSION_NAME
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int bufferWidth
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
io.sentry.vendor.gson.stream.JsonWriter: int[] stack
io.sentry.TypeCheckHint: java.lang.String OKHTTP_RESPONSE
io.sentry.android.core.AndroidCpuCollector: java.io.File selfStat
io.sentry.HostnameCache: long GET_HOSTNAME_TIMEOUT
io.sentry.DefaultTransactionPerformanceCollector: java.lang.Object timerLock
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_CACHED_ENGINE_ID
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
io.sentry.cache.PersistingScopeObserver: java.lang.String USER_FILENAME
io.sentry.protocol.SentrySpan: io.sentry.SpanStatus status
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.sentry.SentryEnvelopeHeader$JsonKeys: java.lang.String SDK
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
io.sentry.flutter.SentryFlutter: java.lang.String NATIVE_SDK
io.sentry.SpanDataConvention: java.lang.String CONTRIBUTES_TTFD
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$1: kotlin.jvm.functions.Function0 $task
io.sentry.android.replay.WindowSpy: kotlin.Lazy windowField$delegate
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: java.lang.String END_TIMESTAMP
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
io.flutter.embedding.android.KeyData: java.lang.String TAG
io.sentry.Scope: io.sentry.Session session
io.sentry.protocol.SentryStackTrace$JsonKeys: java.lang.String REGISTERS
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String FRAME_RATE
io.sentry.protocol.SentryRuntime: java.lang.String TYPE
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory sslSocketFactory
io.sentry.ExternalOptions: java.lang.Boolean debug
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
io.sentry.android.replay.video.SimpleVideoEncoder: android.media.MediaCodec$BufferInfo bufferInfo
io.sentry.protocol.Request$JsonKeys: java.lang.String DATA
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.util.List dartEntrypointArgs
io.flutter.embedding.engine.systemchannels.SettingsChannel: boolean $assertionsDisabled
io.sentry.android.core.ManifestMetadataReader: java.lang.String REPLAYS_MASK_ALL_TEXT
io.sentry.android.replay.ScreenshotRecorder: java.util.concurrent.ScheduledExecutorService recorder
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.pm.PackageManager mPackageManager
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kGamepad
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
io.sentry.exception.ExceptionMechanismException: java.lang.Throwable throwable
io.sentry.transport.AuthenticatorWrapper: io.sentry.transport.AuthenticatorWrapper instance
io.sentry.android.replay.ReplayIntegration: kotlin.jvm.functions.Function1 replayCaptureStrategyProvider
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean debugForceSurfaceProducerGlTextures
io.sentry.protocol.SdkVersion: java.lang.String version
io.sentry.vendor.gson.stream.JsonReader: int NUMBER_CHAR_EXP_E
io.sentry.SentryReplayOptions: long sessionSegmentDuration
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean shouldAttachEngineToActivity
io.sentry.android.replay.RootViewsSpy: java.util.concurrent.atomic.AtomicBoolean isClosed
io.sentry.util.Random: java.lang.String BadBound
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.sentry.protocol.SentryThread: io.sentry.protocol.SentryStackTrace stacktrace
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.sentry.JsonObjectDeserializer$TokenName: java.lang.String value
io.sentry.SentryAppStartProfilingOptions$JsonKeys: java.lang.String TRACE_SAMPLED
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.sentry.CheckIn$JsonKeys: java.lang.String ENVIRONMENT
io.sentry.android.core.DeviceInfoUtil: io.sentry.protocol.OperatingSystem os
io.sentry.protocol.Device: java.lang.String model
io.sentry.android.core.SendCachedEnvelopeIntegration: io.sentry.util.LazyEvaluator startupCrashMarkerEvaluator
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String SEGMENT_ID
io.sentry.CheckIn$JsonKeys: java.lang.String CHECK_IN_ID
io.sentry.ProfilingTraceData$JsonKeys: java.lang.String DEVICE_MANUFACTURER
io.sentry.android.core.AndroidTransactionProfiler: long profileStartNanos
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler keyboardMethodHandler
io.sentry.JavaMemoryCollector: java.lang.Runtime runtime
io.sentry.Dsn: java.net.URI sentryUri
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
io.sentry.ExternalOptions: java.lang.Boolean enableDeduplication
io.sentry.protocol.SentrySpan: io.sentry.protocol.SentryId traceId
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
io.sentry.ExternalOptions: java.util.List inAppExcludes
io.sentry.UncaughtExceptionHandlerIntegration$UncaughtExceptionHint: java.util.concurrent.atomic.AtomicReference flushableEventId
io.sentry.util.MapObjectWriter: java.util.ArrayDeque stack
io.sentry.ProfilingTraceData: java.lang.String traceId
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.capture.CaptureStrategy captureStrategy
io.sentry.SentryTracer: io.sentry.protocol.Contexts contexts
io.sentry.android.replay.video.MuxerConfig: java.lang.String mimeType
io.sentry.ProfilingTraceData: java.lang.String cpuArchitecture
io.sentry.android.core.ManifestMetadataReader: java.lang.String TRACES_UI_ENABLE
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String[] contentCommitMimeTypes
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
io.sentry.android.core.DeviceInfoUtil: java.lang.Boolean isEmulator
io.sentry.android.core.ApplicationNotResponding: long serialVersionUID
io.sentry.UncaughtExceptionHandlerIntegration: java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler
io.sentry.protocol.SentryTransaction$JsonKeys: java.lang.String TIMESTAMP
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.sentry.protocol.ViewHierarchy$JsonKeys: java.lang.String RENDERING_SYSTEM
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: java.lang.String START_TIMESTAMP
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: int signalStrength
io.sentry.SentryItemType: io.sentry.SentryItemType Unknown
io.sentry.SentryReplayOptions: java.util.Set maskViewClasses
io.sentry.flutter.SentryFlutter$updateOptions$23: io.sentry.android.core.SentryAndroidOptions $options
androidx.fragment.app.Fragment: int VIEW_CREATED
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String SNAPSHOT_ASSET_PATH_KEY
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String PACKAGE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_DART_PROFILING
androidx.fragment.app.Fragment: int ATTACHED
io.sentry.android.replay.util.ComposeTextLayout: androidx.compose.ui.text.TextLayoutResult layout
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
io.sentry.rrweb.RRWebVideoEvent: int frameCount
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: java.lang.String $propertyName
io.sentry.android.core.SentryAndroidOptions: long startupCrashDurationThresholdMillis
io.sentry.SentryAppStartProfilingOptions: boolean traceSampled
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: java.lang.String WIDTH
io.flutter.embedding.android.KeyboardMap$TogglingGoal: int mask
io.sentry.transport.QueuedThreadPoolExecutor: long RECENT_THRESHOLD
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
io.sentry.SentryOptions: java.util.Set ignoredExceptionsForType
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information PETABYTE
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1: io.flutter.embedding.engine.systemchannels.ProcessTextChannel this$0
io.sentry.protocol.SentryThread$JsonKeys: java.lang.String CURRENT
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN
io.sentry.TypeCheckHint: java.lang.String APOLLO_REQUEST
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate keyboardDelegate
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToComponentNames
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.sentry.SentryOptions: java.lang.String sentryClientName
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.sentry.android.replay.video.SimpleVideoEncoder$hasExynosCodec$2: io.sentry.android.replay.video.SimpleVideoEncoder$hasExynosCodec$2 INSTANCE
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: android.os.Handler handler
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration SECOND
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
io.sentry.SpanStatus: io.sentry.SpanStatus UNAVAILABLE
io.sentry.profilemeasurements.ProfileMeasurementValue: java.util.Map unknown
io.sentry.android.replay.RootViewsSpy$listeners$1: io.sentry.android.replay.RootViewsSpy this$0
androidx.fragment.app.Fragment: boolean mTransitioning
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.ProfilingTransactionData currentProfilingTransactionData
io.sentry.flutter.SentryFlutter$updateOptions$6: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.embedding.engine.systemchannels.NavigationChannel: java.lang.String TAG
io.sentry.transport.RateLimiter: java.util.Timer timer
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
io.sentry.android.core.internal.debugmeta.AssetsDebugMetaLoader: android.content.Context context
io.sentry.SentryTracer: java.lang.String name
io.sentry.instrumentation.file.FileIOSpanManager: long byteCount
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
io.sentry.android.replay.video.SimpleVideoEncoder: kotlin.Lazy hasExynosCodec$delegate
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToName
io.sentry.backpressure.NoOpBackpressureMonitor: io.sentry.backpressure.NoOpBackpressureMonitor instance
io.sentry.protocol.ViewHierarchyNode: java.lang.String identifier
io.sentry.SentryBaseEvent: io.sentry.protocol.DebugMeta debugMeta
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String TAG
io.sentry.SentryReplayEvent: java.util.Date timestamp
io.sentry.MemoryCollectionData: long usedHeapMemory
io.sentry.protocol.MeasurementValue: java.lang.String KEY_FRAMES_TOTAL
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: java.util.Queue processedEnvelopes
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type CLICKABLE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
io.sentry.protocol.Response$JsonKeys: java.lang.String DATA
io.sentry.android.core.SentryAndroidOptions: boolean enableAutoActivityLifecycleTracing
io.sentry.protocol.Geo$JsonKeys: java.lang.String COUNTRY_CODE
io.sentry.SpanStatus: io.sentry.SpanStatus PERMISSION_DENIED
io.sentry.android.replay.WindowRecorder$capturer$2: io.sentry.android.replay.WindowRecorder$capturer$2 INSTANCE
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback beforeSend
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.sentry.protocol.SentryStackFrame$JsonKeys: java.lang.String INSTRUCTION_ADDR
io.sentry.TraceContext: java.lang.String sampleRate
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: kotlin.Lazy snakecasePattern$delegate
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
io.sentry.MetricsAggregator: io.sentry.SentryOptions$BeforeEmitMetricCallback beforeEmitCallback
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
io.sentry.SentryOptions: int maxSpans
io.sentry.android.core.PerformanceAndroidEventProcessor: long MAX_PROCESS_INIT_APP_START_DIFF_MS
io.sentry.vendor.gson.stream.JsonReader: int PEEKED_EOF
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource ROUTE
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
io.sentry.SpanContext: java.lang.String origin
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
io.sentry.Baggage$DSCKeys: java.lang.String RELEASE
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
io.sentry.SentryReplayEvent: long REPLAY_VIDEO_MAX_SIZE
io.sentry.android.core.internal.threaddump.Lines: int mMin
io.sentry.CheckIn: java.lang.String environment
io.sentry.ShutdownHookIntegration: java.lang.Thread thread
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String PLATFORM_BRIGHTNESS
io.sentry.android.core.AndroidOptionsInitializer: long DEFAULT_FLUSH_TIMEOUT_MS
io.sentry.FullyDisplayedReporter: java.util.List listeners
io.sentry.flutter.SentryFlutter$updateOptions$3: io.sentry.android.core.SentryAndroidOptions $options
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.sentry.IMetricsAggregator: void distribution(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromCheckIn$11(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.SentryOptions: boolean isEnableScreenTracking()
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
io.flutter.util.Preconditions: void checkState(boolean)
io.sentry.SentryClient$SortBreadcrumbsByDate: SentryClient$SortBreadcrumbsByDate(io.sentry.SentryClient$1)
io.sentry.SentryOptions: long getShutdownTimeoutMillis()
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
io.sentry.NoOpTransactionProfiler: io.sentry.ProfilingTraceData onTransactionFinish(io.sentry.ITransaction,java.util.List,io.sentry.SentryOptions)
io.sentry.protocol.Device: java.lang.Integer getScreenHeightPixels()
io.sentry.flutter.SentryFlutter$updateOptions$27: SentryFlutter$updateOptions$27(io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.SentryAndroidOptions: void enableAllAutoBreadcrumbs(boolean)
io.sentry.DefaultTransactionPerformanceCollector: void start(io.sentry.ITransaction)
io.sentry.android.replay.RootViewsSpy$listeners$1: io.sentry.android.replay.OnRootViewsChangedListener removeAt(int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
io.sentry.protocol.Mechanism: void setHandled(java.lang.Boolean)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
io.sentry.android.replay.ReplayFrame: long getTimestamp()
io.sentry.ScopeCallback: void run(io.sentry.IScope)
io.sentry.android.core.internal.util.RootChecker: boolean checkRootFiles()
io.sentry.SentryOptions: void setTracingOrigins(java.util.List)
io.sentry.SentryOptions: long getSessionTrackingIntervalMillis()
io.sentry.SentryReplayEvent$ReplayType$Deserializer: SentryReplayEvent$ReplayType$Deserializer()
io.sentry.SentryExceptionFactory: SentryExceptionFactory(io.sentry.SentryStackTraceFactory)
io.sentry.android.core.ActivityBreadcrumbsIntegration: void close()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: SpellCheckChannel$1(io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
io.sentry.SpanFinishedCallback: void execute(io.sentry.Span)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: void onLost(android.net.Network)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
io.sentry.JsonObjectDeserializer: boolean handlePrimitive(io.sentry.JsonObjectDeserializer$NextValue)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.sentry.android.core.AnrV2EventProcessor: void setContexts(io.sentry.SentryBaseEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
io.sentry.HubAdapter: io.sentry.ITransaction getTransaction()
io.sentry.Hub: void lambda$close$1(io.sentry.ISentryExecutorService)
io.sentry.SentryReplayOptions: int getFrameRate()
io.sentry.android.ndk.INativeScope: void addBreadcrumb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.core.UserInteractionIntegration: void onActivityDestroyed(android.app.Activity)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
io.sentry.android.core.cache.AndroidEnvelopeCache: AndroidEnvelopeCache(io.sentry.android.core.SentryAndroidOptions,io.sentry.transport.ICurrentDateProvider)
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.sentry.SentryTracer: java.lang.Boolean isProfileSampled()
io.sentry.clientreport.AtomicClientReportStorage: java.util.List resetCountsAndGet()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.sentry.rrweb.RRWebBreadcrumbEvent: void setDataUnknown(java.util.Map)
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromCheckIn(io.sentry.ISerializer,io.sentry.CheckIn)
io.sentry.FullyDisplayedReporter: void reportFullyDrawn()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.replay.video.MuxerConfig: java.lang.String toString()
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivity()
io.sentry.protocol.Device: java.lang.Float getBatteryTemperature()
io.sentry.SpanContext: java.util.Map getUnknown()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void lambda$dispatch$0()
io.sentry.SentryBaseEvent: io.sentry.protocol.Contexts getContexts()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: NoOpWindowCallback()
io.sentry.android.core.performance.TimeSpan: long getDurationMs()
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.android.replay.WindowsKt: android.view.Window getPhoneWindow(android.view.View)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onAttachedToWindow()
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
io.sentry.cache.EnvelopeCache: java.io.File getCurrentSessionFile(java.lang.String)
io.sentry.SentryReplayOptions: void setMaskAllText(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryClient: io.sentry.SentryReplayEvent applyScope(io.sentry.SentryReplayEvent,io.sentry.IScope)
io.sentry.SentryClient: void close()
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
io.sentry.HubAdapter: io.sentry.SentryTraceHeader getTraceparent()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
io.sentry.SentryTracer: void setMeasurementFromChild(java.lang.String,java.lang.Number)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: float getY()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: void access$700(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState,io.sentry.internal.gestures.UiElement)
io.sentry.SentryLockReason$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.util.FixedWindowCallback: void onActionModeFinished(android.view.ActionMode)
io.sentry.JsonObjectDeserializer: void parse(io.sentry.JsonObjectReader)
io.sentry.android.replay.ReplayFrame: int hashCode()
io.sentry.protocol.SdkVersion: void addPackage(java.lang.String,java.lang.String)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
io.sentry.NoOpScope: void clearSession()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.pm.ApplicationInfo getApplicationInfo()
io.sentry.flutter.SentryFlutter$updateOptions$12: void invoke(int)
io.sentry.ReplayRecording: int hashCode()
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: BackGestureChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.android.replay.gestures.GestureRecorder: void startGestureTracking(android.view.View)
io.sentry.SentryTracer: io.sentry.ISpan createChild(io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.SpanOptions)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Void doInBackground(java.lang.Void[])
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean remove(android.view.View)
io.sentry.SentryTracer: io.sentry.Span getRoot()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngineGroup$Options addEntrypointOptions(io.flutter.embedding.engine.FlutterEngineGroup$Options)
io.sentry.SentryBaseEvent: java.lang.String access$602(io.sentry.SentryBaseEvent,java.lang.String)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: void onMeasure(int,int)
io.sentry.NoOpScope: io.sentry.SentryOptions getOptions()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
io.sentry.NoOpTransaction: void setTag(java.lang.String,java.lang.String)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: CaptureStrategy$ReplaySegment$Created(io.sentry.SentryReplayEvent,io.sentry.ReplayRecording)
io.sentry.android.replay.ReplayIntegration: void cleanupReplays$default(io.sentry.android.replay.ReplayIntegration,java.lang.String,int,java.lang.Object)
io.sentry.rrweb.RRWebInteractionEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
io.sentry.EnvelopeSender: void processFile(java.io.File,io.sentry.Hint)
io.sentry.Hint: void setScreenshot(io.sentry.Attachment)
androidx.fragment.app.Fragment: int getExitAnim()
io.flutter.embedding.engine.dart.DartMessenger: void lambda$dispatchMessageToQueue$0(java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long)
io.sentry.BaggageHeader: java.lang.String getName()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: SentryFrameMetricsCollector(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.protocol.TransactionInfo: TransactionInfo(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: java.lang.String getNativeSdkName()
io.sentry.protocol.User$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.common.BinaryMessenger: void disableBufferingIncomingMessages()
io.sentry.SentryOptions: long getMaxAttachmentSize()
io.sentry.SentryOptions: io.sentry.internal.debugmeta.IDebugMetaLoader getDebugMetaLoader()
io.sentry.android.core.performance.AppStartMetrics: void onFirstFrameDrawn()
io.sentry.backpressure.BackpressureMonitor: int getDownsampleFactor()
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
io.sentry.android.replay.video.SimpleVideoEncoder: void drainCodec(boolean)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder dartEntrypoint(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$10: void invoke(boolean)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
io.sentry.util.UrlUtils: java.lang.String urlWithAuthRemoved(java.lang.String)
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.Long getLogicalKey(android.view.KeyEvent)
io.sentry.android.core.UserInteractionIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void detachFromBroadcastReceiver()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: int getId()
io.sentry.IHub$-CC: void $default$addBreadcrumb(io.sentry.IHub,java.lang.String,java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
io.sentry.SentryBaseEvent: void setRequest(io.sentry.protocol.Request)
io.sentry.IScope: void setTransaction(io.sentry.ITransaction)
io.sentry.CheckIn: java.lang.String getMonitorSlug()
io.sentry.metrics.CounterMetric: double getValue()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterActivity: void updateBackGestureProgress(android.window.BackEvent)
io.sentry.NoOpHub: io.sentry.ITransaction getTransaction()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.RenderMode)
io.sentry.android.replay.capture.BufferCaptureStrategy$pause$1: BufferCaptureStrategy$pause$1(io.sentry.android.replay.capture.BufferCaptureStrategy)
io.flutter.embedding.engine.renderer.RenderSurface: void detachFromRenderer()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.sentry.android.replay.ReplayCache: java.io.File getReplayCacheDir$sentry_android_replay_release()
io.sentry.android.core.AnrIntegration: void startAnrWatchdog(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.sentry.protocol.DebugMeta$Deserializer: io.sentry.protocol.DebugMeta deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryEnvelopeHeader$Deserializer: SentryEnvelopeHeader$Deserializer()
io.sentry.Scope: io.sentry.ISpan getSpan()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getDartEntrypointFunctionName()
io.flutter.embedding.android.FlutterActivity: boolean attachToEngineAutomatically()
io.sentry.android.replay.ScreenshotRecorderConfig: int getFrameRate()
io.sentry.protocol.Gpu: void setMemorySize(java.lang.Integer)
io.sentry.flutter.SentryFlutter$updateOptions$23: java.lang.Object invoke(java.lang.Object)
io.sentry.NoOpHub: void setFingerprint(java.util.List)
io.sentry.DisabledQueue: java.lang.Object poll()
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.metrics.MetricType: MetricType(java.lang.String,int,java.lang.String)
io.sentry.PropagationContext: void setSpanId(io.sentry.SpanId)
io.sentry.android.core.AndroidOptionsInitializer: void readDefaultOptionValues(io.sentry.android.core.SentryAndroidOptions,android.content.Context,io.sentry.android.core.BuildInfoProvider)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
io.sentry.android.replay.util.FixedWindowCallback: void onWindowFocusChanged(boolean)
io.sentry.Scope: io.sentry.PropagationContext getPropagationContext()
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.embedding.engine.systemchannels.SettingsChannel: boolean hasNonlinearTextScalingSupport()
io.sentry.protocol.App: java.lang.String access$502(io.sentry.protocol.App,java.lang.String)
io.sentry.NoOpTransaction: io.sentry.protocol.TransactionNameSource getTransactionNameSource()
io.sentry.rrweb.RRWebBreadcrumbEvent: void setUnknown(java.util.Map)
io.sentry.metrics.MetricsHelper: java.lang.String sanitizeTagKey(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
io.sentry.rrweb.RRWebInteractionEvent$Deserializer: io.sentry.rrweb.RRWebInteractionEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.view.Surface getSurface()
io.sentry.SpanStatus$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.ScreenshotRecorderConfig: io.sentry.android.replay.ScreenshotRecorderConfig copy(int,int,float,float,int,int)
io.flutter.plugin.platform.PlatformViewsController: long configureForTextureLayerComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.config.FilesystemPropertiesLoader: FilesystemPropertiesLoader(java.lang.String,io.sentry.ILogger)
io.sentry.android.replay.SentryReplayModifiers$SentryPrivacy$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.sentry.android.replay.RootViewsSpy$listeners$1: boolean remove(io.sentry.android.replay.OnRootViewsChangedListener)
io.sentry.TransactionFinishedCallback: void execute(io.sentry.ITransaction)
androidx.activity.OnBackPressedCallback: void setEnabledChangedCallback$activity_release(kotlin.jvm.functions.Function0)
io.sentry.protocol.Mechanism: java.lang.Boolean isHandled()
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: ISO8601Utils()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.android.core.internal.gestures.SentryGestureListener: void lambda$clearScope$2(io.sentry.IScope,io.sentry.ITransaction)
io.sentry.NoOpHub: NoOpHub()
io.sentry.protocol.SentryException: java.lang.Long getThreadId()
io.sentry.ISpan: io.sentry.SpanContext getSpanContext()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: java.lang.String toString()
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
io.sentry.Span: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SpanOptions)
io.sentry.android.replay.util.FixedWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
io.sentry.TransactionPerformanceCollector: void close()
io.sentry.OutboxSender: OutboxSender(io.sentry.IHub,io.sentry.IEnvelopeReader,io.sentry.ISerializer,io.sentry.ILogger,long,int)
io.sentry.android.core.ContextUtils: android.content.Context getApplicationContext(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
io.sentry.protocol.SentryException: java.util.Map getUnknown()
io.sentry.SentryCrashLastRunState: void setCrashedLastRun(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.protocol.Device: void setProcessorCount(java.lang.Integer)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
io.sentry.android.replay.capture.BaseCaptureStrategy$Companion: BaseCaptureStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
io.sentry.vendor.Base64$Encoder: Base64$Encoder(int,byte[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getInitialRoute()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.sentry.android.replay.util.FixedWindowCallback: boolean onSearchRequested(android.view.SearchEvent)
io.sentry.flutter.SentryFlutter$updateOptions$24$2: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler: java.lang.String getStringResource(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.sentry.config.PropertiesProvider: java.lang.String getProperty(java.lang.String,java.lang.String)
io.sentry.IOptionsObserver: void setTags(java.util.Map)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String access$002(io.sentry.rrweb.RRWebBreadcrumbEvent,java.lang.String)
io.sentry.android.core.PerformanceAndroidEventProcessor: PerformanceAndroidEventProcessor(io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.ActivityFramesTracker)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
io.flutter.view.AccessibilityBridge: int access$1172(io.flutter.view.AccessibilityBridge,int)
io.sentry.ISentryClient: boolean isHealthy()
io.sentry.android.core.SentryAndroidOptions: io.sentry.protocol.SdkVersion createSdkVersion()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.sentry.SentryEvent: SentryEvent(java.util.Date)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
io.sentry.protocol.OperatingSystem: void setUnknown(java.util.Map)
io.sentry.SentryBaseEvent: java.util.List getBreadcrumbs()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
io.sentry.DefaultTransactionPerformanceCollector: void onSpanFinished(io.sentry.ISpan)
io.sentry.Sentry: io.sentry.metrics.MetricsApi metrics()
io.sentry.android.core.internal.util.FirstDrawDoneListener: void lambda$onDraw$1(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.rrweb.RRWebInteractionEvent: float getX()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion: SentryFlutterReplayBreadcrumbConverter$Companion()
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$onActivityResumed$8(io.sentry.ISpan,io.sentry.ISpan)
io.sentry.util.HttpUtils: java.util.List filterOutSecurityCookiesFromHeader(java.util.List,java.lang.String,java.util.List)
io.sentry.SentryOptions$Cron: void setDefaultTimezone(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
io.sentry.clientreport.ClientReport: java.util.Map getUnknown()
io.sentry.SentryOptions: io.sentry.Dsn lambda$new$0()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder withNewEngineInGroup(java.lang.String)
io.sentry.SentryBaseEvent: SentryBaseEvent()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
io.sentry.protocol.SentryStackFrame: java.lang.String access$1502(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.cache.tape.ObjectQueue: java.util.List asList()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onDetachedFromWindow()
io.sentry.android.ndk.SentryNdk: SentryNdk()
io.sentry.cache.PersistingScopeObserver: void setContexts(io.sentry.protocol.Contexts)
io.sentry.SendFireAndForgetOutboxSender: SendFireAndForgetOutboxSender(io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath)
io.sentry.NoOpSpan: io.sentry.SentryDate getFinishDate()
io.sentry.ISentryClient: void captureSession(io.sentry.Session,io.sentry.Hint)
io.sentry.CpuCollectionData: double getCpuUsagePercentage()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: void setDisplayFeatures(java.util.List)
io.sentry.metrics.MetricsApi: void set(java.lang.String,int,io.sentry.MeasurementUnit,java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.sentry.protocol.SentryRuntime: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.rrweb.RRWebInteractionEvent: int getPointerType()
io.flutter.embedding.android.FlutterActivity: void onStop()
io.sentry.Hub: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext,io.sentry.TransactionOptions)
io.sentry.PropagationContext: PropagationContext()
io.sentry.android.core.AndroidTransactionProfiler: AndroidTransactionProfiler(android.content.Context,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.internal.util.SentryFrameMetricsCollector,io.sentry.IHub)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.sentry.android.replay.ScreenshotRecorder$RecorderExecutorServiceThreadFactory: ScreenshotRecorder$RecorderExecutorServiceThreadFactory()
io.sentry.SentryStackTraceFactory: SentryStackTraceFactory(io.sentry.SentryOptions)
io.sentry.SentryLockReason: void setAddress(java.lang.String)
io.sentry.IScope: void setTag(java.lang.String,java.lang.String)
io.sentry.NoOpReplayBreadcrumbConverter: NoOpReplayBreadcrumbConverter()
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator: void remove()
io.sentry.android.replay.ReplayFrame: ReplayFrame(java.io.File,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SentryOptions: void setSdkVersion(io.sentry.protocol.SdkVersion)
io.sentry.rrweb.RRWebVideoEvent: boolean equals(java.lang.Object)
io.sentry.util.MapObjectReader: java.lang.String nextStringOrNull()
io.sentry.android.core.ActivityFramesTracker: void runSafelyOnUiThread(java.lang.Runnable,java.lang.String)
io.sentry.android.core.performance.AppStartMetrics$AppStartType: AppStartMetrics$AppStartType(java.lang.String,int)
io.sentry.IScope: io.sentry.Session endSession()
io.sentry.CircularFifoQueue: java.lang.Object poll()
io.sentry.SentryLevel: io.sentry.SentryLevel[] $values()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
io.sentry.SentryBaseEvent: void setEventId(io.sentry.protocol.SentryId)
io.sentry.metrics.MetricsHelper: java.lang.String sanitizeName(java.lang.String)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.flutter.embedding.android.FlutterFragment: void onFlutterUiDisplayed()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void log(com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel,java.lang.String)
io.sentry.SentryClient: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.SentryOptions$Proxy: void setPort(java.lang.String)
io.sentry.CircularFifoQueue: void writeObject(java.io.ObjectOutputStream)
io.sentry.android.replay.util.ExecutorsKt: void submitSafely$lambda$2(java.lang.Runnable,io.sentry.SentryOptions,java.lang.String)
io.sentry.transport.ITransport: boolean isHealthy()
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
io.sentry.flutter.SentryFlutter$updateOptions$7: void invoke(long)
io.sentry.util.MapObjectReader: java.util.Map nextMapOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.android.replay.RootViewsSpy$listeners$1: boolean contains(java.lang.Object)
io.sentry.protocol.SentryThread: java.util.Map access$902(io.sentry.protocol.SentryThread,java.util.Map)
io.sentry.android.replay.WindowSpy$decorViewClass$2: java.lang.Class invoke()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
io.sentry.Scope: java.lang.String getTransactionName()
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(long)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void startStylusHandwriting(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void lambda$createReplyHandler$0(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object)
io.sentry.SynchronizedQueue: java.lang.Object poll()
io.sentry.android.core.ViewHierarchyEventProcessor: byte[] snapshotViewHierarchyAsData(android.app.Activity,io.sentry.util.thread.IMainThreadChecker,io.sentry.ISerializer,io.sentry.ILogger)
io.sentry.clientreport.ClientReportRecorder: io.sentry.clientreport.ClientReport resetCountsAndGenerateClientReport()
io.sentry.android.replay.util.PersistableLinkedList: java.lang.Object remove()
io.sentry.protocol.DebugImage: java.lang.String getCodeId()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableNdk()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap bmCharacteristicProperties(int)
io.sentry.android.core.NdkIntegration: java.lang.Class getSentryNdkClass()
io.sentry.android.replay.util.FixedWindowCallback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.sentry.android.core.BuildInfoProvider: BuildInfoProvider(io.sentry.ILogger)
io.flutter.embedding.engine.renderer.RenderSurface: void resume()
io.sentry.android.core.SentryAndroidOptions: void setFrameMetricsCollector(io.sentry.android.core.internal.util.SentryFrameMetricsCollector)
io.sentry.Sentry: void lambda$init$2(io.sentry.SentryOptions)
io.sentry.android.core.NetworkBreadcrumbsIntegration: boolean access$000(io.sentry.android.core.NetworkBreadcrumbsIntegration)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(long)
io.sentry.android.core.internal.util.FirstDrawDoneListener: void onDraw()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayChanged(int)
io.sentry.util.LogUtils: void logNotInstanceOf(java.lang.Class,java.lang.Object,io.sentry.ILogger)
io.sentry.rrweb.RRWebBreadcrumbEvent: io.sentry.SentryLevel getLevel()
io.sentry.android.core.ContextUtils: java.lang.String getVersionCodeDep(android.content.pm.PackageInfo)
io.sentry.Sentry: io.sentry.ITransaction startTransaction(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: NavigationChannel$1(io.flutter.embedding.engine.systemchannels.NavigationChannel)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion: kotlin.text.Regex access$getSnakecasePattern(io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion)
io.sentry.android.core.internal.util.Permissions: boolean hasPermission(android.content.Context,java.lang.String)
io.sentry.rrweb.RRWebVideoEvent: int access$802(io.sentry.rrweb.RRWebVideoEvent,int)
io.sentry.SentryReplayEvent: void setType(java.lang.String)
io.sentry.protocol.MeasurementValue: void setUnknown(java.util.Map)
io.sentry.transport.RateLimiter: void notifyRateLimitObservers()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: void invoke()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2(java.lang.String,java.lang.Object,java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.sentry.android.core.internal.util.ScreenshotUtils: ScreenshotUtils()
io.sentry.SentryEnvelopeHeader: void setSentAt(java.util.Date)
io.flutter.embedding.android.ExclusiveAppComponent: java.lang.Object getAppComponent()
io.sentry.SentryTracer: io.sentry.SentryDate getStartDate()
io.sentry.android.replay.ScreenshotRecorder: int access$dominantColorForRect(io.sentry.android.replay.ScreenshotRecorder,android.graphics.Bitmap,android.graphics.Rect)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$5: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: io.sentry.ILogger getLogger()
io.sentry.hints.Resettable: void reset()
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] values()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
io.sentry.SentryReplayOptions: SentryReplayOptions(java.lang.Double,java.lang.Double,io.sentry.protocol.SdkVersion)
io.sentry.vendor.gson.stream.JsonWriter: void newline()
io.sentry.backpressure.BackpressureMonitor: void start()
io.sentry.instrumentation.file.SentryFileOutputStream: java.lang.Integer lambda$write$1(byte[])
io.sentry.JsonObjectReader: long nextLong()
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn)
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
io.sentry.SpanContext: io.sentry.SpanId getParentSpanId()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer,android.content.Context)
io.sentry.transport.NoOpTransportGate: boolean isConnected()
io.sentry.SentryLockReason: java.lang.String getClassName()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode component1()
io.sentry.NoOpSpan: java.lang.Object getData(java.lang.String)
io.sentry.protocol.Gpu: void setUnknown(java.util.Map)
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.protocol.ViewHierarchy snapshotViewHierarchy(android.app.Activity,java.util.List,io.sentry.util.thread.IMainThreadChecker,io.sentry.ILogger)
io.sentry.Sentry: void handleAppStartProfilingConfig(io.sentry.SentryOptions,io.sentry.ISentryExecutorService)
io.sentry.android.core.SentryAndroidOptions: void setEnableRootCheck(boolean)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
io.sentry.SentryEvent: boolean isErrored()
io.sentry.android.replay.GeneratedVideo: java.lang.String toString()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1: ImageReaderPlatformViewRenderTarget$1(io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
io.sentry.protocol.SentryStackTrace: java.util.Map getRegisters()
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType[] $values()
io.sentry.protocol.App: java.util.Map getUnknown()
io.sentry.util.HintUtils: void setEventDropReason(io.sentry.Hint,io.sentry.hints.EventDropReason)
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.ScheduledExecutorService getPersistingExecutor()
io.sentry.util.MapObjectWriter: void serializeMap(io.sentry.ILogger,java.util.Map)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
io.sentry.NoOpSpan: boolean isNoOp()
io.flutter.util.ViewUtils: boolean traverseHierarchy(android.view.View,io.flutter.util.ViewUtils$ViewVisitor)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.sentry.flutter.SentryFlutter$updateOptions$14: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterFragment: void updateSystemUiOverlays()
io.sentry.protocol.SentryTransaction: java.lang.String access$002(io.sentry.protocol.SentryTransaction,java.lang.String)
io.sentry.Hub: io.sentry.BaggageHeader getBaggage()
io.sentry.protocol.Device: java.lang.Boolean access$802(io.sentry.protocol.Device,java.lang.Boolean)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromReplay$24(io.sentry.ISerializer,io.sentry.SentryReplayEvent,io.sentry.ReplayRecording,java.io.File,io.sentry.ILogger,boolean)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(double)
io.flutter.embedding.android.FlutterFragment: boolean isFlutterEngineInjected()
io.sentry.Session$Deserializer: Session$Deserializer()
io.sentry.Hub: io.sentry.SpanContext getSpanContext(java.lang.Throwable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.sentry.android.replay.util.AndroidTextLayout: java.lang.Integer getDominantTextColor()
io.sentry.SentryTracer$FinishStatus: io.sentry.SentryTracer$FinishStatus finishing(io.sentry.SpanStatus)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding(android.content.BroadcastReceiver)
io.sentry.SentryOptions: boolean isEnableUserInteractionBreadcrumbs()
io.sentry.metrics.MetricsApi: void set(java.lang.String,int)
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.SentryOptions: boolean isEnableScopePersistence()
io.sentry.android.core.AndroidDateUtils: AndroidDateUtils()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: int access$1900(io.flutter.plugin.platform.PlatformViewsController,double,float)
io.sentry.instrumentation.file.SentryFileInputStream: int read(byte[],int,int)
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
io.sentry.ProfilingTraceData: void setBuildId(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
io.sentry.DefaultTransactionPerformanceCollector: java.util.List stop(io.sentry.ITransaction)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
io.sentry.NoOpScope: void addBreadcrumb(io.sentry.Breadcrumb)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
io.sentry.rrweb.RRWebOptionsEvent: java.util.Map getUnknown()
io.sentry.ShutdownHookIntegration: void handleShutdownInProgress(java.lang.Runnable)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
io.sentry.SentryOptions: void setEnableScopePersistence(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
io.sentry.cache.tape.QueueFile: byte[] peek()
io.sentry.vendor.gson.stream.JsonReader: long nextLong()
io.sentry.protocol.SentryId: SentryId(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
io.sentry.android.core.internal.util.AndroidMainThreadChecker: boolean isMainThread(java.lang.Thread)
io.sentry.util.LogUtils: LogUtils()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.ContextUtils: android.app.ActivityManager$MemoryInfo getMemInfo(android.content.Context,io.sentry.ILogger)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String uuid128(java.lang.Object)
io.sentry.UncaughtExceptionHandlerIntegration: void uncaughtException(java.lang.Thread,java.lang.Throwable)
io.sentry.protocol.SentryTransaction: java.lang.Double access$102(io.sentry.protocol.SentryTransaction,java.lang.Double)
io.sentry.protocol.User: java.util.Map getUnknown()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,byte[],int)
io.sentry.SentryTracer: void setMeasurement(java.lang.String,java.lang.Number,io.sentry.MeasurementUnit)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
io.sentry.android.ndk.NdkScopeObserver: NdkScopeObserver(io.sentry.SentryOptions)
io.sentry.flutter.SentryFlutter$updateOptions$18: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.AnrV2EventProcessor: void setApp(io.sentry.SentryBaseEvent,java.lang.Object)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void askPermission(java.util.List,com.lib.flutter_blue_plus.FlutterBluePlusPlugin$OperationOnPermission)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.sentry.android.core.DefaultAndroidEventProcessor: void mergeOS(io.sentry.SentryBaseEvent)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.rrweb.RRWebBreadcrumbEvent newRRWebBreadcrumb(io.sentry.Breadcrumb)
io.sentry.EventProcessor$-CC: io.sentry.SentryReplayEvent $default$process(io.sentry.EventProcessor,io.sentry.SentryReplayEvent,io.sentry.Hint)
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence getOldText()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List access$1100(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
io.sentry.android.ndk.DebugImagesLoader: java.util.List loadDebugImages()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
io.sentry.SentryEnvelope: io.sentry.SentryEnvelope from(io.sentry.ISerializer,io.sentry.ProfilingTraceData,long,io.sentry.protocol.SdkVersion)
io.sentry.UncaughtExceptionHandlerIntegration$UncaughtExceptionHint: UncaughtExceptionHandlerIntegration$UncaughtExceptionHint(long,io.sentry.ILogger)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
io.sentry.FullyDisplayedReporter: FullyDisplayedReporter()
io.flutter.util.TraceSection: void endAsyncSection(java.lang.String,int)
io.sentry.SentryOptions: java.util.List getTracePropagationTargets()
io.flutter.plugin.platform.SingleViewWindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartLibraryUri(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.AnrV2EventProcessor: void setDebugMeta(io.sentry.SentryBaseEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.protocol.OperatingSystem: OperatingSystem(io.sentry.protocol.OperatingSystem)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.sentry.IHub: io.sentry.BaggageHeader getBaggage()
io.flutter.plugin.platform.VirtualDisplayController: void resetSurface()
io.sentry.protocol.SentryStackFrame: java.lang.Boolean access$702(io.sentry.protocol.SentryStackFrame,java.lang.Boolean)
io.flutter.plugin.platform.VirtualDisplayController: int getRenderTargetHeight()
io.sentry.SentryOptions: void setDistinctId(java.lang.String)
io.sentry.ExternalOptions: java.lang.Boolean getDebug()
io.sentry.protocol.SentryStackFrame: void setPackage(java.lang.String)
io.sentry.DisabledQueue: java.lang.Object element()
io.sentry.flutter.SentryFlutter$updateOptions$19: SentryFlutter$updateOptions$19(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
io.sentry.protocol.DebugImage: java.util.Map getUnknown()
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
io.sentry.android.core.AnrIntegration: AnrIntegration(android.content.Context)
io.sentry.Session: double calculateDurationTime(java.util.Date)
io.sentry.Sentry: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: java.lang.Integer getDominantColor()
io.sentry.CheckIn: void setMonitorSlug(java.lang.String)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointLibraryUri()
io.sentry.android.replay.capture.BufferCaptureStrategy$captureReplay$2: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(int)
io.sentry.android.replay.capture.BaseCaptureStrategy: void start(io.sentry.android.replay.ScreenshotRecorderConfig,int,io.sentry.protocol.SentryId,io.sentry.SentryReplayEvent$ReplayType)
io.sentry.android.replay.video.SimpleVideoEncoder$mediaFormat$2: java.lang.Object invoke()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.sentry.protocol.DebugImage: java.lang.String access$002(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.android.core.AnrV2Integration: void register(io.sentry.IHub,io.sentry.SentryOptions)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
io.sentry.JsonObjectReader: java.util.List nextListOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.android.core.internal.util.DeviceOrientations: io.sentry.protocol.Device$DeviceOrientation getOrientation(int)
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
io.sentry.backpressure.NoOpBackpressureMonitor: void start()
io.sentry.profilemeasurements.ProfileMeasurement: ProfileMeasurement(java.lang.String,java.util.Collection)
androidx.preference.internal.PreferenceImageView: void setMaxWidth(int)
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.sentry.Hub: io.sentry.Stack$StackItem createRootStackItem(io.sentry.SentryOptions)
io.sentry.protocol.Browser$JsonKeys: Browser$JsonKeys()
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter beginObject()
io.sentry.metrics.NoopMetricsAggregator: io.sentry.ISpan startSpanForMetric(java.lang.String,java.lang.String)
io.flutter.embedding.android.KeyboardManager$ViewDelegate: void redispatch(android.view.KeyEvent)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double access$702(io.sentry.protocol.ViewHierarchyNode,java.lang.Double)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.rrweb.RRWebInteractionEvent: void setDataUnknown(java.util.Map)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$startTracing$1(io.sentry.ISpan,io.sentry.ISpan)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
io.flutter.plugin.platform.PlatformViewWrapper: void onDescendantInvalidated(android.view.View,android.view.View)
io.sentry.flutter.SentryFlutterPlugin$Companion: void crash()
io.sentry.NoOpReplayController: void pause()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void destroy()
io.flutter.embedding.android.FlutterFragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.AndroidProfiler$1: void onFrameMetricCollected(long,long,long,long,boolean,boolean,float)
io.sentry.SentryTracer$1: SentryTracer$1(io.sentry.SentryTracer)
io.sentry.android.core.SendCachedEnvelopeIntegration: void lambda$sendCachedEnvelopes$0(io.sentry.android.core.SentryAndroidOptions,io.sentry.IHub)
io.sentry.cache.tape.FileObjectQueue: io.sentry.cache.tape.QueueFile file()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.sentry.SentryEvent: io.sentry.SentryValues access$402(io.sentry.SentryEvent,io.sentry.SentryValues)
io.sentry.util.HintUtils$SentryConsumer: void accept(java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
io.sentry.SentryEnvelopeItem: io.sentry.protocol.SentryTransaction getTransaction(io.sentry.ISerializer)
io.sentry.android.core.AndroidOptionsInitializer: void loadDefaultAndMetadataOptions(io.sentry.android.core.SentryAndroidOptions,android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
io.sentry.cache.tape.EmptyObjectQueue: void add(java.lang.Object)
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.sentry.android.core.NoOpDebugImagesLoader: io.sentry.android.core.NoOpDebugImagesLoader getInstance()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.sentry.protocol.SdkInfo: void setVersionMajor(java.lang.Integer)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$clearScope$4(io.sentry.ITransaction,io.sentry.IScope,io.sentry.ITransaction)
io.sentry.android.replay.util.PersistableLinkedList: PersistableLinkedList(java.lang.String,io.sentry.SentryOptions,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function0)
io.sentry.protocol.SentryId$Deserializer: io.sentry.protocol.SentryId deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
io.sentry.ProfilingTraceData: boolean isDeviceIsEmulator()
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.sentry.SentryExceptionFactory: java.util.List getSentryExceptions(java.util.Deque)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterFragment: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.sentry.SentryOptions: void setDsn(java.lang.String)
io.sentry.NoOpReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convert(io.sentry.Breadcrumb)
io.flutter.embedding.android.FlutterFragment$2: FlutterFragment$2(io.flutter.embedding.android.FlutterFragment,boolean)
io.sentry.cache.CacheStrategy: int lambda$sortFilesOldestToNewest$1(java.io.File,java.io.File)
io.sentry.protocol.Device: void setTimezone(java.util.TimeZone)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter endArray()
io.sentry.rrweb.RRWebBreadcrumbEvent: void setLevel(io.sentry.SentryLevel)
io.sentry.android.replay.capture.BufferCaptureStrategy: void capture(java.util.List)
io.sentry.protocol.MetricSummary: void setMax(double)
io.sentry.protocol.DebugMeta: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: FlutterActivity$NewEngineInGroupIntentBuilder(java.lang.Class,java.lang.String)
io.sentry.Hint: void replaceAttachments(java.util.List)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder appBundlePath(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onRestoreInstanceState(android.os.Bundle)
io.sentry.metrics.MetricsHelper: java.lang.String getExportKey(io.sentry.metrics.MetricType,java.lang.String,io.sentry.MeasurementUnit)
io.sentry.util.Random: void setSeed(long)
io.sentry.PropagationContext: io.sentry.protocol.SentryId getTraceId()
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
io.sentry.NoOpTransactionProfiler: void start()
io.flutter.plugin.platform.PlatformViewsController: void removeOverlaySurfaces()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1: void onTrimMemory(int)
io.sentry.util.HttpUtils: boolean isSecurityCookie(java.lang.String,java.util.List)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder withNewEngine()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
io.sentry.android.core.ContextUtils: android.content.pm.PackageInfo getPackageInfo(android.content.Context,io.sentry.android.core.BuildInfoProvider)
io.sentry.android.core.internal.util.FirstDrawDoneListener$1: void onViewAttachedToWindow(android.view.View)
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
io.sentry.android.replay.ScreenshotRecorderConfig$Companion: ScreenshotRecorderConfig$Companion()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
io.sentry.ExternalOptions: io.sentry.SentryOptions$Cron getCron()
io.sentry.android.core.AnrV2EventProcessor: void backfillOptions(io.sentry.SentryEvent,java.lang.Object)
io.sentry.protocol.Device: void setLanguage(java.lang.String)
io.sentry.ISpan: io.sentry.SpanStatus getStatus()
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.IScope,io.sentry.Hint)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter value(boolean)
io.sentry.util.TracingUtils: void lambda$startNewTrace$0(io.sentry.IScope,io.sentry.PropagationContext)
io.sentry.android.replay.util.TextLayout: float getPrimaryHorizontal(int,int)
io.sentry.android.replay.capture.CaptureStrategy: void setCurrentReplayId(io.sentry.protocol.SentryId)
io.sentry.ObjectReader: java.lang.String nextName()
io.sentry.JsonObjectReader: io.sentry.vendor.gson.stream.JsonToken peek()
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
io.sentry.clientreport.DiscardReason: java.lang.String getReason()
io.sentry.ObjectReader: java.lang.Float nextFloatOrNull()
io.flutter.plugin.common.ErrorLogResult: void success(java.lang.Object)
io.sentry.android.ndk.NativeScope: void removeUser()
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.sentry.protocol.SentryStackFrame: void setSymbol(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
io.flutter.plugin.common.BinaryCodec: BinaryCodec(boolean)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
io.sentry.ISpan: boolean isFinished()
io.sentry.JsonObjectSerializer: void serializeDate(io.sentry.ObjectWriter,io.sentry.ILogger,java.util.Date)
io.sentry.protocol.Device: void setProcessorFrequency(java.lang.Double)
io.flutter.embedding.android.FlutterFragment: void onResume()
io.sentry.protocol.Message: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.cache.tape.QueueFile: void close()
io.sentry.android.replay.video.MuxerConfig: MuxerConfig(java.io.File,int,int,int,int,java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: void onPostResume()
io.sentry.protocol.Request$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.SentryInitProvider: void shutdown()
io.sentry.util.TracingUtils$PropagationContextHolder: TracingUtils$PropagationContextHolder(io.sentry.util.TracingUtils$1)
io.sentry.rrweb.RRWebBreadcrumbEvent$JsonKeys: RRWebBreadcrumbEvent$JsonKeys()
io.sentry.ITransaction: void setName(java.lang.String)
io.sentry.protocol.ViewHierarchy: java.util.List getWindows()
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType valueOf(java.lang.String)
io.sentry.protocol.Request: void setData(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.renderer.RenderSurface: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.util.CollectionUtils: java.util.List filterListEntries(java.util.List,io.sentry.util.CollectionUtils$Predicate)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4600(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType[] $values()
io.sentry.protocol.Mechanism$Deserializer: io.sentry.protocol.Mechanism deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.IHub: io.sentry.protocol.SentryId captureReplay(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.android.core.CurrentActivityIntegration: void onActivityStarted(android.app.Activity)
io.sentry.android.core.PerformanceAndroidEventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.rrweb.RRWebMetaEvent: void setHeight(int)
io.sentry.Stack: Stack(io.sentry.ILogger,io.sentry.Stack$StackItem)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
io.sentry.NoOpHub: io.sentry.SentryTraceHeader getTraceparent()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View)
io.sentry.vendor.gson.stream.JsonReader: java.lang.String nextName()
io.sentry.protocol.Gpu: void setMultiThreadedRendering(java.lang.Boolean)
io.sentry.SentryReplayOptions: void setSdkVersion(io.sentry.protocol.SdkVersion)
io.sentry.android.replay.ReplayCache: void addFrame$default(io.sentry.android.replay.ReplayCache,java.io.File,long,java.lang.String,int,java.lang.Object)
io.sentry.NoOpTransaction: io.sentry.TraceContext traceContext()
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
io.sentry.IHub: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope)
io.sentry.HubAdapter: io.sentry.IHub clone()
io.sentry.protocol.Gpu: java.lang.String access$302(io.sentry.protocol.Gpu,java.lang.String)
io.sentry.android.replay.ReplayFrame: java.io.File component1()
io.flutter.plugin.common.EventChannel$EventSink: void endOfStream()
io.sentry.util.MapObjectReader: io.sentry.vendor.gson.stream.JsonToken peek()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder withNewEngineInGroup(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.NoOpLogger: boolean isEnabled(io.sentry.SentryLevel)
io.sentry.exception.ExceptionMechanismException: ExceptionMechanismException(io.sentry.protocol.Mechanism,java.lang.Throwable,java.lang.Thread)
io.sentry.Span: io.sentry.SpanId getParentSpanId()
io.sentry.rrweb.RRWebInteractionEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebInteractionEvent,io.sentry.ObjectReader,io.sentry.ILogger)
androidx.fragment.app.Fragment: android.view.View getView()
io.sentry.AsyncHttpTransportFactory: io.sentry.transport.ITransport create(io.sentry.SentryOptions,io.sentry.RequestDetails)
io.sentry.EnvelopeSender: boolean isRelevantFileName(java.lang.String)
io.flutter.embedding.android.FlutterFragment: boolean popSystemNavigator()
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
io.sentry.rrweb.RRWebEventType: RRWebEventType(java.lang.String,int)
io.sentry.ObjectReader: java.util.List nextListOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.SentryOptions: void setTracesSampleRate(java.lang.Double)
io.sentry.ReplayController: io.sentry.protocol.SentryId getReplayId()
io.sentry.Breadcrumb: io.sentry.Breadcrumb graphqlDataLoader(java.lang.Iterable,java.lang.Class,java.lang.Class,java.lang.String)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onDetachedFromContentProvider()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
io.sentry.protocol.Request: void setQueryString(java.lang.String)
io.sentry.exception.SentryHttpClientException: SentryHttpClientException(java.lang.String)
io.sentry.android.replay.video.SimpleMp4FrameMuxer: boolean isStarted()
io.sentry.util.HintUtils: void lambda$runIfDoesNotHaveType$0(java.lang.Object)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
io.sentry.android.core.AndroidOptionsInitializer: AndroidOptionsInitializer()
io.sentry.android.core.SentryAndroid: void lambda$init$1(io.sentry.ILogger,android.content.Context,io.sentry.Sentry$OptionsConfiguration,io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryEnvelopeItemHeader$JsonKeys: SentryEnvelopeItemHeader$JsonKeys()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
io.sentry.SentryOptions: boolean isEnabled()
io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener: void onWindowFocusChanged(boolean)
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize getMaxRequestBodySize()
io.sentry.ProfilingTraceData: void readDeviceCpuFrequencies()
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.List access$100(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.sentry.ObjectReader: float nextFloat()
io.sentry.android.core.LifecycleWatcher: LifecycleWatcher(io.sentry.IHub,long,boolean,boolean)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.sentry.android.replay.util.TextAttributes: boolean equals(java.lang.Object)
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.lang.Class)
io.sentry.android.ndk.NdkScopeObserver: void setExtra(java.lang.String,java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
io.sentry.protocol.Request: java.lang.String access$102(io.sentry.protocol.Request,java.lang.String)
io.sentry.protocol.Device: java.lang.String access$202(io.sentry.protocol.Device,java.lang.String)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
io.sentry.clientreport.ClientReport$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.AnrV2EventProcessor: void setTrace(io.sentry.SentryEvent)
io.sentry.android.core.AndroidTransactionProfiler: void init()
io.sentry.android.replay.ReplayIntegration: ReplayIntegration(android.content.Context,io.sentry.transport.ICurrentDateProvider,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,io.sentry.android.replay.util.MainLooperHandler,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.android.core.internal.gestures.SentryGestureListener: java.lang.String getActivityName(android.app.Activity)
io.sentry.android.replay.capture.BufferCaptureStrategy: void deleteFile(java.io.File)
io.sentry.SentryBaseEvent$JsonKeys: SentryBaseEvent$JsonKeys()
io.sentry.android.replay.video.SimpleVideoEncoder: SimpleVideoEncoder(io.sentry.SentryOptions,io.sentry.android.replay.video.MuxerConfig,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SystemOutLogger: boolean isEnabled(io.sentry.SentryLevel)
io.sentry.TransactionContext: java.lang.Boolean getParentSampled()
io.sentry.Sentry: void reportFullDisplayed()
io.sentry.protocol.Geo: java.lang.String getRegion()
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
io.sentry.android.replay.util.TextLayout: int getLineVisibleEnd(int)
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean)
io.sentry.util.FileUtils: byte[] readBytesFromFile(java.lang.String,long)
io.sentry.DisabledQueue$1: java.lang.Object next()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
io.sentry.android.replay.util.TextAttributes: boolean component2()
io.sentry.Scope: void removeExtra(java.lang.String)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$JsonKeys: RRWebIncrementalSnapshotEvent$JsonKeys()
io.sentry.Scope: void setRequest(io.sentry.protocol.Request)
io.sentry.SentryOptions: void setMaxCacheItems(int)
io.sentry.clientreport.ClientReport$JsonKeys: ClientReport$JsonKeys()
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.internal.util.SentryFrameMetricsCollector getFrameMetricsCollector()
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
io.sentry.JsonDeserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.SentryException: io.sentry.protocol.Mechanism getMechanism()
io.sentry.android.replay.WindowRecorder: void stop()
io.sentry.flutter.SentryFlutter: void updateOptions(io.sentry.android.core.SentryAndroidOptions,java.util.Map)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.sentry.android.core.SpanFrameMetricsCollector: SpanFrameMetricsCollector(io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.internal.util.SentryFrameMetricsCollector)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.sentry.SentryOptions: boolean isEnableShutdownHook()
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.sentry.protocol.App: java.lang.String getStartType()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
io.sentry.clientreport.DiscardedEvent$Deserializer: java.lang.Exception missingRequiredFieldException(java.lang.String,io.sentry.ILogger)
io.sentry.protocol.SentryTransaction$Deserializer: io.sentry.protocol.SentryTransaction deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$2: void invoke(boolean)
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
io.sentry.cache.tape.ObjectQueue: io.sentry.cache.tape.ObjectQueue create(io.sentry.cache.tape.QueueFile,io.sentry.cache.tape.ObjectQueue$Converter)
io.sentry.android.core.SentryInitProvider: java.lang.String getType(android.net.Uri)
io.sentry.SpanOptions: SpanOptions()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter beginArray()
io.sentry.protocol.SentryPackage: int hashCode()
io.sentry.android.replay.ReplayCache: java.lang.String rotate(long)
io.sentry.ScopeObserverAdapter: void setTransaction(java.lang.String)
io.flutter.view.VsyncWaiter: VsyncWaiter(io.flutter.embedding.engine.FlutterJNI)
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.ProfilingTraceData onTransactionFinish(java.lang.String,java.lang.String,java.lang.String,boolean,java.util.List,io.sentry.SentryOptions)
io.sentry.Scope: io.sentry.Session getSession()
io.sentry.Hub: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.EnvelopeReader: io.sentry.SentryEnvelopeItemHeader deserializeEnvelopeItemHeader(byte[],int,int)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.sentry.metrics.NoopMetricsAggregator: void distribution(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.protocol.Response$JsonKeys: Response$JsonKeys()
io.sentry.android.replay.video.MuxerConfig: int getFrameRate()
io.sentry.protocol.SentryStackFrame: void setInstructionAddr(java.lang.String)
io.sentry.Session: long getSequenceTimestamp(java.util.Date)
io.sentry.protocol.Device: java.lang.Boolean access$902(io.sentry.protocol.Device,java.lang.Boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
io.flutter.embedding.android.FlutterActivity$1: void onBackInvoked()
io.sentry.cache.tape.ObjectQueue$Converter: java.lang.Object from(byte[])
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler access$000(io.flutter.embedding.engine.systemchannels.KeyboardChannel)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int getWidth()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter close(int,int,char)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int getHeight()
io.sentry.protocol.Device: java.lang.Integer getProcessorCount()
io.sentry.hints.Retryable: boolean isRetry()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: void runInBackground(kotlin.jvm.functions.Function0)
io.sentry.android.replay.RootViewsSpy: RootViewsSpy()
io.sentry.flutter.SentryFlutterPlugin: void addToMap(io.sentry.android.core.performance.TimeSpan,java.util.Map)
io.sentry.protocol.SentryTransaction: java.lang.Double access$202(io.sentry.protocol.SentryTransaction,java.lang.Double)
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
io.sentry.flutter.SentryFlutter: SentryFlutter()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$Deserializer: RRWebIncrementalSnapshotEvent$Deserializer()
io.sentry.android.replay.WindowSpy$windowField$2: java.lang.Object invoke()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] $values()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)
io.sentry.protocol.ViewHierarchyNode: java.lang.String getTag()
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmap$2: ScreenshotRecorder$singlePixelBitmap$2()
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
io.sentry.android.replay.WindowManagerSpy: java.lang.reflect.Field getMViewsField()
io.sentry.Scope$SessionPair: Scope$SessionPair(io.sentry.Session,io.sentry.Session)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
io.sentry.Hub: void removeTag(java.lang.String)
io.sentry.MainEventProcessor: void setModules(io.sentry.SentryEvent)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
io.sentry.IScope: void clearBreadcrumbs()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy: void pause()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: void setY(float)
io.sentry.metrics.NoopMetricsAggregator: void flush(boolean)
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.protocol.ViewHierarchy snapshotViewHierarchy(android.app.Activity,io.sentry.ILogger)
io.sentry.IPerformanceContinuousCollector: void clear()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler$-CC: void $default$setFrameworkHandlesBack(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.sentry.SentryOptions$BeforeEnvelopeCallback: void execute(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.protocol.Device: Device()
io.sentry.android.replay.util.AndroidTextLayout: int getLineStart(int)
io.sentry.NoOpTransaction: boolean isFinished()
io.flutter.plugin.editing.InputConnectionAdaptor: int clampIndexToEditable(int,android.text.Editable)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
io.sentry.protocol.Device: java.lang.Boolean isLowMemory()
io.sentry.flutter.SentryFlutter$updateOptions$19: void invoke(boolean)
io.sentry.config.PropertiesProvider$-CC: java.lang.Double $default$getDoubleProperty(io.sentry.config.PropertiesProvider,java.lang.String)
io.sentry.protocol.Contexts: void setTrace(io.sentry.SpanContext)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.sentry.SentryOptions: void setEnvelopeDiskCache(io.sentry.cache.IEnvelopeCache)
io.sentry.IScope: io.sentry.protocol.Contexts getContexts()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
io.sentry.DisabledQueue: java.lang.Object remove()
io.flutter.view.VsyncWaiter$1: android.view.Choreographer$FrameCallback obtainFrameCallback(long)
io.sentry.IScope: void clearAttachments()
io.sentry.ExternalOptions: void setEnableTracing(java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
io.sentry.protocol.SentrySpan: java.lang.String getOrigin()
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureException(java.lang.Throwable)
io.sentry.android.replay.video.MuxerConfig: io.sentry.android.replay.video.MuxerConfig copy$default(io.sentry.android.replay.video.MuxerConfig,java.io.File,int,int,int,int,java.lang.String,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler: void activateSystemCursor(java.lang.String)
io.flutter.embedding.android.FlutterFragment: void setFrameworkHandlesBack(boolean)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2(java.lang.String,java.lang.Object,java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy)
io.sentry.ProfilingTransactionData: java.lang.String access$002(io.sentry.ProfilingTransactionData,java.lang.String)
io.sentry.MonitorConfig: java.lang.Long getFailureIssueThreshold()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void offset(int,double,double)
io.flutter.embedding.android.AndroidTouchProcessor: float getVerticalScrollFactor(android.content.Context)
androidx.fragment.app.Fragment: void performAttach()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String access$402(io.sentry.rrweb.RRWebBreadcrumbEvent,java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger: void enableBufferingIncomingMessages()
io.flutter.plugin.editing.SpellCheckPlugin: SpellCheckPlugin(android.view.textservice.TextServicesManager,io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.sentry.Span: Span(io.sentry.TransactionContext,io.sentry.SentryTracer,io.sentry.IHub,io.sentry.SentryDate,io.sentry.SpanOptions)
io.sentry.vendor.gson.stream.JsonWriter: void setLenient(boolean)
io.sentry.protocol.SentryStackFrame: java.lang.String access$1402(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.flutter.plugin.common.ErrorLogResult: void notImplemented()
io.sentry.android.core.UserInteractionIntegration: void startTracking(android.app.Activity)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
io.sentry.JsonObjectWriter: JsonObjectWriter(java.io.Writer,int)
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter)
io.sentry.android.core.AnrV2Integration$AnrProcessor: void run()
io.sentry.NoOpSerializer: java.lang.String serialize(java.util.Map)
io.flutter.plugin.platform.PlatformViewsController: long configureForVirtualDisplay(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.SentryEnvelopeItemHeader: java.lang.String getContentType()
io.sentry.android.ndk.INativeScope: void removeExtra(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan getApplicationOnCreateTimeSpan()
io.sentry.internal.modules.ManifestModulesLoader: ManifestModulesLoader(io.sentry.ILogger)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray getOverlayLayerViews()
io.sentry.ProfilingTraceData: java.util.Date access$2502(io.sentry.ProfilingTraceData,java.util.Date)
io.sentry.clientreport.IClientReportRecorder: void recordLostEvent(io.sentry.clientreport.DiscardReason,io.sentry.DataCategory)
io.sentry.ProfilingTransactionData: java.lang.String getId()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.sentry.config.PropertiesProviderFactory: io.sentry.config.PropertiesProvider create()
io.sentry.Stack$StackItem: Stack$StackItem(io.sentry.Stack$StackItem)
io.sentry.android.core.ActivityLifecycleIntegration: void startTracing(android.app.Activity)
io.flutter.plugin.common.MethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterView$4: FlutterView$4(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
io.sentry.backpressure.BackpressureMonitor: BackpressureMonitor(io.sentry.SentryOptions,io.sentry.IHub)
io.sentry.MonitorSchedule: void setValue(java.lang.String)
io.sentry.SentryBaseEvent: void setThrowable(java.lang.Throwable)
io.sentry.android.replay.WindowRecorder$Companion: WindowRecorder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.sentry.android.core.ApplicationNotResponding: java.lang.Thread getThread()
io.sentry.ExternalOptions: void setProfilesSampleRate(java.lang.Double)
io.sentry.protocol.OperatingSystem: int hashCode()
io.sentry.SentryLockReason: SentryLockReason()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information valueOf(java.lang.String)
io.sentry.protocol.Gpu: java.lang.String getApiType()
io.sentry.cache.tape.FileObjectQueue$DirectByteArrayOutputStream: byte[] getArray()
io.sentry.android.core.SentryFrameMetrics: int getSlowFrameCount()
io.sentry.SentryBaseEvent: java.lang.String access$902(io.sentry.SentryBaseEvent,java.lang.String)
io.sentry.MetricsAggregator: MetricsAggregator(io.sentry.SentryOptions,io.sentry.metrics.IMetricsClient)
io.sentry.rrweb.RRWebInteractionMoveEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String getAppStartDesc(boolean)
io.sentry.ReplayController: void stop()
io.sentry.SentryReplayOptions: io.sentry.protocol.SdkVersion getSdkVersion()
io.sentry.android.core.InternalSentrySdk: io.sentry.IScope getCurrentScope()
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: int compareTo(io.sentry.android.core.performance.ActivityLifecycleTimeSpan)
io.sentry.CheckIn$JsonKeys: CheckIn$JsonKeys()
io.sentry.android.replay.video.SimpleVideoEncoder: android.media.MediaCodec getMediaCodec$sentry_android_replay_release()
io.sentry.rrweb.RRWebEvent: RRWebEvent(io.sentry.rrweb.RRWebEventType)
io.sentry.IHub: void setFingerprint(java.util.List)
io.sentry.android.replay.ScreenshotRecorderConfig: ScreenshotRecorderConfig(int,int,float,float,int,int)
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
io.flutter.embedding.android.FlutterSurfaceView: void resume()
io.sentry.flutter.SentryFlutter$updateOptions$8: void invoke(long)
io.sentry.flutter.BeforeSendCallbackImpl: BeforeSendCallbackImpl()
io.sentry.NoOpTransaction: void setContext(java.lang.String,java.lang.Object)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothGattService getPrimaryService(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)
io.sentry.util.CollectionUtils: boolean contains(java.lang.Object[],java.lang.Object)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
io.sentry.android.replay.RootViewsSpy$Companion: void install$lambda$1$lambda$0(io.sentry.android.replay.RootViewsSpy)
io.sentry.protocol.User: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
io.sentry.transport.ITransport: void send(io.sentry.SentryEnvelope)
io.sentry.clientreport.IClientReportStorage: java.util.List resetCountsAndGet()
io.sentry.NoOpHub: void captureUserFeedback(io.sentry.UserFeedback)
io.sentry.NoOpTransactionProfiler: io.sentry.NoOpTransactionProfiler getInstance()
io.sentry.android.core.NetworkBreadcrumbsIntegration$1: void run()
io.sentry.Hub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel)
io.sentry.protocol.ViewHierarchyNode: void setChildren(java.util.List)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistingExecutor$2: BaseCaptureStrategy$persistingExecutor$2()
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.ndk.DebugImagesLoader: java.util.Set filterImagesByAddresses(java.util.List,java.util.Set)
io.sentry.android.replay.ReplayIntegration: void onConnectionStatusChanged(io.sentry.IConnectionStatusProvider$ConnectionStatus)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
io.sentry.protocol.SentryThread: java.lang.Boolean isCurrent()
io.sentry.SpanContext: int hashCode()
io.sentry.JsonObjectDeserializer: boolean handleArrayOrMapEnd()
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
io.sentry.protocol.SentrySpan: java.util.Map getMetricsSummaries()
io.sentry.android.core.performance.TimeSpan: void start()
io.sentry.ExternalOptions: void setMaxRequestBodySize(io.sentry.SentryOptions$RequestSize)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.sentry.util.FileUtils: boolean deleteRecursively(java.io.File)
io.sentry.ScopeObserverAdapter: void setTags(java.util.Map)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
io.sentry.IHub: void clearBreadcrumbs()
io.sentry.protocol.SentryStackFrame: java.lang.String getInstructionAddr()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
io.sentry.NoOpLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Throwable)
io.sentry.SentryOptions: boolean isEnableAppStartProfiling()
io.sentry.flutter.SentryFlutterKt: void getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.sentry.protocol.SdkInfo$JsonKeys: SdkInfo$JsonKeys()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convertNetworkBreadcrumb(io.sentry.Breadcrumb)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.embedding.android.FlutterFragment: void onPause()
io.sentry.flutter.SentryFlutter$updateOptions$12: java.lang.Object invoke(java.lang.Object)
io.sentry.IHub: void bindClient(io.sentry.ISentryClient)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
io.sentry.android.ndk.NdkScopeObserver: void lambda$removeTag$3(java.lang.String)
io.sentry.android.replay.ReplayIntegration: void registerRootViewListeners()
io.sentry.vendor.gson.stream.JsonReader: void skipToEndOfLine()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: int hashCode()
io.sentry.SentryClient: io.sentry.SentryEvent executeBeforeSend(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.IScope: void addAttachment(io.sentry.Attachment)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean onMenuItemSelected(int,android.view.MenuItem)
io.sentry.Sentry: void removeTag(java.lang.String)
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.plugin.platform.PlatformPlugin: void access$900(io.flutter.plugin.platform.PlatformPlugin)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context)
io.sentry.Breadcrumb: java.lang.String getMessage()
io.sentry.Span: void setMeasurement(java.lang.String,java.lang.Number)
io.flutter.embedding.android.FlutterFragment: java.lang.String getCachedEngineGroupId()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel[] $values()
io.sentry.rrweb.RRWebSpanEvent: java.util.Map access$502(io.sentry.rrweb.RRWebSpanEvent,java.util.Map)
io.sentry.protocol.SentryStackFrame: void setPostContext(java.util.List)
io.flutter.embedding.engine.loader.ResourceExtractor: long getVersionCode(android.content.pm.PackageInfo)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void destroy()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType$Deserializer: RRWebInteractionEvent$InteractionType$Deserializer()
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
io.sentry.util.Random: int nextInt()
io.sentry.rrweb.RRWebVideoEvent: java.lang.String access$502(io.sentry.rrweb.RRWebVideoEvent,java.lang.String)
androidx.fragment.app.Fragment: android.view.View requireView()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: WindowCallbackAdapter(android.view.Window$Callback)
io.sentry.rrweb.RRWebBreadcrumbEvent: void setBreadcrumbType(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryOptions$Cron: SentryOptions$Cron()
io.sentry.vendor.gson.stream.JsonWriter: boolean isHtmlSafe()
io.sentry.JsonObjectDeserializer: java.lang.Object lambda$parse$0(io.sentry.JsonObjectReader)
io.sentry.android.replay.capture.SessionCaptureStrategy: void pause()
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator: java.lang.Object next()
io.sentry.FullyDisplayedReporter$FullyDisplayedReporterListener: void onFullyDrawn()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.sentry.NoOpScope: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.sentry.IHub: io.sentry.protocol.SentryId captureMessage(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: int access$1400(io.flutter.plugin.platform.PlatformViewsController,double)
io.sentry.Hub: void configureScope(io.sentry.ScopeCallback)
io.sentry.protocol.Request: java.util.Map access$502(io.sentry.protocol.Request,java.util.Map)
io.sentry.android.replay.capture.CaptureStrategy$DefaultImpls: void onScreenshotRecorded$default(io.sentry.android.replay.capture.CaptureStrategy,android.graphics.Bitmap,kotlin.jvm.functions.Function2,int,java.lang.Object)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: ViewHierarchyNode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $values()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Bitmap getSinglePixelBitmap()
io.sentry.JsonObjectDeserializer: java.lang.Object lambda$parse$2(io.sentry.JsonObjectReader)
io.sentry.NoOpHub: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext,io.sentry.TransactionOptions)
io.sentry.android.core.DeviceInfoUtil: io.sentry.protocol.Device$DeviceOrientation getOrientation()
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.LastSegmentData copy(io.sentry.android.replay.ScreenshotRecorderConfig,io.sentry.android.replay.ReplayCache,java.util.Date,int,long,io.sentry.SentryReplayEvent$ReplayType,java.lang.String,java.util.List)
io.flutter.plugin.platform.SingleViewWindowManager: void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.SendCachedEnvelopeIntegration: SendCachedEnvelopeIntegration(io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory,io.sentry.util.LazyEvaluator)
io.sentry.Span: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter)
io.sentry.ProfilingTransactionData: void setUnknown(java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.plugin.platform.SingleViewWindowManager: android.view.Display getDefaultDisplay()
io.sentry.HubAdapter: io.sentry.SentryTraceHeader traceHeaders()
io.sentry.android.core.EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration: EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration(io.sentry.android.core.EnvelopeFileObserverIntegration$1)
io.sentry.SpanId: SpanId()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.sentry.vendor.gson.stream.JsonReader: void endArray()
io.sentry.SentryOptions: void setSpotlightConnectionUrl(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.sentry.SentryBaseEvent: void removeTag(java.lang.String)
io.sentry.internal.debugmeta.NoOpDebugMetaLoader: NoOpDebugMetaLoader()
io.flutter.plugin.editing.ScribePlugin: void destroy()
io.sentry.SentryBaseEvent: io.sentry.protocol.DebugMeta access$1202(io.sentry.SentryBaseEvent,io.sentry.protocol.DebugMeta)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.ProfilingTransactionData: void setRelativeStartNs(java.lang.Long)
io.sentry.protocol.Request: Request()
io.sentry.OptionsContainer: java.lang.Object createInstance()
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPaused(android.app.Activity)
androidx.fragment.app.Fragment: void noteStateNotSaved()
io.sentry.profilemeasurements.ProfileMeasurementValue: java.util.Map getUnknown()
io.flutter.plugin.platform.PlatformViewsController: void translateMotionEvent(android.view.MotionEvent,android.view.MotionEvent$PointerCoords[])
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
io.sentry.android.core.performance.TimeSpan: void setDescription(java.lang.String)
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
io.flutter.util.ViewUtils: boolean lambda$childHasFocus$0(android.view.View)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
io.sentry.protocol.Message: java.util.Map getUnknown()
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivityResumed(android.app.Activity)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.sentry.cache.PersistingScopeObserver: void setTransaction(java.lang.String)
io.sentry.SentryTracer: java.lang.String getTag(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.android.replay.LastSegmentData: java.lang.String component7()
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map getData()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource access$000(io.sentry.rrweb.RRWebIncrementalSnapshotEvent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path getPath()
io.sentry.NoOpTransaction: void setThrowable(java.lang.Throwable)
io.sentry.transport.NoOpTransport: NoOpTransport()
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.sentry.SpanOptions: boolean isTrimEnd()
io.sentry.protocol.SentryStackFrame$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.protocol.ViewHierarchyNode: void setWidth(java.lang.Double)
io.sentry.Session$State: io.sentry.Session$State[] values()
io.sentry.protocol.DebugMeta$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.SdkVersion: int hashCode()
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmapCanvas$2: ScreenshotRecorder$singlePixelBitmapCanvas$2(io.sentry.android.replay.ScreenshotRecorder)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
io.flutter.embedding.android.FlutterFragmentActivity: android.view.View createFragmentContainer()
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(java.lang.Boolean)
io.sentry.protocol.OperatingSystem: void setName(java.lang.String)
io.sentry.NoOpScope: java.util.Map getExtras()
io.sentry.android.core.internal.util.CpuInfoUtils: CpuInfoUtils()
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
androidx.activity.OnBackPressedCallback: kotlin.jvm.functions.Function0 getEnabledChangedCallback$activity_release()
io.sentry.clientreport.ClientReportRecorder: void recordLostEnvelopeItem(io.sentry.clientreport.DiscardReason,io.sentry.SentryEnvelopeItem)
io.sentry.SpanContext: void setSamplingDecision(io.sentry.TracesSamplingDecision)
io.sentry.SpanStatus: io.sentry.SpanStatus[] $values()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.sentry.Hub: void captureUserFeedback(io.sentry.UserFeedback)
io.flutter.embedding.android.FlutterFragment: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.ProfilingTraceData: void setProfileId(java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void close()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: ApplicationInfoLoader()
io.sentry.Span: io.sentry.SpanContext getSpanContext()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
io.sentry.android.core.BuildConfig: BuildConfig()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.sentry.BaggageHeader: io.sentry.BaggageHeader fromBaggageAndOutgoingHeader(io.sentry.Baggage,java.util.List)
io.sentry.SentryEnvelopeItemHeader$Deserializer: SentryEnvelopeItemHeader$Deserializer()
io.sentry.JsonObjectReader: java.lang.Integer nextIntegerOrNull()
io.sentry.protocol.SdkInfo: SdkInfo()
io.sentry.SynchronizedCollection: int hashCode()
io.sentry.SentryEnvelopeItemHeader: java.lang.String getAttachmentType()
io.sentry.cache.PersistingScopeObserver: io.sentry.SentryOptions access$100(io.sentry.cache.PersistingScopeObserver)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: SentryGestureListener$ScrollState(io.sentry.android.core.internal.gestures.SentryGestureListener$1)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
io.sentry.IMetricsAggregator: void flush(boolean)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void captureLowMemoryBreadcrumb(long,java.lang.Integer)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState valueOf(java.lang.String)
io.sentry.clientreport.ClientReportKey: ClientReportKey(java.lang.String,java.lang.String)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceCreated(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.sentry.SentryTracer: void lambda$finish$2(io.sentry.IScope)
io.sentry.NoOpScope: java.lang.String getTransactionName()
io.flutter.embedding.engine.loader.FlutterLoader: void lambda$ensureInitializationCompleteAsync$1(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
io.sentry.IScopeObserver: void setReplayId(io.sentry.protocol.SentryId)
io.sentry.protocol.Geo: Geo(io.sentry.protocol.Geo)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap getActivitiesWithOngoingTransactions()
io.flutter.plugin.platform.PlatformViewWrapper: PlatformViewWrapper(android.content.Context,io.flutter.plugin.platform.PlatformViewRenderTarget)
io.flutter.embedding.engine.FlutterEngine: void updateDisplayMetrics(float,float,float)
io.sentry.SentryAutoDateProvider: boolean checkInstantAvailabilityAndPrecision()
io.sentry.Stack$StackItem: void setClient(io.sentry.ISentryClient)
io.sentry.ReplayRecording: java.lang.Integer getSegmentId()
io.sentry.rrweb.RRWebSpanEvent: java.util.Map getUnknown()
io.sentry.DateUtils: double nanosToSeconds(long)
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
io.sentry.SentryOptions: io.sentry.Instrumenter getInstrumenter()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
io.sentry.android.replay.capture.CaptureStrategy$Companion: CaptureStrategy$Companion()
io.sentry.ProfilingTraceData: java.util.List getTransactions()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
io.sentry.NoOpScope: void clearBreadcrumbs()
io.sentry.DisabledQueue: int size()
io.sentry.android.core.MainLooperHandler: void post(java.lang.Runnable)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.CircularFifoQueue: void readObject(java.io.ObjectInputStream)
io.sentry.MainEventProcessor: io.sentry.HostnameCache getHostnameCache()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onDetachedFromActivityForConfigChanges()
io.sentry.profilemeasurements.ProfileMeasurement: ProfileMeasurement()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean access$302(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3: ReplayIntegration$onScreenshotRecorded$3(java.io.File,long,io.sentry.android.replay.ReplayIntegration)
io.sentry.vendor.gson.stream.JsonReader: void setLenient(boolean)
io.sentry.protocol.App: java.lang.String access$302(io.sentry.protocol.App,java.lang.String)
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromProfilingTrace(io.sentry.ProfilingTraceData,long,io.sentry.ISerializer)
io.sentry.TraceContext$TraceContextUser$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.dart.DartExecutor: int getPendingChannelResponseCount()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.SentryEnvelopeItemHeader: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.internal.modules.ManifestModulesLoader$Module: java.lang.String access$100(io.sentry.internal.modules.ManifestModulesLoader$Module)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.sentry.Session: io.sentry.Session$State getStatus()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.CheckIn: CheckIn(io.sentry.protocol.SentryId,java.lang.String,java.lang.String)
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: boolean isViewTappable(android.view.View)
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: boolean equals(java.lang.Object)
io.sentry.Session: java.util.UUID getSessionId()
io.sentry.SentryEnvelopeHeader$JsonKeys: SentryEnvelopeHeader$JsonKeys()
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
io.sentry.flutter.SentryFlutter$updateOptions$24$1: SentryFlutter$updateOptions$24$1(kotlin.jvm.internal.Ref$ObjectRef)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.sentry.android.core.SentryFrameMetrics: SentryFrameMetrics()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.android.core.DeviceInfoUtil lambda$new$0(io.sentry.android.core.SentryAndroidOptions)
androidx.activity.OnBackPressedCallback: void remove()
io.sentry.rrweb.RRWebEvent$Serializer: RRWebEvent$Serializer()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean dispatchTrackballEvent(android.view.MotionEvent)
io.sentry.config.CompositePropertiesProvider: java.util.Map getMap(java.lang.String)
io.flutter.embedding.android.FlutterActivity: void updateSystemUiOverlays()
io.flutter.embedding.android.KeyboardManager$Responder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.flutter.SentryFlutter$updateOptions$21: SentryFlutter$updateOptions$21(io.sentry.flutter.SentryFlutter)
io.sentry.Sentry: java.lang.Boolean isCrashedLastRun()
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$2600(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
io.sentry.protocol.App$Deserializer: App$Deserializer()
io.sentry.IScope: io.sentry.protocol.Request getRequest()
io.sentry.android.replay.util.FixedWindowCallback: boolean onMenuItemSelected(int,android.view.MenuItem)
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.protocol.ViewHierarchyNode viewToNode(android.view.View)
io.sentry.IHub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel,io.sentry.ScopeCallback)
io.sentry.protocol.SentryTransaction: java.util.Map getMetricSummaries()
io.sentry.android.core.EnvelopeFileObserverIntegration: io.sentry.android.core.EnvelopeFileObserverIntegration getOutboxFileObserver()
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceDestroyed(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter beginObject()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: int access$002(io.sentry.rrweb.RRWebInteractionMoveEvent$Position,int)
io.sentry.protocol.SentryTransaction$Deserializer: SentryTransaction$Deserializer()
io.sentry.SentryThreadFactory: java.util.List getCurrentThreads(java.util.List,boolean)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
androidx.preference.internal.PreferenceImageView: int getMaxWidth()
io.sentry.flutter.BeforeSendCallbackImpl: void setEventEnvironmentTag(io.sentry.SentryEvent,java.lang.String,java.lang.String)
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type[] $values()
io.sentry.JsonObjectReader: void nextUnknown(io.sentry.ILogger,java.util.Map,java.lang.String)
io.sentry.Sentry: void lambda$initConfigurations$5(java.io.File)
io.sentry.protocol.App: int hashCode()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void finalize()
io.sentry.SentryEvent: void removeModule(java.lang.String)
io.sentry.FullyDisplayedReporter: io.sentry.FullyDisplayedReporter getInstance()
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromMetrics(io.sentry.metrics.EncodedMetrics)
io.sentry.android.core.performance.AppStartMetrics: void checkCreateTimeOnMain()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
io.sentry.android.core.InternalSentrySdk: java.util.Map serializeScope(android.content.Context,io.sentry.android.core.SentryAndroidOptions,io.sentry.IScope)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter endObject()
io.sentry.DateUtils: double millisToSeconds(double)
io.sentry.SentryOptions$ProfilesSamplerCallback: java.lang.Double sample(io.sentry.SamplingContext)
io.sentry.rrweb.RRWebMetaEvent: java.util.Map getDataUnknown()
io.sentry.IHub$-CC: io.sentry.ITransaction $default$startTransaction(io.sentry.IHub,java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$2: void onResume(androidx.lifecycle.LifecycleOwner)
io.sentry.flutter.SentryFlutterPlugin$Companion: SentryFlutterPlugin$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.android.core.ActivityLifecycleIntegration: ActivityLifecycleIntegration(android.app.Application,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.ActivityFramesTracker)
io.sentry.android.replay.ReplayCache: void addFrame(java.io.File,long,java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$15: java.lang.Object invoke(java.lang.Object)
io.sentry.transport.RateLimiter: void applyRetryAfterOnlyIfLonger(io.sentry.DataCategory,java.util.Date)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRenderTarget makePlatformViewRenderTarget(io.flutter.view.TextureRegistry)
io.sentry.MonitorContexts$Deserializer: MonitorContexts$Deserializer()
io.sentry.protocol.Device: void setBatteryTemperature(java.lang.Float)
io.flutter.view.FlutterRunArguments: FlutterRunArguments()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter jsonValue(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet)
io.sentry.SentryEnvelope: io.sentry.SentryEnvelope from(io.sentry.ISerializer,io.sentry.Session,io.sentry.protocol.SdkVersion)
io.sentry.android.core.ActivityBreadcrumbsIntegration: ActivityBreadcrumbsIntegration(android.app.Application)
io.flutter.embedding.android.FlutterFragment: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: java.io.FileOutputStream create(java.io.FileOutputStream,java.lang.String)
io.sentry.android.core.SentryLogcatAdapter: int w(java.lang.String,java.lang.Throwable)
io.sentry.protocol.SentryRuntime: java.lang.String access$202(io.sentry.protocol.SentryRuntime,java.lang.String)
io.sentry.protocol.ViewHierarchy$Deserializer: io.sentry.protocol.ViewHierarchy deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
io.sentry.android.core.AndroidOptionsInitializer: java.lang.String getSentryReleaseVersion(android.content.pm.PackageInfo,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void lambda$new$1(android.graphics.SurfaceTexture)
io.sentry.SentryReplayOptions: boolean isSessionReplayForErrorsEnabled()
io.sentry.internal.gestures.GestureTargetLocator: io.sentry.internal.gestures.UiElement locate(java.lang.Object,float,float,io.sentry.internal.gestures.UiElement$Type)
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.List getPositions()
io.sentry.flutter.SentryFlutter$updateOptions$10: SentryFlutter$updateOptions$10(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.sentry.protocol.Device: void setModel(java.lang.String)
io.sentry.util.MapObjectReader: void endArray()
io.sentry.util.StringUtils: java.lang.String camelCase(java.lang.String)
io.sentry.protocol.SentryRuntime: void setRawDescription(java.lang.String)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2220(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$1: SentryFrameMetricsCollector$1()
io.sentry.protocol.SentryStackTrace: void setRegisters(java.util.Map)
io.sentry.protocol.Device: void setScreenDpi(java.lang.Integer)
io.sentry.cache.tape.ObjectQueue: int size()
io.sentry.MainEventProcessor: void setTags(io.sentry.SentryBaseEvent)
io.sentry.protocol.Request: java.util.Map access$602(io.sentry.protocol.Request,java.util.Map)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(double)
io.sentry.android.replay.capture.SessionCaptureStrategy: io.sentry.IHub access$getHub$p(io.sentry.android.replay.capture.SessionCaptureStrategy)
io.sentry.android.ndk.NdkScopeObserver: NdkScopeObserver(io.sentry.SentryOptions,io.sentry.android.ndk.INativeScope)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getHint()
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
io.sentry.SentryEnvelopeItem: io.sentry.clientreport.ClientReport getClientReport(io.sentry.ISerializer)
io.sentry.protocol.SentryStackFrame: void setColno(java.lang.Integer)
io.sentry.cache.PersistingScopeObserver: void lambda$setLevel$8(io.sentry.SentryLevel)
io.sentry.protocol.Gpu: java.lang.Integer getMemorySize()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.sentry.android.replay.ScreenshotRecorderCallback: void onScreenshotRecorded(java.io.File,long)
io.sentry.android.replay.util.NodesKt: float fastCoerceAtMost(float,float)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setAutomaticallyRegisterPlugins(boolean)
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.SentryNanotimeDate: long diff(io.sentry.SentryDate)
io.sentry.SentryOptions: void setDateProvider(io.sentry.SentryDateProvider)
io.sentry.rrweb.RRWebEventType$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.metrics.GaugeMetric: java.lang.Iterable serialize()
io.sentry.ObjectWriter: io.sentry.ObjectWriter beginArray()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap bmBluetoothDevice(android.bluetooth.BluetoothDevice)
io.sentry.EnvelopeSender: void safeDelete(java.io.File,java.lang.String)
io.sentry.cache.tape.ObjectQueue: java.lang.Object peek()
io.sentry.Scope: io.sentry.SentryLevel getLevel()
io.sentry.ISentryExecutorService: java.util.concurrent.Future schedule(java.lang.Runnable,long)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
io.sentry.android.core.ContextUtils: android.content.pm.ApplicationInfo lambda$static$6(android.content.Context)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
io.sentry.Baggage: void setTraceId(java.lang.String)
io.sentry.EventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.SentryOptions: java.lang.Double getProfilesSampleRate()
io.sentry.android.core.ContextUtils: android.util.DisplayMetrics getDisplayMetrics(android.content.Context,io.sentry.ILogger)
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
io.sentry.internal.modules.ManifestModulesLoader: io.sentry.internal.modules.ManifestModulesLoader$Module convertOriginalNameToModule(java.lang.String)
io.sentry.SpanId: SpanId(java.lang.String)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] values()
io.sentry.OutboxSender: void lambda$processFile$0(java.io.File,io.sentry.hints.Retryable)
io.sentry.SentryOptions: void setIgnoredCheckIns(java.util.List)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAutoActivityLifecycleTracing()
io.sentry.SentryAppStartProfilingOptions: void setUnknown(java.util.Map)
io.sentry.android.core.SentryFrameMetrics: int getFrozenFrameCount()
io.sentry.cache.tape.FileObjectQueue: java.lang.Object peek()
io.sentry.SentryLockReason: int getType()
io.sentry.TransactionPerformanceCollector: void onSpanFinished(io.sentry.ISpan)
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: float access$502(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState,float)
io.sentry.util.TracingUtils: void lambda$maybeUpdateBaggage$3(io.sentry.SentryOptions,io.sentry.IScope,io.sentry.PropagationContext)
io.sentry.SentryStackTraceFactory: boolean lambda$getInAppCallStack$0(io.sentry.protocol.SentryStackFrame)
io.sentry.util.UrlUtils$UrlDetails: void applyToRequest(io.sentry.protocol.Request)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: io.sentry.android.replay.util.TextLayout getLayout()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $values()
io.sentry.android.replay.capture.BufferCaptureStrategy$captureReplay$2: void invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment)
io.sentry.android.core.performance.AppStartMetrics: java.util.List getActivityLifecycleTimeSpans()
io.sentry.android.core.AndroidMemoryCollector: AndroidMemoryCollector()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder withNewEngineInGroup(java.lang.String)
io.sentry.SentryBaseEvent: io.sentry.protocol.DebugMeta getDebugMeta()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$1: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$1(kotlin.jvm.functions.Function0)
io.sentry.IHub: io.sentry.metrics.MetricsApi metrics()
io.sentry.protocol.Device: java.lang.String[] access$602(io.sentry.protocol.Device,java.lang.String[])
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.sentry.protocol.Mechanism: void setSynthetic(java.lang.Boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.sentry.transport.ITransport: void flush(long)
io.sentry.SentryEnvelopeItemHeader: java.util.Map getUnknown()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: long getTimeOffset()
io.sentry.util.TracingUtils: TracingUtils()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
io.sentry.NoOpSentryClient: io.sentry.transport.RateLimiter getRateLimiter()
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
io.sentry.android.core.ActivityFramesTracker: void lambda$addActivity$0(android.app.Activity)
io.sentry.android.replay.GeneratedVideo: int component2()
io.sentry.transport.ITransport$-CC: void $default$send(io.sentry.transport.ITransport,io.sentry.SentryEnvelope)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
io.sentry.TraceContext: java.util.Map getUnknown()
io.sentry.SpanStatus$Deserializer: io.sentry.SpanStatus deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.rrweb.RRWebInteractionEvent: int access$402(io.sentry.rrweb.RRWebInteractionEvent,int)
io.sentry.flutter.SentryFlutterReplayRecorder: void stop$lambda$3(io.sentry.flutter.SentryFlutterReplayRecorder)
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion createSdkVersion()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivityDestroyed(android.app.Activity)
io.sentry.ProfilingTraceData: java.lang.String access$1102(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.replay.capture.SessionCaptureStrategy$Companion: SessionCaptureStrategy$Companion()
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken valueOf(java.lang.String)
io.sentry.SentryTracer: java.lang.Object getData(java.lang.String)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
io.sentry.SentryEnvelopeHeader: SentryEnvelopeHeader(io.sentry.protocol.SentryId)
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(io.sentry.instrumentation.file.FileOutputStreamInitData,java.io.FileDescriptor,io.sentry.instrumentation.file.SentryFileOutputStream$1)
io.sentry.flutter.BeforeSendCallbackImpl: void setEventEnvironmentTag$default(io.sentry.flutter.BeforeSendCallbackImpl,io.sentry.SentryEvent,java.lang.String,java.lang.String,int,java.lang.Object)
io.sentry.android.core.IDebugImagesLoader: java.util.List loadDebugImages()
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.sentry.DateUtils: double nanosToMillis(double)
io.sentry.OutboxSender: void logTimeout(io.sentry.protocol.SentryId)
io.sentry.flutter.SentryFlutter$updateOptions$26: java.lang.Object invoke(java.lang.Object)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
io.sentry.protocol.Device: java.lang.String access$102(io.sentry.protocol.Device,java.lang.String)
io.sentry.Sentry: io.sentry.IHub getCurrentHub()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: io.sentry.Breadcrumb createBreadcrumb(java.lang.String)
io.sentry.protocol.SentryThread$Deserializer: SentryThread$Deserializer()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
io.sentry.ISerializer: java.lang.Object deserializeCollection(java.io.Reader,java.lang.Class,io.sentry.JsonDeserializer)
io.sentry.protocol.OperatingSystem: java.lang.String getName()
io.sentry.protocol.SentryException: java.lang.String access$002(io.sentry.protocol.SentryException,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: void lambda$ensureInitializationCompleteAsync$0(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager$-CC: void $default$removeOnFrameMetricsAvailableListener(io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager,android.view.Window,android.view.Window$OnFrameMetricsAvailableListener)
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
io.sentry.protocol.Device: void setFamily(java.lang.String)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureMessage(io.sentry.ISentryClient,java.lang.String,io.sentry.SentryLevel,io.sentry.IScope)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: void invoke()
io.sentry.ObjectWriter: io.sentry.ObjectWriter endArray()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
io.sentry.android.core.NoOpDebugImagesLoader: java.util.List loadDebugImages()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
io.sentry.Baggage: java.lang.String getPublicKey()
io.sentry.Sentry: void init(java.lang.String)
io.sentry.Sentry: void captureUserFeedback(io.sentry.UserFeedback)
io.sentry.android.core.AnrV2EventProcessor: void setFingerprints(io.sentry.SentryEvent,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
io.sentry.SentryBaseEvent: void setBreadcrumbs(java.util.List)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(boolean)
io.sentry.DefaultTransactionPerformanceCollector: void close()
io.sentry.cache.tape.QueueFile: int size()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
io.sentry.NoOpSentryExecutorService: io.sentry.ISentryExecutorService getInstance()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.sentry.Sentry: void init(io.sentry.Sentry$OptionsConfiguration)
io.sentry.NoOpSpan: void setOperation(java.lang.String)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
io.sentry.protocol.Device$Deserializer: io.sentry.protocol.Device deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.NoOpScope: io.sentry.Scope$SessionPair startSession()
io.sentry.android.core.NdkHandlerStrategy: NdkHandlerStrategy(java.lang.String,int,int)
io.sentry.IHub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.Baggage: void setSampleRate(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: boolean access$1200(io.flutter.plugin.platform.PlatformPlugin)
io.sentry.SentryOptions: void setMaxTraceFileSize(long)
io.sentry.rrweb.RRWebSpanEvent$Deserializer: void deserializePayload(io.sentry.rrweb.RRWebSpanEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryTracer: void scheduleFinish()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getLabel()
io.sentry.android.replay.capture.SessionCaptureStrategy: void captureReplay(boolean,kotlin.jvm.functions.Function1)
io.sentry.android.replay.SentryReplayModifiers$SentryPrivacy$1: SentryReplayModifiers$SentryPrivacy$1()
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason[] values()
io.sentry.android.core.ActivityFramesTracker: io.sentry.android.core.ActivityFramesTracker$FrameCounts diffFrameCountsAtEnd(android.app.Activity)
io.sentry.android.replay.capture.CaptureStrategy$Companion: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment createSegment(io.sentry.IHub,io.sentry.SentryOptions,long,java.util.Date,io.sentry.protocol.SentryId,int,int,int,io.sentry.SentryReplayEvent$ReplayType,io.sentry.android.replay.ReplayCache,int,int,java.lang.String,java.util.List,java.util.Deque)
io.sentry.android.core.internal.util.ScreenshotUtils: byte[] takeScreenshot(android.app.Activity,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener: void onIsolateServiceIdAvailable(java.lang.String)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[],boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine access$100(io.flutter.embedding.android.FlutterView)
io.sentry.protocol.ViewHierarchy: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.profilemeasurements.ProfileMeasurementValue: int hashCode()
io.sentry.Sentry: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.ScopeCallback)
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor start()
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration: EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration()
io.sentry.transport.RateLimiter: RateLimiter(io.sentry.transport.ICurrentDateProvider,io.sentry.SentryOptions)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
io.sentry.Session: java.lang.String getIpAddress()
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
io.sentry.Attachment: java.lang.String getPathname()
io.sentry.CircularFifoQueue: boolean isFull()
io.sentry.SentryOptions$Proxy: java.lang.String getPass()
io.sentry.protocol.User: java.lang.String getEmail()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ScribeChannel getScribeChannel()
io.flutter.plugin.platform.PlatformViewRenderTarget: void release()
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.MonitorSchedule: java.lang.String getUnit()
io.sentry.SentryReplayEvent: java.io.File getVideoFile()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: ViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: java.util.Map getRegisteredCallbacks()
io.flutter.embedding.android.FlutterFragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.sentry.protocol.Mechanism$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
io.sentry.android.replay.util.FixedWindowCallback: android.view.View onCreatePanelView(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.sentry.IHub: void popScope()
io.sentry.ISerializer: java.lang.Object deserialize(java.io.Reader,java.lang.Class)
io.sentry.hints.AbnormalExit: boolean ignoreCurrentThread()
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Matrix getPrescaledMatrix()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.HubAdapter: java.lang.Object clone()
io.sentry.Instrumenter: io.sentry.Instrumenter valueOf(java.lang.String)
io.sentry.CheckInStatus: io.sentry.CheckInStatus[] values()
io.sentry.protocol.SentryThread: void setMain(java.lang.Boolean)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.plugin.platform.VirtualDisplayController: void clearSurface()
io.sentry.android.ndk.NativeScope: void nativeSetUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.ExternalOptions: java.lang.String getDist()
io.sentry.EnvelopeSender: void processEnvelopeFile(java.lang.String,io.sentry.Hint)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
io.sentry.SentryEnvelopeItem: byte[] lambda$fromAttachment$15(io.sentry.Attachment,long,io.sentry.ISerializer,io.sentry.ILogger)
io.sentry.android.core.AnrV2Integration: void close()
io.sentry.android.core.AnrV2EventProcessor: void setExtras(io.sentry.SentryBaseEvent)
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.SentryOptions access$getOptions$p(io.sentry.android.replay.capture.BaseCaptureStrategy)
io.flutter.util.Predicate: boolean test(java.lang.Object)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $values()
io.sentry.IScope: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
io.sentry.instrumentation.file.SentryFileOutputStream: java.lang.Integer lambda$write$2(byte[],int,int)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.sentry.transport.StdoutTransport: void send(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.CheckIn: void setEnvironment(java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableRootCheck()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void success(java.lang.Object)
io.sentry.Attachment: java.lang.String getFilename()
io.sentry.android.core.NetworkBreadcrumbsIntegration: java.lang.Object access$100(io.sentry.android.core.NetworkBreadcrumbsIntegration)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
io.sentry.SentryLockReason: java.lang.String access$302(io.sentry.SentryLockReason,java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.sentry.protocol.Response$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryEvent: java.util.List getExceptions()
io.sentry.util.StringUtils: java.lang.String removeSurrounding(java.lang.String,java.lang.String)
io.sentry.SentryOptions: long getFlushTimeoutMillis()
io.sentry.SentryReplayOptions: long getErrorReplayDuration()
io.sentry.HostnameCache: java.lang.String getHostname()
io.sentry.IHub: void setUser(io.sentry.protocol.User)
io.sentry.android.replay.video.SimpleVideoEncoder: void start()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.protocol.SentryException: java.lang.String access$102(io.sentry.protocol.SentryException,java.lang.String)
io.sentry.protocol.Device: void setCharging(java.lang.Boolean)
androidx.core.widget.NestedScrollView: int getScrollRange()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
io.sentry.Hub: void setSpanContext(java.lang.Throwable,io.sentry.ISpan,java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
io.sentry.MonitorConfig$JsonKeys: MonitorConfig$JsonKeys()
io.sentry.protocol.Gpu$Deserializer: io.sentry.protocol.Gpu deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.CircularFifoQueue: java.lang.Object[] access$400(io.sentry.CircularFifoQueue)
io.sentry.SentryIntegrationPackageStorage: void addPackage(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2212(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.sentry.cache.PersistingOptionsObserver: void store(java.lang.Object,java.lang.String)
io.sentry.internal.modules.ModulesLoader: java.util.Map parseStream(java.io.InputStream)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(io.sentry.ILogger,java.lang.Object)
io.sentry.Sentry: io.sentry.TransactionContext continueTrace(java.lang.String,java.util.List)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
io.sentry.ExternalOptions: void setEnabled(java.lang.Boolean)
io.sentry.android.core.SentryAndroid: void lambda$init$2(java.util.concurrent.atomic.AtomicBoolean,io.sentry.IScope)
io.sentry.NoOpHub: void flush(long)
io.sentry.Hint: io.sentry.Attachment getThreadDump()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
io.sentry.PropagationContext: void setSampled(java.lang.Boolean)
io.sentry.protocol.DebugImage: void setCodeFile(java.lang.String)
io.sentry.backpressure.NoOpBackpressureMonitor: int getDownsampleFactor()
io.sentry.transport.StdoutTransport: StdoutTransport(io.sentry.ISerializer)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.SpanOptions: void setTrimEnd(boolean)
io.sentry.util.TracingUtils: io.sentry.util.TracingUtils$TracingHeaders trace(io.sentry.IHub,java.util.List,io.sentry.ISpan)
io.sentry.SentryTracer: java.util.concurrent.atomic.AtomicBoolean isDeadlineTimerRunning()
io.sentry.CheckIn: java.lang.String getRelease()
io.sentry.SentryOptions: java.lang.String getServerName()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.sentry.Scope: void setExtra(java.lang.String,java.lang.String)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation valueOf(java.lang.String)
io.sentry.SentryTracer: void lambda$finish$1(io.sentry.IScope,io.sentry.ITransaction)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler: void onFrameworkResponse(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
io.sentry.DateUtils: java.util.Date getDateTime(java.lang.String)
io.sentry.protocol.Request: java.util.Map getEnvs()
io.sentry.util.MapObjectReader: void endObject()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.graphics.SurfaceTexture getSurfaceTexture()
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
androidx.fragment.app.Fragment: void setPopDirection(boolean)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
io.sentry.android.core.DeviceInfoUtil: java.util.Date getBootTime()
io.sentry.ObjectReader: java.util.Map nextMapOfListOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.rrweb.RRWebVideoEvent: RRWebVideoEvent()
io.sentry.android.core.ManifestMetadataReader: android.os.Bundle getMetadata(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.android.replay.RootViewsSpy$Companion$install$1$1$1: java.lang.Object invoke(java.lang.Object)
io.sentry.rrweb.RRWebSpanEvent$Deserializer: io.sentry.rrweb.RRWebSpanEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.android.KeyEmbedderResponder: long keyOfPlane(long,long)
io.sentry.protocol.User: void setSegment(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$1: SentryFlutter$updateOptions$1(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: java.util.List getIntegrations()
io.sentry.util.MapObjectWriter: java.util.Map peekObject()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
io.sentry.SentryBaseEvent: java.util.Map access$402(io.sentry.SentryBaseEvent,java.util.Map)
io.sentry.config.PropertiesProvider$-CC: java.lang.Long $default$getLongProperty(io.sentry.config.PropertiesProvider,java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$2400(int)
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.IHub access$getHub$p(io.sentry.android.replay.capture.BufferCaptureStrategy)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.sentry.NoOpScope: void withTransaction(io.sentry.Scope$IWithTransaction)
io.sentry.Session: void end()
io.sentry.IScopeObserver: void removeExtra(java.lang.String)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypointArgs(java.util.List)
io.sentry.rrweb.RRWebInteractionEvent: int getPointerId()
io.sentry.android.core.internal.gestures.ViewUtils: java.lang.String getResourceIdWithFallback(android.view.View)
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
io.sentry.rrweb.RRWebOptionsEvent: void setOptionsPayload(java.util.Map)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.sentry.flutter.SentryFlutter$updateOptions$16: void invoke(boolean)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.sentry.android.core.CurrentActivityIntegration: void onActivityDestroyed(android.app.Activity)
io.sentry.Hub: io.sentry.TransactionContext continueTrace(java.lang.String,java.util.List)
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: SettingsChannel$ConfigurationQueue$1(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue,io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration)
io.sentry.Span: java.lang.Object getData(java.lang.String)
io.sentry.Breadcrumb: io.sentry.SentryLevel getLevel()
io.sentry.protocol.Device: void setCpuDescription(java.lang.String)
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
io.sentry.android.replay.capture.BaseCaptureStrategy: void setSegmentTimestamp(java.util.Date)
io.sentry.android.ndk.SentryNdk: void close()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.sentry.cache.tape.QueueFile: boolean isAtFullCapacity()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture: boolean cancel(boolean)
io.sentry.rrweb.RRWebVideoEvent: int getLeft()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean access$1300(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,java.util.List,java.lang.String)
io.sentry.exception.ExceptionMechanismException: java.lang.Throwable getThrowable()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: android.content.Intent build(android.content.Context)
io.sentry.metrics.CounterMetric: CounterMetric(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.IOptionsObserver: void setSdkVersion(io.sentry.protocol.SdkVersion)
io.sentry.SpanId: SpanId(java.util.UUID)
io.sentry.NoOpHub: void addBreadcrumb(io.sentry.Breadcrumb)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
io.sentry.protocol.Device: java.lang.Long access$1702(io.sentry.protocol.Device,java.lang.Long)
io.sentry.ProfilingTraceData: ProfilingTraceData(io.sentry.ProfilingTraceData$1)
io.sentry.Hint: java.lang.Object getAs(java.lang.String,java.lang.Class)
io.sentry.SentryTracer: void cancelDeadlineTimer()
io.sentry.Breadcrumb: io.sentry.Breadcrumb graphqlOperation(java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
io.sentry.flutter.SentryFlutter$updateOptions$16: SentryFlutter$updateOptions$16(io.sentry.android.core.SentryAndroidOptions)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
io.sentry.hints.SubmissionResult: void setResult(boolean)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder flutterShellArgs(io.flutter.embedding.engine.FlutterShellArgs)
io.sentry.protocol.Device: java.lang.String getBrand()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.SentryOptions: void addIntegration(io.sentry.Integration)
io.sentry.flutter.SentryFlutter$updateOptions$17: SentryFlutter$updateOptions$17(io.sentry.android.core.SentryAndroidOptions)
io.sentry.Sentry: void applyOptionsConfiguration(io.sentry.Sentry$OptionsConfiguration,io.sentry.SentryOptions)
io.sentry.android.core.internal.util.AndroidCurrentDateProvider: long getCurrentTimeMillis()
io.sentry.protocol.Device: void setExternalStorageSize(java.lang.Long)
io.sentry.ScopeObserverAdapter: void removeExtra(java.lang.String)
io.sentry.metrics.MetricsApi$IMetricsInterface: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.sentry.IHub: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
io.sentry.transport.ReusableCountLatch$Sync: void access$100(io.sentry.transport.ReusableCountLatch$Sync)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: SettingsChannel$ConfigurationQueue$SentConfiguration(android.util.DisplayMetrics)
io.sentry.Hub: void setTag(java.lang.String,java.lang.String)
io.sentry.exception.InvalidSentryTraceHeaderException: java.lang.String getSentryTraceHeader()
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.RenderMode getRenderMode()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
io.sentry.IScopeObserver: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.android.replay.Recorder: void stop()
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
io.sentry.flutter.SentryFlutter$updateOptions$19: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.SpanFrameMetricsCollector: void clear()
io.sentry.ProfilingTraceData: java.lang.String getEnvironment()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
io.sentry.Instrumenter: Instrumenter(java.lang.String,int)
io.sentry.ScopeObserverAdapter: void setUser(io.sentry.protocol.User)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: java.lang.String getConnectionType()
io.sentry.NoOpScope: void setExtra(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate: void asyncWaitForVsync(long)
io.sentry.Span: Span(io.sentry.protocol.SentryId,io.sentry.SpanId,io.sentry.SentryTracer,java.lang.String,io.sentry.IHub,io.sentry.SentryDate,io.sentry.SpanOptions,io.sentry.SpanFinishedCallback)
io.sentry.protocol.User: java.lang.String getUsername()
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
io.sentry.ObjectReader: java.util.Date nextDateOrNull(io.sentry.ILogger)
io.sentry.rrweb.RRWebInteractionEvent: RRWebInteractionEvent()
io.sentry.protocol.DebugImage: void setCodeId(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.sentry.NoOpTransactionPerformanceCollector: void onSpanStarted(io.sentry.ISpan)
io.sentry.android.replay.util.AndroidTextLayout: float getPrimaryHorizontal(int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.sentry.android.core.ContextUtils: java.lang.String getVersionCode(android.content.pm.PackageInfo,io.sentry.android.core.BuildInfoProvider)
io.sentry.backpressure.BackpressureMonitor: void checkHealth()
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
io.sentry.SentryTracer: SentryTracer(io.sentry.TransactionContext,io.sentry.IHub,io.sentry.TransactionOptions)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
io.flutter.embedding.engine.systemchannels.ScribeChannel: void access$200(io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.rrweb.RRWebInteractionEvent: void setId(int)
io.sentry.NoOpSentryExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$JsonKeys: RRWebInteractionMoveEvent$Position$JsonKeys()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
io.sentry.Attachment: Attachment(java.lang.String)
io.sentry.SpanContext: io.sentry.TracesSamplingDecision getSamplingDecision()
io.sentry.android.R: R()
io.sentry.ProfilingTraceData: java.lang.String access$902(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.NoOpSentryClient: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.android.replay.capture.CaptureStrategy: void stop()
io.sentry.ITransaction: io.sentry.protocol.SentryId getEventId()
io.sentry.android.replay.util.PersistableLinkedList: void persistRecording$lambda$1(io.sentry.android.replay.util.PersistableLinkedList,io.sentry.ReplayRecording,io.sentry.android.replay.ReplayCache)
io.sentry.Breadcrumb: java.lang.String access$002(io.sentry.Breadcrumb,java.lang.String)
io.sentry.android.replay.RootViewsSpy: java.util.concurrent.CopyOnWriteArrayList getListeners()
io.sentry.util.thread.NoOpMainThreadChecker: boolean isMainThread(io.sentry.protocol.SentryThread)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadDartLibrary(int,java.lang.String)
io.sentry.Hint: void clearAttachments()
io.sentry.android.replay.GeneratedVideo: int getFrameCount()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.vendor.gson.stream.JsonReader: double nextDouble()
io.flutter.embedding.android.FlutterFragment: void onActivityResult(int,int,android.content.Intent)
io.sentry.DateUtils: long dateToNanos(java.util.Date)
io.sentry.android.core.internal.util.Permissions: Permissions()
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.SentryReplayEvent$ReplayType getReplayType()
io.flutter.embedding.android.FlutterFragmentActivity: void ensureFlutterFragmentCreated()
io.sentry.util.Random: int nextInt(int)
io.sentry.SpanId$Deserializer: SpanId$Deserializer()
io.sentry.protocol.Contexts: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.AnrV2EventProcessor: void mergeOS(io.sentry.SentryBaseEvent)
io.flutter.embedding.android.FlutterSurfaceView: boolean shouldNotify()
io.sentry.IHub: boolean isEnabled()
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromEvent$4(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.SentryOptions: boolean isEnableSpanLocalMetricAggregation()
io.sentry.Hub: void lambda$continueTrace$3(io.sentry.PropagationContext,io.sentry.IScope)
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
io.sentry.SentryBaseEvent: void setEnvironment(java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$invokeMethodUIThread$6(java.lang.String,java.util.HashMap)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
io.sentry.config.CompositePropertiesProvider: java.lang.String getProperty(java.lang.String)
io.sentry.protocol.SentryPackage: SentryPackage(java.lang.String,java.lang.String)
io.flutter.view.VsyncWaiter: long access$002(io.flutter.view.VsyncWaiter,long)
io.sentry.protocol.SentryStackFrame$JsonKeys: SentryStackFrame$JsonKeys()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void commitContent(int,java.util.Map)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.sentry.protocol.SentryPackage: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment createSegmentInternal$default(io.sentry.android.replay.capture.BaseCaptureStrategy,long,java.util.Date,io.sentry.protocol.SentryId,int,int,int,io.sentry.SentryReplayEvent$ReplayType,io.sentry.android.replay.ReplayCache,int,int,java.lang.String,java.util.List,java.util.Deque,int,java.lang.Object)
io.sentry.android.core.ManifestMetadataReader: boolean readBool(android.os.Bundle,io.sentry.ILogger,java.lang.String,boolean)
io.sentry.protocol.App: void setAppVersion(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$12: SentryFlutter$updateOptions$12(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryThreadFactory: SentryThreadFactory(io.sentry.SentryStackTraceFactory,io.sentry.SentryOptions)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String)
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.sentry.android.replay.ReplayFrame: io.sentry.android.replay.ReplayFrame copy(java.io.File,long,java.lang.String)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration valueOf(java.lang.String)
io.sentry.ObjectReader: boolean hasNext()
io.sentry.Breadcrumb: io.sentry.Breadcrumb error(java.lang.String)
io.sentry.cache.EnvelopeCache: void writeSessionToDisk(java.io.File,io.sentry.Session)
io.sentry.android.core.SentryAndroidOptions: void setEnablePerformanceV2(boolean)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: KeyboardChannel$1(io.flutter.embedding.engine.systemchannels.KeyboardChannel)
io.sentry.internal.modules.ResourcesModulesLoader: java.util.Map loadModules()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
io.sentry.android.replay.ReplayCache$Companion: io.sentry.android.replay.LastSegmentData fromDisk$sentry_android_replay_release(io.sentry.SentryOptions,io.sentry.protocol.SentryId,kotlin.jvm.functions.Function1)
io.sentry.android.ndk.SentryNdk: void shutdown()
io.flutter.util.ViewUtils: void calculateMaximumDisplayMetrics(android.content.Context,io.flutter.util.ViewUtils$DisplayUpdater)
io.sentry.SentryBaseEvent$Deserializer: SentryBaseEvent$Deserializer()
io.sentry.DuplicateEventDetectionEventProcessor: DuplicateEventDetectionEventProcessor(io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.BackGestureChannel getBackGestureChannel()
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterPlayStoreSplitApplication: FlutterPlayStoreSplitApplication()
io.sentry.cache.EnvelopeCache: java.util.Iterator iterator()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
io.sentry.UserFeedback: void setUnknown(java.util.Map)
io.sentry.util.StringUtils: java.lang.String capitalize(java.lang.String)
io.sentry.protocol.Device: java.util.Map getUnknown()
io.flutter.plugin.common.EventChannel$StreamHandler: void onCancel(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldHandleDeeplinking()
io.sentry.DefaultTransactionPerformanceCollector$1: void run()
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivityResumed(android.app.Activity)
io.sentry.JsonObjectDeserializer$TokenMap: JsonObjectDeserializer$TokenMap(io.sentry.JsonObjectDeserializer$1)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.sentry.SentryTracer: boolean isNoOp()
io.sentry.util.UrlUtils$UrlDetails: java.lang.String getUrlOrFallback()
io.sentry.protocol.SentryTransaction: java.lang.String getType()
io.sentry.CustomSamplingContext: void set(java.lang.String,java.lang.Object)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$onMethodCall$5(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,boolean,boolean,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
io.sentry.ProfilingTransactionData: void setId(java.lang.String)
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.SentryTracer: void setData(java.lang.String,java.lang.Object)
io.sentry.SentryBaseEvent: java.lang.String access$700(io.sentry.SentryBaseEvent)
io.sentry.SentryOptions: void setDebugMetaLoader(io.sentry.internal.debugmeta.IDebugMetaLoader)
io.sentry.SentryTracer: void lambda$updateBaggageValues$4(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,io.sentry.IScope)
io.sentry.SentryAppStartProfilingOptions: SentryAppStartProfilingOptions(io.sentry.SentryOptions,io.sentry.TracesSamplingDecision)
io.sentry.android.replay.capture.CaptureStrategy: void onTouchEvent(android.view.MotionEvent)
io.sentry.rrweb.RRWebBreadcrumbEvent: RRWebBreadcrumbEvent()
io.sentry.android.core.AppLifecycleIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
io.sentry.SentryEnvelopeItem: byte[] lambda$fromSession$0(io.sentry.ISerializer,io.sentry.Session)
io.sentry.Scope: void setContexts(java.lang.String,java.lang.Boolean)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.sentry.vendor.gson.stream.JsonReader: java.lang.String getPath()
io.sentry.MetricsAggregator: void set(java.lang.String,java.lang.String,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Failed: CaptureStrategy$ReplaySegment$Failed()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.sentry.cache.tape.FileObjectQueue$DirectByteArrayOutputStream: FileObjectQueue$DirectByteArrayOutputStream()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
io.sentry.SentryOptions: void setProfilingEnabled(boolean)
io.sentry.MetricsAggregator: void set(java.lang.String,int,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.SentryLockReason: SentryLockReason(io.sentry.SentryLockReason)
io.sentry.SentryClient: void lambda$captureEvent$0(io.sentry.Session)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
io.sentry.flutter.SentryFlutter$updateOptions$23: SentryFlutter$updateOptions$23(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets getFlutterAssets()
io.sentry.IScope: void removeExtra(java.lang.String)
io.sentry.Scope$IWithTransaction: void accept(io.sentry.ITransaction)
io.sentry.SentryTracer: io.sentry.protocol.SentryId getEventId()
io.sentry.ProfilingTransactionData: void notifyFinish(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
io.sentry.android.replay.ReplayCache: java.io.File getOngoingSegmentFile$sentry_android_replay_release()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.sentry.android.core.DeviceInfoUtil: java.lang.Long getTotalInternalStorage(android.os.StatFs)
io.sentry.Sentry: void clearBreadcrumbs()
io.sentry.internal.debugmeta.NoOpDebugMetaLoader: java.util.List loadDebugMeta()
io.sentry.vendor.gson.stream.JsonWriter: void string(java.lang.String)
io.sentry.util.TracingUtils: void startNewTrace(io.sentry.IHub)
io.sentry.flutter.SentryFlutterPlugin$Companion: void access$crash(io.sentry.flutter.SentryFlutterPlugin$Companion)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2702(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryOptions: void setSentryClientName(java.lang.String)
io.sentry.protocol.SentryStackTrace: java.util.List access$002(io.sentry.protocol.SentryStackTrace,java.util.List)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
io.sentry.android.core.internal.gestures.SentryGestureListener: void onUp(android.view.MotionEvent)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter beginObject()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $values()
io.sentry.SentryOptions: io.sentry.util.thread.IMainThreadChecker getMainThreadChecker()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
io.sentry.IpAddressUtils: IpAddressUtils()
io.flutter.embedding.engine.FlutterEngineGroupCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngineGroup)
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback getBeforeViewHierarchyCaptureCallback()
io.sentry.HostnameCache: HostnameCache(long)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
io.sentry.ProfilingTraceData: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.sentry.android.replay.ReplayIntegration: void onLowMemory()
io.sentry.android.replay.ReplayCache: void persistSegmentValues(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
io.sentry.SentryOptions: void addScopeObserver(io.sentry.IScopeObserver)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: void release()
io.sentry.SentryEnvelopeHeader: void setUnknown(java.util.Map)
io.flutter.plugin.platform.PlatformViewWrapper: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.sentry.android.core.DeviceInfoUtil: java.lang.Long getUnusedExternalStorage(android.os.StatFs)
io.sentry.android.replay.RootViewsSpy$listeners$1: RootViewsSpy$listeners$1(io.sentry.android.replay.RootViewsSpy)
io.sentry.protocol.Device: void setUsableMemory(java.lang.Long)
io.sentry.protocol.ViewHierarchy: void setUnknown(java.util.Map)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
io.sentry.android.replay.util.NodesKt: android.graphics.Rect boundsInWindow(androidx.compose.ui.layout.LayoutCoordinates,androidx.compose.ui.layout.LayoutCoordinates)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource valueOf(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo access$200(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
io.sentry.SentryReplayEvent: java.util.Map getUnknown()
io.flutter.embedding.android.FlutterFragment: void onDetach()
io.sentry.android.replay.ReplayCache$rotate$1: ReplayCache$rotate$1(long,io.sentry.android.replay.ReplayCache,kotlin.jvm.internal.Ref$ObjectRef)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.plugin.platform.PlatformViewWrapper: boolean onTouchEvent(android.view.MotionEvent)
io.sentry.SentryOptions: int getProfilingTracesHz()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.sentry.SentryReplayOptions: java.util.Set getUnmaskViewClasses()
io.sentry.Sentry: void lambda$init$0(io.sentry.SentryOptions)
io.sentry.SendFireAndForgetEnvelopeSender: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget create(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivityForConfigChanges()
io.sentry.protocol.SentrySpan: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: void setId(int)
io.sentry.protocol.OperatingSystem: java.lang.String getBuild()
io.sentry.android.core.internal.gestures.SentryWindowCallback: boolean dispatchTouchEvent(android.view.MotionEvent)
io.sentry.protocol.SentryTransaction: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.plugin.text.ProcessTextPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
io.flutter.view.AccessibilityBridge: boolean access$400(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
io.sentry.android.core.performance.AppStartMetrics: void lambda$onActivityStarted$2()
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: void close()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
androidx.fragment.app.Fragment: int hashCode()
io.sentry.transport.NoOpEnvelopeCache: void store(io.sentry.SentryEnvelope,io.sentry.Hint)
io.flutter.embedding.android.FlutterFragment: void onStart()
io.sentry.android.replay.util.AndroidTextLayout: int getLineCount()
io.sentry.android.core.DeviceInfoUtil: java.lang.Long getTotalExternalStorage(android.os.StatFs)
io.sentry.Baggage: java.lang.String getSampleRate()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
io.sentry.vendor.gson.stream.JsonReader: void consumeNonExecutePrefix()
io.sentry.SentryOptions$Cron: void setDefaultCheckinMargin(java.lang.Long)
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate: boolean handleEvent(android.view.KeyEvent)
io.sentry.transport.AsyncHttpTransport: AsyncHttpTransport(io.sentry.transport.QueuedThreadPoolExecutor,io.sentry.SentryOptions,io.sentry.transport.RateLimiter,io.sentry.transport.ITransportGate,io.sentry.transport.HttpConnection)
io.sentry.protocol.SdkInfo$Deserializer: SdkInfo$Deserializer()
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromClientReport(io.sentry.ISerializer,io.sentry.clientreport.ClientReport)
io.sentry.Scope: void setLevel(io.sentry.SentryLevel)
io.sentry.Sentry: void notifyOptionsObservers(io.sentry.SentryOptions)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
io.sentry.vendor.Base64$Coder: boolean process(byte[],int,int,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibilityBridge()
io.sentry.flutter.SentryFlutter$updateOptions$28: void invoke(java.util.Map)
io.sentry.android.replay.WindowRecorder$RecorderExecutorServiceThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.sentry.android.core.performance.TimeSpan: io.sentry.SentryDate getProjectedStopTimestamp()
io.sentry.SentryTracer$FinishStatus: boolean access$300(io.sentry.SentryTracer$FinishStatus)
io.sentry.CheckInStatus: CheckInStatus(java.lang.String,int)
androidx.fragment.app.Fragment: void onDestroy()
io.sentry.ISerializer: void serialize(io.sentry.SentryEnvelope,java.io.OutputStream)
io.sentry.android.core.SentryAndroidOptions: void setBeforeScreenshotCaptureCallback(io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: FlutterFragmentActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.sentry.ProfilingTransactionData: java.lang.Long access$502(io.sentry.ProfilingTransactionData,java.lang.Long)
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmapCanvas$2: android.graphics.Canvas invoke()
io.sentry.SentryOptions: void addBundleId(java.lang.String)
io.sentry.protocol.Request: java.lang.String access$202(io.sentry.protocol.Request,java.lang.String)
io.sentry.protocol.OperatingSystem: boolean equals(java.lang.Object)
io.sentry.protocol.TransactionInfo: java.util.Map getUnknown()
io.sentry.SentryClient: io.sentry.SentryEvent applyScope(io.sentry.SentryEvent,io.sentry.IScope,io.sentry.Hint)
io.sentry.android.core.PerformanceAndroidEventProcessor: boolean isTimestampWithinSpan(double,io.sentry.protocol.SentrySpan)
io.flutter.embedding.android.FlutterView: android.view.View findViewByAccessibilityIdRootedAtCurrentView(int,android.view.View)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
io.flutter.embedding.android.FlutterActivity: void release()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath: java.lang.String getDirPath()
io.flutter.plugin.platform.PlatformPlugin: void access$1300(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
io.sentry.SentryEvent$JsonKeys: SentryEvent$JsonKeys()
io.sentry.JsonObjectDeserializer$TokenName: JsonObjectDeserializer$TokenName(java.lang.String)
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.SentryEnvelopeHeader: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.SentryBaseEvent: java.lang.Throwable getThrowableMechanism()
io.sentry.protocol.SentrySpan: io.sentry.SpanId getParentSpanId()
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint getDartEntrypoint()
io.sentry.SentryAppStartProfilingOptions: void setProfilingTracesDirPath(java.lang.String)
io.sentry.protocol.Device: java.lang.String getConnectionType()
io.sentry.NoOpSentryExecutorService: java.lang.Object lambda$submit$0()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$Deserializer: boolean deserializeValue(io.sentry.rrweb.RRWebIncrementalSnapshotEvent,java.lang.String,io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.IScope: void removeContexts(java.lang.String)
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
io.sentry.protocol.ViewHierarchy$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.HostnameCache: java.lang.Void lambda$updateCache$1()
io.sentry.config.EnvironmentVariablePropertiesProvider: EnvironmentVariablePropertiesProvider()
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.sentry.SentryOptions: java.util.Set getIgnoredExceptionsForType()
androidx.activity.OnBackPressedCallback: void handleOnBackCancelled()
io.flutter.plugin.editing.TextInputPlugin$1: void show()
androidx.preference.internal.PreferenceImageView: PreferenceImageView(android.content.Context,android.util.AttributeSet)
io.sentry.Span: java.util.List getDirectChildren()
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.android.replay.ReplayLifecycle: void setCurrentState$sentry_android_replay_release(io.sentry.android.replay.ReplayState)
io.flutter.embedding.android.FlutterImageView: void pause()
io.sentry.HubAdapter: io.sentry.TransactionContext continueTrace(java.lang.String,java.util.List)
io.sentry.Hub: Hub(io.sentry.SentryOptions,io.sentry.Stack)
io.sentry.protocol.SentryThread: java.lang.Long getId()
io.sentry.IScopeObserver: void setRequest(io.sentry.protocol.Request)
androidx.activity.OnBackPressedCallback: void handleOnBackProgressed(androidx.activity.BackEventCompat)
io.sentry.android.core.SentryAndroidOptions: boolean isAttachAnrThreadDump()
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.ProfilingTraceData: void setDeviceLocale(java.lang.String)
io.flutter.plugin.common.MethodChannel$Result: void notImplemented()
io.sentry.TransactionPerformanceCollector: void onSpanStarted(io.sentry.ISpan)
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromCheckIn$10(io.sentry.SentryEnvelopeItem$CachedItem)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel[] values()
io.sentry.IScope: java.util.List getEventProcessors()
io.sentry.flutter.SentryFlutter$updateOptions$28$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
io.sentry.android.core.internal.util.AndroidCurrentDateProvider: AndroidCurrentDateProvider()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode getNodeSubtree()
io.sentry.metrics.MetricsApi: void set(java.lang.String,java.lang.String,io.sentry.MeasurementUnit,java.util.Map)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder dartEntrypoint(java.lang.String)
io.sentry.Span: void setMeasurement(java.lang.String,java.lang.Number,io.sentry.MeasurementUnit)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: boolean shouldMask(android.view.View,io.sentry.SentryOptions)
io.sentry.metrics.LocalMetricsAggregator: void add(java.lang.String,io.sentry.metrics.MetricType,java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.ScopeObserverAdapter: void setBreadcrumbs(java.util.Collection)
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.embedding.android.KeyEmbedderResponder: void updatePressingState(java.lang.Long,java.lang.Long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.sentry.protocol.ViewHierarchyNode: java.util.List access$1002(io.sentry.protocol.ViewHierarchyNode,java.util.List)
io.sentry.JsonObjectReader: java.lang.Double nextDoubleOrNull()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
io.sentry.TypeCheckHint: TypeCheckHint()
io.sentry.android.replay.util.PersistableLinkedList: boolean add(io.sentry.rrweb.RRWebEvent)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String toString()
io.sentry.protocol.SentryStackFrame: java.lang.String getFunction()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivityStopped(android.app.Activity)
io.sentry.protocol.User$Deserializer: io.sentry.protocol.User deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$1: void invoke(java.lang.String,java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterFragment: java.lang.String getAppBundlePath()
io.sentry.SpanContext: void setOrigin(java.lang.String)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
io.sentry.SentryExecutorService$SentryExecutorServiceThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.sentry.util.UrlUtils$UrlDetails: UrlUtils$UrlDetails(java.lang.String,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.sentry.SentrySpanStorage: io.sentry.ISpan get(java.lang.String)
io.sentry.TracesSamplingDecision: TracesSamplingDecision(java.lang.Boolean,java.lang.Double,java.lang.Boolean,java.lang.Double)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$800(byte[])
io.sentry.SentryOptions: void addIgnoredExceptionForType(java.lang.Class)
io.sentry.SentryNanotimeDate: long laterDateNanosTimestampByDiff(io.sentry.SentryDate)
io.sentry.protocol.SentryThread: io.sentry.protocol.SentryStackTrace getStacktrace()
io.flutter.embedding.android.FlutterFragment: void onTrimMemory(int)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
io.sentry.HostnameCache: void close()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler: void startStylusHandwriting()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.sentry.MainEventProcessor: void setEnvironment(io.sentry.SentryBaseEvent)
io.sentry.protocol.SentrySpan: java.lang.Double getTimestamp()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.sentry.android.core.ActivityFramesTracker: ActivityFramesTracker(io.sentry.android.core.LoadClass,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.MainLooperHandler,androidx.core.app.FrameMetricsAggregator)
io.sentry.SentryOptions: void setMaxBreadcrumbs(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
io.sentry.cache.tape.QueueFile: void ringErase(long,long)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.view.Surface getSurface()
io.sentry.android.core.SentryLogcatAdapter: int d(java.lang.String,java.lang.String)
io.sentry.android.core.performance.TimeSpan: io.sentry.SentryDate getStartTimestamp()
io.sentry.TransactionOptions: void setStartTimestamp(io.sentry.SentryDate)
io.sentry.Sentry: io.sentry.ITransaction startTransaction(java.lang.String,java.lang.String,java.lang.String,io.sentry.TransactionOptions)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setBrieflyShowPassword(boolean)
io.sentry.android.replay.util.MainLooperHandler: void post(java.lang.Runnable)
io.sentry.metrics.NoopMetricsAggregator: io.sentry.IMetricsAggregator getMetricsAggregator()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
io.sentry.protocol.Device: void setStorageSize(java.lang.Long)
io.sentry.SentryOptions: void setMaxQueueSize(int)
io.sentry.vendor.gson.stream.JsonWriter: void flush()
io.sentry.SentryBaseEvent: io.sentry.protocol.Request access$300(io.sentry.SentryBaseEvent)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
io.sentry.Attachment: io.sentry.Attachment fromViewHierarchy(io.sentry.protocol.ViewHierarchy)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
io.sentry.android.core.NoOpDebugImagesLoader: java.util.Set loadDebugImagesForAddresses(java.util.Set)
io.flutter.plugin.common.MethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
io.sentry.MainEventProcessor: void setRelease(io.sentry.SentryBaseEvent)
io.sentry.SentryOptions: void setSendModules(boolean)
io.sentry.android.replay.capture.BufferCaptureStrategy$pause$1: void invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.cache.AndroidEnvelopeCache: void store(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.flutter.SentryFlutterPlugin: void setContexts(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.List access$402(io.sentry.rrweb.RRWebInteractionMoveEvent,java.util.List)
io.flutter.embedding.android.FlutterFragmentActivity: void configureStatusBarForFullscreenFlutterExperience()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.android.replay.util.ComposeTextLayout: int getEllipsisCount(int)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: boolean isSimilar(io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onContentChanged()
io.sentry.SentryOptions: boolean isTraceOptionsRequests()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean access$300(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String gattErrorString(int)
io.sentry.NoOpSpan: java.lang.String getDescription()
io.sentry.android.ndk.NdkScopeObserver: void lambda$setUser$0(io.sentry.protocol.User)
io.sentry.profilemeasurements.ProfileMeasurement: java.util.Collection getValues()
io.sentry.android.core.AnrV2Integration$AnrV2Hint: AnrV2Integration$AnrV2Hint(long,io.sentry.ILogger,long,boolean,boolean)
io.sentry.Hub: io.sentry.SentryTraceHeader traceHeaders()
io.sentry.flutter.SentryFlutterPlugin$Companion: double access$adjustReplaySizeToBlockSize(io.sentry.flutter.SentryFlutterPlugin$Companion,double)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.app.ActivityCompat$Api31Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void dispatch(java.lang.Runnable)
io.sentry.android.core.AnrV2EventProcessor: void setTransaction(io.sentry.SentryEvent)
io.sentry.IHub: void addBreadcrumb(java.lang.String)
io.sentry.cache.PersistingScopeObserver: void lambda$setTrace$10(io.sentry.SpanContext,io.sentry.IScope)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$Deserializer: RRWebInteractionMoveEvent$Position$Deserializer()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.sentry.CircularFifoQueue: int access$202(io.sentry.CircularFifoQueue,int)
io.sentry.protocol.SentryStackTrace: java.util.Map access$102(io.sentry.protocol.SentryStackTrace,java.util.Map)
io.sentry.android.core.ScreenshotEventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
io.sentry.flutter.SentryFlutterPlugin: void captureReplay(java.lang.Boolean,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.OperatingSystem: OperatingSystem()
io.sentry.Sentry: void init(io.sentry.OptionsContainer,io.sentry.Sentry$OptionsConfiguration,boolean)
io.sentry.protocol.SentryStackFrame: void setVars(java.util.Map)
io.sentry.PreviousSessionFinalizer: java.util.Date getTimestampFromCrashMarkerFile(java.io.File)
io.sentry.clientreport.ClientReport: java.util.Date getTimestamp()
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
io.sentry.Scope: void removeTag(java.lang.String)
io.sentry.ProfilingTraceData: void setTimestamp(java.util.Date)
io.sentry.SentryOptions: java.util.List getPerformanceCollectors()
io.sentry.rrweb.RRWebVideoEvent: void setSize(long)
io.sentry.Baggage: java.lang.String getSegment(io.sentry.protocol.User)
io.sentry.android.core.LifecycleWatcher: io.sentry.IHub access$100(io.sentry.android.core.LifecycleWatcher)
io.sentry.Session: java.lang.Double getDuration()
io.sentry.Session$State: io.sentry.Session$State[] $values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.sentry.android.replay.capture.BaseCaptureStrategy: BaseCaptureStrategy(io.sentry.SentryOptions,io.sentry.IHub,io.sentry.transport.ICurrentDateProvider,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
io.sentry.cache.EnvelopeCache: void updateCurrentSession(java.io.File,io.sentry.SentryEnvelope)
io.sentry.IScope: void setPropagationContext(io.sentry.PropagationContext)
io.sentry.vendor.gson.stream.JsonReader: int doPeek()
io.flutter.embedding.engine.dart.DartExecutor: void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
io.sentry.rrweb.RRWebMetaEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebMetaEvent,io.sentry.ObjectReader,io.sentry.ILogger)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.sentry.android.replay.video.MuxerConfig: int component5()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
io.sentry.android.core.SentryFrameMetrics: long getFrozenFrameDelayNanos()
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality[] values()
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(java.lang.Number)
io.sentry.SentryBaseEvent: java.lang.String getRelease()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
io.sentry.IHub$-CC: void $default$addBreadcrumb(io.sentry.IHub,java.lang.String)
io.sentry.SentryOptions$Proxy: java.net.Proxy$Type getType()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
io.sentry.flutter.SentryFlutter$updateOptions$25: java.lang.Object invoke(java.lang.Object)
io.sentry.Baggage: java.lang.String getUserId()
io.sentry.ExternalOptions: void setEnableUncaughtExceptionHandler(java.lang.Boolean)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
io.sentry.android.replay.util.FixedWindowCallback: boolean onSearchRequested()
io.sentry.Breadcrumb: Breadcrumb(java.util.Date)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.sentry.SentryBaseEvent: io.sentry.protocol.User access$802(io.sentry.SentryBaseEvent,io.sentry.protocol.User)
io.sentry.rrweb.RRWebEvent: boolean equals(java.lang.Object)
io.sentry.SentryThreadFactory: io.sentry.protocol.SentryThread getSentryThread(boolean,java.lang.StackTraceElement[],java.lang.Thread)
io.sentry.android.core.SentryLogcatAdapter: int i(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
io.sentry.UncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()
io.sentry.NoOpScope: io.sentry.SentryLevel getLevel()
io.sentry.SentryBaseEvent: io.sentry.protocol.SdkVersion getSdk()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.sentry.MeasurementUnit$Custom: java.lang.String apiName()
io.sentry.android.replay.util.PersistableLinkedList: boolean contains(io.sentry.rrweb.RRWebEvent)
io.sentry.rrweb.RRWebVideoEvent: void setTop(int)
io.sentry.ExternalOptions: void setDebug(java.lang.Boolean)
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: android.app.Service getService()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
io.sentry.protocol.Mechanism: java.lang.String access$002(io.sentry.protocol.Mechanism,java.lang.String)
androidx.fragment.app.FragmentActivity: void onResume()
io.sentry.vendor.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.Throwable)
io.sentry.SentryOptions$Proxy: SentryOptions$Proxy()
io.sentry.rrweb.RRWebInteractionEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.DebugImage: java.lang.String getDebugId()
io.sentry.cache.tape.QueueFile: void expandIfNecessary(long)
io.flutter.plugin.platform.PlatformViewsController$1: void dispose(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $values()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
io.sentry.SentryOptions: java.lang.String getSentryClientName()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
io.sentry.transport.NoOpTransport: void send(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.android.replay.WindowManagerSpy: java.lang.Object getWindowManagerInstance()
io.sentry.IHub: void setExtra(java.lang.String,java.lang.String)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.IScope)
io.flutter.util.ViewUtils: boolean hasChildViewOfType(android.view.View,java.lang.Class[])
io.sentry.SentryOptions: void setShutdownTimeout(long)
io.sentry.android.replay.WindowSpy$windowField$2: WindowSpy$windowField$2()
io.sentry.cache.PersistingScopeObserver: void lambda$setUser$1(io.sentry.protocol.User)
io.sentry.protocol.Request: java.lang.String getApiTarget()
io.sentry.Span: io.sentry.TraceContext traceContext()
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.sentry.android.replay.util.NodesKt: float fastCoerceAtLeast(float,float)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void show()
io.sentry.hints.Retryable: void setRetry(boolean)
androidx.fragment.app.Fragment: java.lang.String getString(int)
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.util.List getDartEntrypointArgs()
io.sentry.android.core.ActivityFramesTracker: void stop()
io.sentry.Breadcrumb: int hashCode()
io.sentry.android.core.ActivityBreadcrumbsIntegration: void addBreadcrumb(android.app.Activity,java.lang.String)
io.sentry.Session: java.util.Date getTimestamp()
io.sentry.ProfilingTraceData: void setTransactions(java.util.List)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
io.sentry.android.replay.ReplayLifecycle: boolean isAllowed(io.sentry.android.replay.ReplayState)
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
io.sentry.android.core.CurrentActivityIntegration: void setCurrentActivity(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: PlatformViewsChannel$PlatformViewBufferSize(int,int)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
io.sentry.protocol.DebugImage: java.lang.String access$302(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.sentry.android.ndk.NdkScopeObserver: void removeTag(java.lang.String)
io.sentry.SentryExecutorService$SentryExecutorServiceThreadFactory: SentryExecutorService$SentryExecutorServiceThreadFactory()
io.sentry.SentryReplayEvent: java.util.Date getTimestamp()
io.sentry.Session: java.util.Date getStarted()
io.sentry.android.core.AppState: void setInBackground(boolean)
io.sentry.android.core.ActivityLifecycleIntegration: boolean isRunningTransactionOrTrace(android.app.Activity)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.Device: java.util.Date access$2402(io.sentry.protocol.Device,java.util.Date)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
io.sentry.android.core.EnvelopeFileObserverIntegration: void lambda$register$0(io.sentry.IHub,io.sentry.SentryOptions,java.lang.String)
io.sentry.util.UrlUtils: boolean isAbsoluteUrl(java.lang.String)
io.sentry.ExternalOptions: void setTag(java.lang.String,java.lang.String)
io.sentry.android.replay.video.MuxerConfig: java.io.File component1()
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
io.sentry.SentryReplayEvent: void setSegmentId(int)
io.sentry.android.replay.util.ComposeTextLayout: int getLineStart(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
io.sentry.SentryBaseEvent: java.lang.String access$600(io.sentry.SentryBaseEvent)
io.flutter.embedding.android.FlutterFragment$2: void handleOnBackPressed()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean isObscured(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode getLca()
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(java.lang.String)
io.sentry.android.replay.LastSegmentData: java.util.Date component3()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.le.ScanCallback access$400(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.sentry.OutboxSender: void processEnvelopeFile(java.lang.String,io.sentry.Hint)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: boolean access$400(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
io.sentry.metrics.MetricsApi: void gauge(java.lang.String,double)
io.sentry.ITransportFactory: io.sentry.transport.ITransport create(io.sentry.SentryOptions,io.sentry.RequestDetails)
io.sentry.CheckInStatus: java.lang.String apiName()
io.sentry.DiagnosticLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Object[])
io.sentry.android.replay.util.ExecutorsKt: void gracefullyShutdown(java.util.concurrent.ExecutorService,io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldDispatchAppLifecycleState()
io.sentry.flutter.SentryFlutterReplayRecorder: void start$lambda$0(io.sentry.flutter.SentryFlutterReplayRecorder,java.lang.String,io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.UncaughtExceptionHandler$Adapter: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
io.sentry.SynchronizedCollection: boolean add(java.lang.Object)
io.sentry.JsonObjectReader: void beginArray()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
io.sentry.android.replay.ReplayCache: void deleteFile(java.io.File)
io.sentry.android.core.internal.util.ClassUtil: ClassUtil()
io.sentry.OutboxSender: void lambda$processEnvelope$1(io.sentry.hints.Resettable)
io.sentry.android.core.SentryAndroidOptions: void setEnableScopeSync(boolean)
io.sentry.NoOpHub: void clearBreadcrumbs()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] values()
io.sentry.ExternalOptions: void setEnableDeduplication(java.lang.Boolean)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convert(io.sentry.Breadcrumb)
io.sentry.android.replay.video.SimpleVideoEncoder: void encode(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.android.AndroidTouchProcessor: float getVerticalScrollFactorAbove26(android.content.Context)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.Sentry: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext,io.sentry.TransactionOptions)
io.sentry.protocol.TransactionInfo$Deserializer: TransactionInfo$Deserializer()
io.sentry.protocol.Response: void setHeaders(java.util.Map)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
io.sentry.rrweb.RRWebOptionsEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.gestures.ReplayGestureConverter$Companion: ReplayGestureConverter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.android.replay.SentryReplayModifiers: SentryReplayModifiers()
io.sentry.flutter.SentryFlutterPlugin: void addReplayScreenshot(java.lang.String,java.lang.Long,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.EnvelopeSender: void lambda$processFile$0(io.sentry.hints.Flushable)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.sentry.JsonObjectReader: java.lang.Boolean nextBooleanOrNull()
io.sentry.SentryClient: io.sentry.protocol.SentryTransaction processTransaction(io.sentry.protocol.SentryTransaction,io.sentry.Hint,java.util.List)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.plugin.common.MethodCall: boolean hasArgument(java.lang.String)
io.sentry.clientreport.ClientReportKey: java.lang.String getCategory()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
io.sentry.ScopeObserverAdapter: void setContexts(io.sentry.protocol.Contexts)
io.sentry.protocol.SentryException: io.sentry.protocol.SentryStackTrace access$402(io.sentry.protocol.SentryException,io.sentry.protocol.SentryStackTrace)
io.sentry.protocol.SentryRuntime$JsonKeys: SentryRuntime$JsonKeys()
io.sentry.NoOpSentryClient: void captureSession(io.sentry.Session,io.sentry.Hint)
io.sentry.internal.debugmeta.ResourcesDebugMetaLoader: java.util.List loadDebugMeta()
io.sentry.Breadcrumb: java.util.Date getTimestamp()
io.sentry.SentryReplayOptions: boolean isSessionReplayEnabled()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
io.flutter.plugin.platform.PlatformViewsController: void disposePlatformView(int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void waitIfBonding()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void access$500(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,java.lang.String,java.util.HashMap)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean onMenuOpened(int,android.view.Menu)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
io.sentry.android.replay.video.MuxerConfig: void setRecordingWidth(int)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
androidx.activity.ComponentActivity: void initializeViewTreeOwners()
io.sentry.IHub: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext,io.sentry.TransactionOptions)
io.sentry.SynchronizedQueue: java.util.Collection decorated()
io.sentry.android.core.InternalSentrySdk: void lambda$deleteCurrentSessionFile$1(io.sentry.SentryOptions)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(java.io.FileDescriptor)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
io.sentry.rrweb.RRWebVideoEvent: int access$1102(io.sentry.rrweb.RRWebVideoEvent,int)
io.sentry.NoOpSpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SpanOptions)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.android.replay.util.TextAttributes: androidx.compose.ui.graphics.Color component1-QN2ZGVo()
io.sentry.android.core.InternalSentrySdk: io.sentry.Session updateSession(io.sentry.IHub,io.sentry.SentryOptions,io.sentry.Session$State,boolean)
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
io.sentry.SentryOptions: io.sentry.SentryOptions empty()
androidx.fragment.app.Fragment: boolean isVisible()
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.sentry.android.replay.ScreenshotRecorder: int dominantColorForRect(android.graphics.Bitmap,android.graphics.Rect)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
io.sentry.android.core.ContextUtils: android.content.pm.PackageInfo lambda$static$2(android.content.Context)
io.sentry.internal.modules.ModulesLoader: java.util.Map loadModules()
io.sentry.JsonObjectReader: void beginObject()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.cache.tape.EmptyObjectQueue$EmptyIterator: java.lang.Object next()
io.sentry.ProfilingTransactionData: java.lang.Long getRelativeStartNs()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
io.sentry.JsonObjectDeserializer: boolean hasOneToken()
io.sentry.android.replay.capture.BufferCaptureStrategy: void captureReplay(boolean,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTap(int)
io.sentry.android.core.internal.util.FirstDrawDoneListener$1: FirstDrawDoneListener$1(io.sentry.android.core.internal.util.FirstDrawDoneListener)
io.sentry.SentryEnvelopeItem: void ensureAttachmentSizeLimit(long,long,java.lang.String)
io.flutter.embedding.android.FlutterImageView: void resume()
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
io.flutter.embedding.android.FlutterFragment: boolean shouldHandleDeeplinking()
io.sentry.TransactionOptions: void setAppStartTransaction(boolean)
io.sentry.protocol.Device: void setOrientation(io.sentry.protocol.Device$DeviceOrientation)
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
io.sentry.NoOpSentryExecutorService: java.lang.Object lambda$submit$1()
io.sentry.NoOpTransactionPerformanceCollector: void close()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource$Deserializer: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.CheckIn: java.util.Map getUnknown()
io.sentry.MonitorSchedule: void setUnit(io.sentry.MonitorScheduleUnit)
io.sentry.protocol.User$Deserializer: User$Deserializer()
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.ScreenshotRecorderConfig component1()
io.sentry.IHub: void configureScope(io.sentry.ScopeCallback)
io.sentry.protocol.OperatingSystem: java.lang.String access$302(io.sentry.protocol.OperatingSystem,java.lang.String)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: void lambda$register$0(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.plugin.common.BinaryMessenger$-CC: io.flutter.plugin.common.BinaryMessenger$TaskQueue $default$makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler)
io.sentry.Hub: void lambda$createTransaction$2(io.sentry.ITransaction,io.sentry.IScope)
io.sentry.SentryExceptionFactory: java.util.List getSentryExceptions(java.lang.Throwable)
io.sentry.instrumentation.file.SentryFileInputStream$Factory: java.io.FileInputStream create(java.io.FileInputStream,java.lang.String)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: SystemEventsBreadcrumbsIntegration(android.content.Context,java.util.List)
io.sentry.ProfilingTraceData: java.io.File getTraceFile()
io.sentry.metrics.SetMetric: int getWeight()
io.sentry.SentryBaseEvent: io.sentry.protocol.Request access$302(io.sentry.SentryBaseEvent,io.sentry.protocol.Request)
io.sentry.protocol.Message$Deserializer: Message$Deserializer()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
io.sentry.protocol.SentryPackage: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
io.sentry.SentryCrashLastRunState: SentryCrashLastRunState()
io.sentry.NoOpScope: void addAttachment(io.sentry.Attachment)
io.sentry.rrweb.RRWebVideoEvent: void setLeft(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
io.sentry.MonitorContexts$Deserializer: io.sentry.MonitorContexts deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.clientreport.DiscardReason: DiscardReason(java.lang.String,int,java.lang.String)
io.sentry.android.replay.ReplayCache: io.sentry.SentryOptions access$getOptions$p(io.sentry.android.replay.ReplayCache)
androidx.fragment.app.Fragment: int getTargetRequestCode()
io.sentry.transport.NoOpEnvelopeCache: void discard(io.sentry.SentryEnvelope)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
io.sentry.SentryOptions$Proxy: java.lang.String getUser()
io.sentry.JsonObjectReader: java.lang.Long nextLongOrNull()
io.sentry.flutter.SentryFlutterPlugin: void setExtra(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
io.sentry.ReplayRecording: ReplayRecording()
io.flutter.util.HandlerCompat: android.os.Handler createAsyncHandler(android.os.Looper)
io.sentry.rrweb.RRWebBreadcrumbEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
io.sentry.cache.tape.QueueFile: long readLong(byte[],int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: void reply(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.sentry.android.core.PerformanceAndroidEventProcessor: io.sentry.protocol.SentrySpan timeSpanToSentrySpan(io.sentry.android.core.performance.TimeSpan,io.sentry.SpanId,io.sentry.protocol.SentryId,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
io.sentry.util.TracingUtils$PropagationContextHolder: io.sentry.PropagationContext access$100(io.sentry.util.TracingUtils$PropagationContextHolder)
io.flutter.embedding.android.FlutterFragmentActivity: void onUserLeaveHint()
io.sentry.protocol.SentrySpan: io.sentry.SpanId getSpanId()
io.sentry.ProfilingTransactionData$JsonKeys: ProfilingTransactionData$JsonKeys()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
io.sentry.BuildConfig: BuildConfig()
io.sentry.SynchronizedCollection: io.sentry.SynchronizedCollection synchronizedCollection(java.util.Collection)
io.sentry.android.replay.ReplayIntegration$random$2: ReplayIntegration$random$2()
io.sentry.ProfilingTraceData: java.lang.String getDurationNs()
io.sentry.protocol.SentryRuntime: SentryRuntime()
io.sentry.android.core.AppState: AppState()
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction)
io.sentry.protocol.DebugImage: void setUuid(java.lang.String)
io.sentry.MemoryCollectionData: MemoryCollectionData(long,long)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
io.sentry.SentryBaseEvent: void setSdk(io.sentry.protocol.SdkVersion)
io.sentry.metrics.NoopMetricsAggregator: void close()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
xyz.luan.audioplayers.PlayerMode: xyz.luan.audioplayers.PlayerMode[] values()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.util.MapObjectReader: MapObjectReader(java.util.Map)
io.sentry.Scope$SessionPair: io.sentry.Session getCurrent()
io.sentry.rrweb.RRWebEvent: void setTimestamp(long)
io.sentry.android.replay.ReplayCache$persistSegmentValues$2: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.lang.String getInitialRoute()
io.sentry.SentryTracer: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter)
io.sentry.rrweb.RRWebInteractionMoveEvent: void setPointerId(int)
io.sentry.Baggage: java.lang.Double sampleRate(io.sentry.TracesSamplingDecision)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler: void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
io.sentry.SentryEvent: void setModule(java.lang.String,java.lang.String)
io.sentry.NoOpReplayController: void resume()
io.flutter.plugin.platform.PlatformViewWrapper$1: void onGlobalFocusChanged(android.view.View,android.view.View)
io.sentry.ProfilingTransactionData: boolean equals(java.lang.Object)
io.sentry.protocol.Mechanism: java.util.Map access$502(io.sentry.protocol.Mechanism,java.util.Map)
io.sentry.protocol.SentryId$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
com.sanguinarypc.box_sensors.R$xml: R$xml()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.sentry.android.core.AnrIntegration: void register(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.flutter.plugin.text.ProcessTextPlugin: void onDetachedFromActivityForConfigChanges()
io.sentry.ExternalOptions: void addTracePropagationTarget(java.lang.String)
com.sanguinarypc.box_sensors.R$mipmap: R$mipmap()
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean)
io.flutter.plugin.editing.TextEditingDelta: int getDeltaEnd()
io.sentry.transport.CurrentDateProvider: io.sentry.transport.ICurrentDateProvider getInstance()
io.sentry.protocol.Contexts: Contexts(io.sentry.protocol.Contexts)
io.sentry.TracesSampler: TracesSampler(io.sentry.SentryOptions,io.sentry.util.Random)
io.sentry.protocol.SdkVersion: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
io.flutter.util.HandlerCompat: HandlerCompat()
io.sentry.instrumentation.file.SentryFileReader: SentryFileReader(java.io.File)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$1000(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(com.google.android.play.core.splitinstall.SplitInstallSessionState)
io.sentry.hints.SubmissionResult: boolean isSuccess()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.plugin.platform.WindowManagerHandler: WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: boolean isSlow(long,long)
io.sentry.android.replay.capture.SessionCaptureStrategy: void onConfigurationChanged(io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.SentryOptions: void setMaxRequestBodySize(io.sentry.SentryOptions$RequestSize)
io.flutter.view.AccessibilityBridge$1: void onTap(int)
io.flutter.embedding.android.AndroidTouchProcessor: int getVerticalScrollFactorPre26(android.content.Context)
io.sentry.protocol.SentrySpan: SentrySpan(java.lang.Double,java.lang.Double,io.sentry.protocol.SentryId,io.sentry.SpanId,io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.SpanStatus,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map)
io.sentry.protocol.SentryPackage$JsonKeys: SentryPackage$JsonKeys()
io.sentry.protocol.DebugMeta: io.sentry.protocol.SdkInfo getSdkInfo()
io.sentry.SynchronizedCollection: boolean removeAll(java.util.Collection)
io.sentry.Hub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double access$902(io.sentry.protocol.ViewHierarchyNode,java.lang.Double)
io.sentry.Session$Deserializer: java.lang.Exception missingRequiredFieldException(java.lang.String,io.sentry.ILogger)
io.sentry.instrumentation.file.SentryFileOutputStream: void close()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: int atMost(int)
io.sentry.MeasurementUnit$Duration: MeasurementUnit$Duration(java.lang.String,int)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter$Companion: SentryFlutterReplayBreadcrumbConverter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.protocol.SentryRuntime: void setVersion(java.lang.String)
io.sentry.android.core.performance.TimeSpan: long getProjectedStopTimestampMs()
io.sentry.TransactionOptions: void setDeadlineTimeout(java.lang.Long)
io.sentry.protocol.Device: void setUnknown(java.util.Map)
io.sentry.Hub: io.sentry.ISpan getSpan()
io.sentry.SentryNanotimeDate: SentryNanotimeDate(java.util.Date,long)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: BaseCaptureStrategy$special$$inlined$persistableAtomic$1(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String,io.sentry.android.replay.capture.BaseCaptureStrategy)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.sentry.transport.AsyncHttpTransport: boolean isHealthy()
io.sentry.HubAdapter: io.sentry.BaggageHeader getBaggage()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context,android.util.AttributeSet)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void run()
io.sentry.android.core.CurrentActivityIntegration: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.sentry.android.core.InternalSentrySdk: java.util.Map getAppStartMeasurement()
io.sentry.android.core.LifecycleWatcher: void addAppBreadcrumb(java.lang.String)
io.sentry.SentryReplayEvent: java.util.Date getReplayStartTimestamp()
io.sentry.Baggage: Baggage(io.sentry.ILogger)
io.sentry.transport.TransportResult$ErrorTransportResult: boolean isSuccess()
io.flutter.embedding.android.FlutterImageView: void init()
io.sentry.android.replay.capture.CaptureStrategy: void onScreenshotRecorded(android.graphics.Bitmap,kotlin.jvm.functions.Function2)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $values()
io.sentry.vendor.gson.stream.JsonWriter: void close()
io.sentry.Session: Session(java.lang.String,io.sentry.protocol.User,java.lang.String,java.lang.String)
io.sentry.SentryOptions: boolean isAttachThreads()
io.sentry.Hub: void removeExtra(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: ViewHierarchyNode$LCAResult(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$4: FlutterBluePlusPlugin$4(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.config.PropertiesProvider: java.lang.Long getLongProperty(java.lang.String)
io.sentry.HttpStatusCodeRange: HttpStatusCodeRange(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setClipboardData(java.lang.String)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean contains(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory getSslSocketFactory()
io.sentry.NoOpHub: io.sentry.ISpan getSpan()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$3: FlutterBluePlusPlugin$3(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.SynchronizedCollection: boolean isEmpty()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: void setImportantForContentCapture(boolean)
io.sentry.SentryRuntimeEventProcessor: io.sentry.SentryBaseEvent process(io.sentry.SentryBaseEvent)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void invokeMethodUIThread(java.lang.String,java.util.HashMap)
io.sentry.android.replay.capture.CaptureStrategy: io.sentry.android.replay.capture.CaptureStrategy convert()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.sentry.IConnectionStatusProvider: java.lang.String getConnectionType()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void initLoadingUnitMappingToComponentNames()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: void clearDeadListeners()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
io.sentry.Hub: void bindClient(io.sentry.ISentryClient)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String,io.sentry.android.replay.capture.BaseCaptureStrategy)
io.sentry.flutter.SentryFlutterReplayRecorder: void close()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.sentry.SentryTracer: java.lang.Throwable getThrowable()
io.sentry.protocol.SentryStackFrame: java.lang.String access$002(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.protocol.SentryPackage: void setUnknown(java.util.Map)
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.PlatformViewRenderTarget,android.view.View$OnFocusChangeListener,int,java.lang.Object)
io.sentry.SentryExecutorService: boolean isClosed()
io.sentry.android.ndk.NativeModuleListLoader: io.sentry.protocol.DebugImage[] loadModuleList()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,byte[])
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2: void invoke(io.sentry.android.replay.ReplayCache,long)
io.sentry.MainEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.protocol.DebugImage: java.lang.String access$802(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.protocol.Device: Device(io.sentry.protocol.Device)
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleBreadcrumbs(boolean)
io.flutter.embedding.engine.FlutterEngineGroupCache: io.flutter.embedding.engine.FlutterEngineGroup get(java.lang.String)
io.sentry.SentryDate: SentryDate()
io.sentry.metrics.MetricsApi: void distribution(java.lang.String,double,io.sentry.MeasurementUnit)
io.sentry.protocol.SentryRuntime$Deserializer: SentryRuntime$Deserializer()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
io.sentry.Sentry: Sentry()
io.sentry.android.replay.capture.SessionCaptureStrategy$pause$1: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.internal.gestures.UiElement: int hashCode()
io.sentry.android.replay.ReplayIntegration: ReplayIntegration(android.content.Context,io.sentry.transport.ICurrentDateProvider)
io.sentry.protocol.App: java.lang.String getAppBuild()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.sentry.android.core.ANRWatchDog: ANRWatchDog(io.sentry.transport.ICurrentDateProvider,long,long,boolean,io.sentry.android.core.ANRWatchDog$ANRListener,io.sentry.ILogger,io.sentry.android.core.MainLooperHandler,android.content.Context)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
io.sentry.cache.tape.QueueFile: boolean ringRead(long,byte[],int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
io.sentry.SentryClient: io.sentry.SentryEnvelope buildEnvelope(io.sentry.SentryReplayEvent,io.sentry.ReplayRecording,io.sentry.TraceContext,boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
io.sentry.protocol.DebugImage: void setDebugFile(java.lang.String)
io.sentry.EnvelopeReader: io.sentry.SentryEnvelope read(java.io.InputStream)
io.sentry.ProfilingTraceData: void setTraceId(java.lang.String)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: SurfaceProducerPlatformViewRenderTarget(io.flutter.view.TextureRegistry$SurfaceProducer)
io.sentry.rrweb.RRWebInteractionEvent: void setUnknown(java.util.Map)
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail: NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail(android.net.NetworkCapabilities,io.sentry.android.core.BuildInfoProvider,long)
io.sentry.android.replay.util.ComposeTextLayout: int getLineBottom(int)
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2: ReplayIntegration$onScreenshotRecorded$2(android.graphics.Bitmap,kotlin.jvm.internal.Ref$ObjectRef,io.sentry.android.replay.ReplayIntegration)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
io.sentry.android.replay.LastSegmentData: int component4()
io.sentry.protocol.Gpu: java.lang.String getVendorName()
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureEvent(io.sentry.ISentryClient,io.sentry.SentryEvent)
io.sentry.HubAdapter: io.sentry.ISpan getSpan()
io.sentry.android.core.performance.AppStartMetrics: void onApplicationPostCreate(android.app.Application)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.sentry.PerformanceCollectionData: io.sentry.MemoryCollectionData getMemoryData()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureMessage(io.sentry.IHub,java.lang.String)
io.sentry.SentryEvent: io.sentry.SentryLevel getLevel()
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: java.lang.String snakeToCamelCase(java.lang.String)
io.sentry.protocol.Device: void setScreenWidthPixels(java.lang.Integer)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
io.sentry.android.core.internal.threaddump.Lines: io.sentry.android.core.internal.threaddump.Lines readLines(java.io.File)
io.sentry.protocol.Response: java.lang.Object access$402(io.sentry.protocol.Response,java.lang.Object)
io.sentry.protocol.SentryTransaction: java.util.Map getUnknown()
io.sentry.android.core.ContextUtils: java.lang.String getApplicationName(android.content.Context)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map getPayloadUnknown()
io.sentry.protocol.SentryStackFrame: void setLock(io.sentry.SentryLockReason)
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String getTag()
io.sentry.protocol.SentryTransaction: io.sentry.protocol.TransactionInfo access$602(io.sentry.protocol.SentryTransaction,io.sentry.protocol.TransactionInfo)
io.sentry.android.replay.capture.CaptureStrategy: io.sentry.SentryReplayEvent$ReplayType getReplayType()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToBackground()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
io.sentry.protocol.Device$JsonKeys: Device$JsonKeys()
io.sentry.protocol.DebugImage: DebugImage()
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader getDebugImagesLoader()
io.sentry.protocol.SentryStackTrace$Deserializer: io.sentry.protocol.SentryStackTrace deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryBaseEvent: java.lang.String getEnvironment()
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.SpanContext: void setSampled(java.lang.Boolean,java.lang.Boolean)
io.sentry.SpanContext: void setOperation(java.lang.String)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
io.sentry.protocol.SentryTransaction: void setUnknown(java.util.Map)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView access$500(io.flutter.plugin.platform.PlatformViewsController)
io.sentry.SentryLockReason: void setThreadId(java.lang.Long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItemHeader getHeader()
io.sentry.protocol.SdkVersion: void setName(java.lang.String)
io.sentry.IOptionsObserver: void setProguardUuid(java.lang.String)
io.sentry.ExternalOptions: java.lang.String getDsn()
io.flutter.view.TextureRegistry$SurfaceProducer: boolean handlesCropAndRotation()
io.sentry.MainEventProcessor: void processNonCachedEvent(io.sentry.SentryBaseEvent)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
io.sentry.SentryItemType: io.sentry.SentryItemType resolve(java.lang.Object)
io.sentry.SentryOptions: void setTransportFactory(io.sentry.ITransportFactory)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.sentry.CheckIn: void setMonitorConfig(io.sentry.MonitorConfig)
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
io.sentry.protocol.SentryThread: void setName(java.lang.String)
io.sentry.SentryAppStartProfilingOptions$JsonKeys: SentryAppStartProfilingOptions$JsonKeys()
androidx.activity.ComponentActivity: void invalidateMenu()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void access$1700(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,java.util.concurrent.Semaphore)
io.sentry.cache.EnvelopeCache: void flushPreviousSession()
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering()
io.sentry.SpanContext: void setUnknown(java.util.Map)
io.sentry.rrweb.RRWebSpanEvent: void serializePayload(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel)
io.sentry.android.core.internal.gestures.SentryWindowCallback: void handleTouchEvent(android.view.MotionEvent)
io.sentry.protocol.MeasurementValue: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$4: void onScanFailed(int)
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator: boolean hasNext()
io.flutter.embedding.engine.systemchannels.ScribeChannel: ScribeChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromMetrics$14(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.embedding.android.FlutterActivity: void onWindowFocusChanged(boolean)
io.sentry.Sentry: void lambda$handleAppStartProfilingConfig$3(io.sentry.SentryOptions)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.fragment.app.Fragment: int getPopEnterAnim()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.ExclusiveAppComponent getExclusiveAppComponent()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void announce(java.lang.String)
io.sentry.android.replay.capture.BufferCaptureStrategy$Companion: BufferCaptureStrategy$Companion()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
io.sentry.Sentry: io.sentry.TracesSamplingDecision sampleAppStartProfiling(io.sentry.SentryOptions)
io.sentry.JsonObjectReader: java.lang.Object nextOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.flutter.embedding.android.FlutterActivity$1: void onBackCancelled()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: void lambda$sendCachedEnvelopes$0(io.sentry.SentryOptions,io.sentry.IHub)
io.sentry.TraceContext$TraceContextUser: java.lang.String getId()
io.flutter.plugin.platform.PlatformViewsController: void ensureValidRequest(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.JsonReflectionObjectSerializer: java.util.Map map(java.util.Map,io.sentry.ILogger)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
io.flutter.plugin.editing.ScribePlugin: boolean isStylusHandwritingAvailable()
io.sentry.protocol.TransactionInfo: void setUnknown(java.util.Map)
io.sentry.rrweb.RRWebBreadcrumbEvent: void setBreadcrumbTimestamp(double)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
io.sentry.Attachment: Attachment(byte[],java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendTransactionCallback getBeforeSendTransaction()
io.sentry.android.core.AndroidOptionsInitializer: java.io.File getCacheDir(android.content.Context)
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.rrweb.RRWebOptionsEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformViewsController: void enforceMinimumAndroidApiVersion(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
io.sentry.ExternalOptions: java.util.List getInAppExcludes()
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: java.lang.Object remove(int)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
io.sentry.protocol.Message$JsonKeys: Message$JsonKeys()
io.sentry.JsonSerializer: java.lang.Object deserializeCollection(java.io.Reader,java.lang.Class,io.sentry.JsonDeserializer)
io.sentry.rrweb.RRWebVideoEvent: long getSize()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.LifecycleWatcher: boolean access$000(io.sentry.android.core.LifecycleWatcher)
io.flutter.plugin.text.ProcessTextPlugin: boolean onActivityResult(int,int,android.content.Intent)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
io.sentry.android.replay.gestures.GestureRecorder$onRootViewsChanged$1$1: java.lang.Object invoke(java.lang.Object)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2(java.lang.String,java.lang.Object,java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.sentry.android.replay.ReplayIntegration$replayExecutor$2: java.util.concurrent.ScheduledExecutorService invoke()
io.sentry.transport.NoOpTransport: io.sentry.transport.RateLimiter getRateLimiter()
io.sentry.util.MapObjectReader: java.lang.Integer nextIntegerOrNull()
io.sentry.android.replay.capture.BaseCaptureStrategy$ReplayPersistingExecutorServiceThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.sentry.android.replay.RootViewsSpy$Companion$install$1$1$1: java.util.ArrayList invoke(java.util.ArrayList)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type valueOf(java.lang.String)
io.sentry.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)
io.sentry.protocol.Browser: boolean equals(java.lang.Object)
io.sentry.SentrySpanStorage: io.sentry.SentrySpanStorage getInstance()
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback getProfilesSampler()
io.sentry.Sentry: io.sentry.protocol.SentryId getLastEventId()
io.sentry.flutter.SentryFlutter$updateOptions$11: void invoke(boolean)
io.sentry.protocol.DebugImage: java.lang.String access$402(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.util.TracingUtils: void lambda$startNewTrace$1(io.sentry.IScope)
io.sentry.protocol.Message$Deserializer: io.sentry.protocol.Message deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.GeneratedVideo: long getDuration()
io.sentry.android.core.AndroidProfiler: long access$000(io.sentry.android.core.AndroidProfiler)
androidx.fragment.app.Fragment: boolean isHidden()
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureException(io.sentry.ISentryClient,java.lang.Throwable,io.sentry.Hint)
io.sentry.util.FileUtils: FileUtils()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: void release()
io.sentry.android.ndk.NativeScope: void addBreadcrumb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.rrweb.RRWebVideoEvent: java.util.Map getDataUnknown()
io.flutter.plugin.platform.PlatformViewRegistry: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.sentry.android.replay.capture.CaptureStrategy: int getCurrentSegment()
io.sentry.android.ndk.NativeScope: void removeExtra(java.lang.String)
io.flutter.plugin.common.JSONUtil: java.lang.Object unwrap(java.lang.Object)
io.sentry.SentryOptions: void setTransactionProfiler(io.sentry.ITransactionProfiler)
io.sentry.android.core.LoadClass: LoadClass()
io.sentry.metrics.CounterMetric: java.lang.Iterable serialize()
io.sentry.metrics.GaugeMetric: double getLast()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String access$302(io.sentry.rrweb.RRWebBreadcrumbEvent,java.lang.String)
io.flutter.embedding.android.KeyboardManager: java.util.Map getKeyboardState()
io.sentry.SentryTracer: void updateBaggageValues()
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
io.sentry.rrweb.RRWebMetaEvent: int access$102(io.sentry.rrweb.RRWebMetaEvent,int)
io.sentry.protocol.Browser: java.lang.String access$002(io.sentry.protocol.Browser,java.lang.String)
io.sentry.android.replay.LastSegmentData: java.util.Date getTimestamp()
io.sentry.SentryTraceHeader: java.lang.String getValue()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.sentry.protocol.SentryException: void setUnknown(java.util.Map)
io.flutter.plugin.platform.PlatformViewsController: int toLogicalPixels(double,float)
io.sentry.android.core.EnvelopeFileObserver: void onEvent(int,java.lang.String)
androidx.fragment.app.Fragment: void performStop()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
io.sentry.Stack$StackItem: io.sentry.ISentryClient getClient()
io.sentry.SentryOptions: SentryOptions(boolean)
io.sentry.android.replay.capture.SessionCaptureStrategy: void onScreenshotRecorded(android.graphics.Bitmap,kotlin.jvm.functions.Function2)
io.sentry.DefaultTransactionPerformanceCollector$2: DefaultTransactionPerformanceCollector$2(io.sentry.DefaultTransactionPerformanceCollector)
io.sentry.util.ClassLoaderUtils: java.lang.ClassLoader classLoaderOrDefault(java.lang.ClassLoader)
io.sentry.protocol.App: void setPermissions(java.util.Map)
io.sentry.ProfilingTraceData: java.lang.String access$2202(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long access$000(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: ViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.util.MapObjectReader: float nextFloat()
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit valueOf(java.lang.String)
io.sentry.DefaultTransactionPerformanceCollector: DefaultTransactionPerformanceCollector(io.sentry.SentryOptions)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void detachFromContentProvider()
io.sentry.protocol.SentryStackTrace: java.util.List getFrames()
io.sentry.android.replay.ReplayCache$ongoingSegmentFile$2: java.lang.Object invoke()
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: io.sentry.rrweb.RRWebSpanEvent toRRWebSpanEvent(io.sentry.Breadcrumb)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromSession(io.sentry.ISerializer,io.sentry.Session)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.ShutdownHookIntegration: java.lang.Thread getHook()
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String getAppStartOp(boolean)
io.sentry.SentryLockReason: void setPackageName(java.lang.String)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onContentChanged()
io.sentry.protocol.SentryStackFrame: void setSymbolAddr(java.lang.String)
io.sentry.android.replay.LastSegmentData: LastSegmentData(io.sentry.android.replay.ScreenshotRecorderConfig,io.sentry.android.replay.ReplayCache,java.util.Date,int,long,io.sentry.SentryReplayEvent$ReplayType,java.lang.String,java.util.List)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
io.sentry.protocol.MeasurementValue: java.lang.String getUnit()
io.sentry.PropagationContext: io.sentry.PropagationContext fromHeaders(io.sentry.ILogger,java.lang.String,java.util.List)
io.sentry.Hub: void pushScope()
androidx.fragment.app.Fragment: void performDestroyView()
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter beginArray()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
io.sentry.android.core.performance.AppStartMetrics: void setAppStartType(io.sentry.android.core.performance.AppStartMetrics$AppStartType)
io.sentry.Dsn: java.net.URI getSentryUri()
io.sentry.android.core.IDebugImagesLoader: java.util.Set loadDebugImagesForAddresses(java.util.Set)
io.sentry.protocol.SentryRuntime: java.util.Map getUnknown()
io.sentry.SentryOptions: io.sentry.ExperimentalOptions getExperimental()
io.sentry.profilemeasurements.ProfileMeasurementValue: java.lang.String access$102(io.sentry.profilemeasurements.ProfileMeasurementValue,java.lang.String)
io.sentry.protocol.SentryThread: void setCrashed(java.lang.Boolean)
io.flutter.plugin.editing.TextInputPlugin: android.text.Editable getEditable()
io.sentry.rrweb.RRWebInteractionEvent: void setPointerType(int)
io.sentry.cache.PersistingScopeObserver: void lambda$setFingerprint$7(java.util.Collection)
io.sentry.SentryOptions: boolean isDebug()
io.sentry.android.replay.capture.BufferCaptureStrategy: void createCurrentSegment$lambda$4(io.sentry.android.replay.capture.BufferCaptureStrategy,long,java.util.Date,io.sentry.protocol.SentryId,int,int,int,kotlin.jvm.functions.Function1)
io.sentry.android.core.SpanFrameMetricsCollector: void captureFrameMetrics(io.sentry.ISpan)
io.sentry.util.StringUtils: java.lang.String getStringAfterDot(java.lang.String)
io.sentry.android.core.SentryLogcatAdapter: SentryLogcatAdapter()
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.fragment.app.Fragment: void onLowMemory()
io.sentry.config.PropertiesProvider$-CC: java.util.List $default$getList(io.sentry.config.PropertiesProvider,java.lang.String)
io.sentry.Breadcrumb: boolean equals(java.lang.Object)
io.flutter.embedding.android.KeyChannelResponder: void lambda$handleEvent$0(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void stopCollection(java.lang.String)
io.flutter.plugin.common.BinaryMessenger: void enableBufferingIncomingMessages()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.sentry.SentryBaseEvent: void setDebugMeta(io.sentry.protocol.DebugMeta)
io.flutter.plugin.common.BasicMessageChannel: void setWarnsOnChannelOverflow(io.flutter.plugin.common.BinaryMessenger,java.lang.String,boolean)
io.flutter.embedding.android.FlutterView: android.view.View findViewByAccessibilityIdTraversal(int)
io.sentry.SentryTracer: io.sentry.ISpan createChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $values()
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent)
io.sentry.metrics.MetricsHelper: java.lang.String getUnitName(io.sentry.MeasurementUnit)
io.sentry.NoOpSpan: void finish()
io.sentry.cache.CacheStrategy: io.sentry.SentryEnvelope readEnvelope(java.io.File)
io.sentry.cache.PersistingOptionsObserver: void setReplayErrorSampleRate(java.lang.Double)
io.sentry.protocol.Browser: java.lang.String getName()
io.sentry.SentryClient: io.sentry.IMetricsAggregator getMetricsAggregator()
io.sentry.TransactionContext: void setParentSampled(java.lang.Boolean)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
io.sentry.JavaMemoryCollector: JavaMemoryCollector()
io.sentry.android.replay.ScreenshotRecorder$maskingPaint$2: java.lang.Object invoke()
io.sentry.android.replay.util.AndroidTextLayout: int getLineVisibleEnd(int)
io.sentry.HubAdapter: void pushScope()
io.sentry.cache.CacheStrategy: boolean isValidEnvelope(io.sentry.SentryEnvelope)
io.sentry.util.FileUtils: java.lang.String readText(java.io.File)
io.sentry.android.ndk.NativeScope: void nativeSetTag(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
io.sentry.ISentryClient: io.sentry.IMetricsAggregator getMetricsAggregator()
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
io.sentry.rrweb.RRWebVideoEvent: java.lang.String access$002(io.sentry.rrweb.RRWebVideoEvent,java.lang.String)
androidx.fragment.app.Fragment: boolean isStateSaved()
io.sentry.android.core.NdkIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
io.sentry.NoOpHub: void setSpanContext(java.lang.Throwable,io.sentry.ISpan,java.lang.String)
io.sentry.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.sentry.android.replay.capture.CaptureStrategy: void setCurrentSegment(int)
io.sentry.transport.AsyncHttpTransport$AsyncConnectionThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.flutter.plugin.text.ProcessTextPlugin: void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.SentryTransaction: java.util.Map getMeasurements()
io.sentry.SentryOptions: void setViewHierarchyExporters(java.util.List)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
io.sentry.flutter.SentryFlutterPlugin: void setReplayConfig(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: void performViewCreated()
io.sentry.NoOpTransaction: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SpanOptions)
io.sentry.ProfilingTraceData$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult access$findLCA(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.sentry.ITransaction: io.sentry.protocol.Contexts getContexts()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2: java.lang.Boolean invoke(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
io.sentry.util.SentryRandom: io.sentry.util.Random current()
io.sentry.Breadcrumb: io.sentry.Breadcrumb navigation(java.lang.String,java.lang.String)
io.sentry.protocol.Mechanism: java.util.Map access$402(io.sentry.protocol.Mechanism,java.util.Map)
io.sentry.TransactionOptions: TransactionOptions()
io.sentry.protocol.SentryStackFrame: java.lang.Boolean access$902(io.sentry.protocol.SentryStackFrame,java.lang.Boolean)
io.sentry.Span: void finish()
io.sentry.instrumentation.file.FileOutputStreamInitData: FileOutputStreamInitData(java.io.File,boolean,io.sentry.ISpan,java.io.FileOutputStream,io.sentry.SentryOptions)
io.sentry.OutboxSender: void logUnexpectedEventId(io.sentry.SentryEnvelope,io.sentry.protocol.SentryId,int)
io.sentry.android.replay.WindowManagerSpy: java.lang.Class getWindowManagerClass()
io.flutter.plugin.platform.PlatformViewsController: void lambda$configureForVirtualDisplay$0(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,android.view.View,boolean)
io.sentry.NoOpScope: io.sentry.PropagationContext getPropagationContext()
io.sentry.android.replay.util.PersistableLinkedList: int getSize()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: FlutterFragment$NewEngineInGroupFragmentBuilder(java.lang.String)
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.nio.ByteBuffer)
io.sentry.NoOpSpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.sentry.protocol.Device$Deserializer: Device$Deserializer()
io.sentry.android.replay.ReplayCache$persistSegmentValues$2: java.lang.CharSequence invoke(java.util.Map$Entry)
io.sentry.NoOpSentryExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)
io.sentry.ProfilingTraceData: void setDeviceOsBuildNumber(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
io.sentry.NoOpScope: void setLevel(io.sentry.SentryLevel)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.sentry.SentryReplayEvent: int hashCode()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
io.sentry.android.replay.WindowRecorder: void resume()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $values()
io.flutter.embedding.engine.renderer.RenderSurface: void pause()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void endOfStream()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
io.sentry.SentrySpanStorage: SentrySpanStorage()
io.sentry.android.replay.ReplayIntegration: void onRateLimitChanged(io.sentry.transport.RateLimiter)
io.sentry.SentryReplayOptions: long getSessionDuration()
io.sentry.protocol.SentryTransaction: SentryTransaction(java.lang.String,java.lang.Double,java.lang.Double,java.util.List,java.util.Map,java.util.Map,io.sentry.protocol.TransactionInfo)
io.sentry.IHub: void startSession()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.SentryReplayOptions: SentryReplayOptions(boolean,io.sentry.protocol.SdkVersion)
io.sentry.android.core.SpanFrameMetricsCollector: void onFrameMetricCollected(long,long,long,long,boolean,boolean,float)
io.sentry.protocol.SentryStackTrace: void setFrames(java.util.List)
io.sentry.SentryReplayEvent: java.util.List getUrls()
io.sentry.rrweb.RRWebVideoEvent: int getTop()
io.sentry.android.replay.ReplayIntegration$PreviousReplayHint: ReplayIntegration$PreviousReplayHint()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
io.sentry.Sentry: void lambda$notifyOptionsObservers$4(io.sentry.SentryOptions)
io.sentry.flutter.SentryFlutterPlugin$setupReplay$3: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
io.sentry.android.core.AnrV2Integration$AnrV2Hint: boolean ignoreCurrentThread()
io.sentry.ExternalOptions: java.util.Map getTags()
io.sentry.android.replay.util.TextLayout: int getLineTop(int)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
io.sentry.internal.debugmeta.IDebugMetaLoader: java.util.List loadDebugMeta()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment createFlutterFragment()
io.sentry.android.core.NdkHandlerStrategy: io.sentry.android.core.NdkHandlerStrategy[] values()
io.sentry.protocol.SentryThread: java.lang.Boolean access$402(io.sentry.protocol.SentryThread,java.lang.Boolean)
io.sentry.util.MapObjectReader: java.util.List nextListOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $values()
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleTracingAutoFinish(boolean)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
io.sentry.protocol.SentryTransaction: java.util.List getSpans()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(boolean)
io.sentry.SentryTracer$2: void run()
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
io.sentry.flutter.SentryFlutter$updateOptions$25: void invoke(int)
io.sentry.SpotlightIntegration: void sendEnvelope(io.sentry.SentryEnvelope)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: void runInBackground(kotlin.jvm.functions.Function0)
io.sentry.IScope: void setContexts(java.lang.String,java.lang.Number)
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit[] $values()
androidx.activity.ComponentActivity: void onPanelClosed(int,android.view.Menu)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.view.Surface getSurface()
io.sentry.flutter.SentryFlutter$updateOptions$23: void invoke(long)
io.sentry.android.core.ContextUtils: java.lang.String getVersionName(android.content.pm.PackageInfo)
io.sentry.vendor.gson.stream.JsonReader: void skipQuotedValue(char)
io.sentry.protocol.Message: java.lang.String getFormatted()
io.sentry.android.replay.WindowRecorder: WindowRecorder(io.sentry.SentryOptions,io.sentry.android.replay.ScreenshotRecorderCallback,io.sentry.android.replay.util.MainLooperHandler,java.util.concurrent.ScheduledExecutorService)
io.sentry.android.core.AnrIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: SpanFrameMetricsCollector$Frame(long)
io.flutter.embedding.android.FlutterFragmentActivity: void onCreate(android.os.Bundle)
io.sentry.MetricsAggregator: void run()
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.protocol.SdkVersion$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
io.sentry.android.replay.ScreenshotRecorder: void close()
io.flutter.plugin.platform.PlatformViewsController$1: long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.replay.ScreenshotRecorder: void resume()
io.sentry.protocol.SentryStackFrame: java.lang.String access$802(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.UserFeedback$Deserializer: UserFeedback$Deserializer()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
io.sentry.CircularFifoQueue: CircularFifoQueue()
io.sentry.IHub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent)
io.sentry.metrics.MetricsHelper: double convertNanosTo(io.sentry.MeasurementUnit$Duration,long)
io.flutter.plugin.platform.PlatformPlugin$1: void share(java.lang.String)
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String getUnit()
io.sentry.TransactionOptions: void setWaitForChildren(boolean)
io.sentry.protocol.SentrySpan: java.math.BigDecimal doubleToBigDecimal(java.lang.Double)
io.sentry.android.core.SentryAndroidOptions: void setEnableAppLifecycleBreadcrumbs(boolean)
io.sentry.android.core.internal.gestures.SentryGestureListener: void addBreadcrumb(io.sentry.internal.gestures.UiElement,io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType,java.util.Map,android.view.MotionEvent)
io.flutter.embedding.android.FlutterFragmentActivity: android.widget.FrameLayout provideRootLayout(android.content.Context)
io.sentry.ObjectReader: java.util.TimeZone nextTimeZoneOrNull(io.sentry.ILogger)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.sentry.android.core.SentryAndroidOptions: void setEnableSystemEventBreadcrumbs(boolean)
io.sentry.android.core.ContextUtils: android.content.Intent registerReceiver(android.content.Context,io.sentry.SentryOptions,android.content.BroadcastReceiver,android.content.IntentFilter)
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
io.sentry.android.core.internal.gestures.ViewUtils: boolean isViewIdGenerated(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
io.sentry.protocol.App: java.util.Map access$702(io.sentry.protocol.App,java.util.Map)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: double doubleTimestamp(java.util.Date)
io.flutter.embedding.engine.loader.ResourceExtractor$1: ResourceExtractor$1()
androidx.fragment.app.Fragment: boolean isMenuVisible()
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
io.sentry.SentryOptions: java.util.List getInAppIncludes()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
io.sentry.protocol.Device: java.lang.String getModelId()
io.sentry.android.replay.ReplayIntegration: void unregisterRootViewListeners()
io.sentry.android.replay.util.ExecutorsKt: java.util.concurrent.Future submitSafely(io.sentry.ISentryExecutorService,io.sentry.SentryOptions,java.lang.String,java.lang.Runnable)
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions setIsSerial(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.sentry.CheckIn$Deserializer: CheckIn$Deserializer()
io.sentry.protocol.DebugMeta: void setSdkInfo(io.sentry.protocol.SdkInfo)
io.sentry.JsonObjectDeserializer$TokenArray: JsonObjectDeserializer$TokenArray(io.sentry.JsonObjectDeserializer$1)
io.sentry.transport.ReusableCountLatch: int getCount()
io.sentry.protocol.Device: java.lang.Integer access$3102(io.sentry.protocol.Device,java.lang.Integer)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.ISentryClient,io.sentry.protocol.SentryTransaction)
io.sentry.android.ndk.NativeScope: void nativeSetExtra(java.lang.String,java.lang.String)
io.sentry.SentryBaseEvent: io.sentry.protocol.SentryId access$000(io.sentry.SentryBaseEvent)
io.sentry.HubAdapter: void reportFullyDisplayed()
io.sentry.util.thread.MainThreadChecker: boolean isMainThread(io.sentry.protocol.SentryThread)
io.sentry.protocol.Gpu: void setId(java.lang.Integer)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
io.sentry.android.core.UserInteractionIntegration: void stopTracking(android.app.Activity)
io.sentry.IConnectionStatusProvider: io.sentry.IConnectionStatusProvider$ConnectionStatus getConnectionStatus()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(java.lang.Number)
io.sentry.hints.Enqueable: void markEnqueued()
io.sentry.SentryOptions: void setInstrumenter(io.sentry.Instrumenter)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
io.flutter.embedding.android.FlutterActivity: void onResume()
io.sentry.Span: io.sentry.SpanId getSpanId()
io.sentry.Baggage: void set(java.lang.String,java.lang.String)
io.sentry.NoOpLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Object[])
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.SentryExceptionFactory: java.util.Deque extractExceptionQueue(java.lang.Throwable)
io.sentry.android.core.internal.gestures.SentryWindowCallback$MotionEventObtainer: android.view.MotionEvent obtain(android.view.MotionEvent)
io.sentry.Breadcrumb: java.lang.String access$402(io.sentry.Breadcrumb,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
io.sentry.SentryValues: java.util.List getValues()
io.sentry.metrics.MetricsHelper: java.lang.String getMetricBucketKey(io.sentry.metrics.MetricType,java.lang.String,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.ITransaction: java.lang.Boolean isSampled()
io.sentry.Hint: void clear()
io.sentry.android.core.SentryAndroidOptions: void setAnrReportInDebug(boolean)
io.sentry.SpanContext: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.util.TraceSection: io.flutter.util.TraceSection scoped(java.lang.String)
io.sentry.SentryEvent: void setLevel(io.sentry.SentryLevel)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
io.sentry.android.core.ContextUtils: boolean isForegroundImportance()
io.sentry.protocol.Device: java.lang.String access$2702(io.sentry.protocol.Device,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int access$1400(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
io.sentry.rrweb.RRWebEvent$JsonKeys: RRWebEvent$JsonKeys()
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$lambda$7$$inlined$sortedBy$1: CaptureStrategy$Companion$buildReplay$lambda$7$$inlined$sortedBy$1()
io.flutter.embedding.android.KeyboardManager$ViewDelegate: boolean onTextInputKeyEvent(android.view.KeyEvent)
io.sentry.IConnectionStatusProvider$IConnectionStatusObserver: void onConnectionStatusChanged(io.sentry.IConnectionStatusProvider$ConnectionStatus)
io.sentry.SentryAppStartProfilingOptions: boolean isProfileSampled()
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
io.sentry.AsyncHttpTransportFactory: AsyncHttpTransportFactory()
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter value(java.lang.String)
io.sentry.clientreport.IClientReportRecorder: io.sentry.SentryEnvelope attachReportToEnvelope(io.sentry.SentryEnvelope)
io.sentry.TransactionOptions: io.sentry.CustomSamplingContext getCustomSamplingContext()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
io.sentry.android.replay.WindowManagerSpy$windowManagerClass$2: WindowManagerSpy$windowManagerClass$2()
io.sentry.clientreport.NoOpClientReportRecorder: io.sentry.SentryEnvelope attachReportToEnvelope(io.sentry.SentryEnvelope)
io.sentry.CheckIn: void setStatus(io.sentry.CheckInStatus)
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.sentry.protocol.SentryStackFrame: void setContextLine(java.lang.String)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long access$100(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
io.sentry.SamplingContext: SamplingContext(io.sentry.TransactionContext,io.sentry.CustomSamplingContext)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.sentry.SentryTracer: io.sentry.TracesSamplingDecision getSamplingDecision()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
io.sentry.util.PropagationTargetsUtils: PropagationTargetsUtils()
io.sentry.util.thread.NoOpMainThreadChecker: boolean isMainThread()
io.sentry.protocol.Request: java.lang.String access$1002(io.sentry.protocol.Request,java.lang.String)
io.sentry.IHub: io.sentry.protocol.SentryId getLastEventId()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void commitBackGesture()
io.sentry.ProfilingTraceData: java.lang.String access$2302(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.SentryOptions: void setCron(io.sentry.SentryOptions$Cron)
io.sentry.android.core.AnrV2EventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.protocol.Device: java.lang.String access$2802(io.sentry.protocol.Device,java.lang.String)
io.sentry.protocol.SentryTransaction: java.lang.Double getStartTimestamp()
io.sentry.NoOpConnectionStatusProvider: boolean addConnectionStatusObserver(io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: SentryGestureListener$GestureType(java.lang.String,int)
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: KeyboardManager$CharacterCombiner()
io.sentry.flutter.SentryFlutter$updateOptions$7: java.lang.Object invoke(java.lang.Object)
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int)
io.sentry.ExternalOptions: java.util.Set getBundleIds()
io.sentry.protocol.SentryStackTrace: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.transport.ReusableCountLatch$Sync: int getCount()
io.sentry.HubAdapter: void captureUserFeedback(io.sentry.UserFeedback)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureException(io.sentry.ISentryClient,java.lang.Throwable)
io.sentry.SentryOptions: void addContextTag(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void removeTag(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.NoOpTransaction: void finish(io.sentry.SpanStatus,io.sentry.SentryDate)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
io.sentry.JsonObjectDeserializer$Token: java.lang.Object getValue()
io.sentry.flutter.SentryFlutterPlugin: java.util.List serialize(java.util.List)
io.flutter.plugin.platform.PlatformViewsController: long access$800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.NoOpTransaction: void setDescription(java.lang.String)
io.sentry.protocol.Gpu: java.lang.String access$802(io.sentry.protocol.Gpu,java.lang.String)
io.sentry.SentryDate: boolean isAfter(io.sentry.SentryDate)
io.sentry.flutter.SentryFlutterReplayRecorder: void resume()
io.sentry.rrweb.RRWebEventType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
io.sentry.android.core.NdkIntegration: void close()
io.sentry.android.core.DeviceInfoUtil: io.sentry.protocol.Device collectDeviceInformation(boolean,boolean)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: boolean matches(java.util.regex.Matcher,java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
io.sentry.TransactionContext: TransactionContext(java.lang.String,io.sentry.protocol.TransactionNameSource,java.lang.String,io.sentry.TracesSamplingDecision)
io.sentry.protocol.App: java.lang.String access$602(io.sentry.protocol.App,java.lang.String)
io.sentry.ExternalOptions: java.lang.String getRelease()
io.sentry.ProfilingTraceData: java.lang.String getTraceId()
io.sentry.SentryReplayOptions: java.lang.Double getSessionSampleRate()
io.sentry.android.replay.LastSegmentData: java.lang.String toString()
io.sentry.TransactionContext: io.sentry.Instrumenter getInstrumenter()
io.sentry.flutter.SentryFlutterPlugin: void endNativeFrames(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.instrumentation.file.SentryFileOutputStream: void write(byte[])
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
io.sentry.util.HttpUtils: java.util.List filterOutSecurityCookiesFromHeader(java.util.Enumeration,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
io.sentry.Stack$StackItem: Stack$StackItem(io.sentry.SentryOptions,io.sentry.ISentryClient,io.sentry.IScope)
io.flutter.embedding.android.FlutterView: boolean onTextInputKeyEvent(android.view.KeyEvent)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
io.sentry.android.core.AndroidProfiler: io.sentry.android.core.AndroidProfiler$ProfileStartData start()
io.sentry.ISpan: io.sentry.SentryDate getStartDate()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getDartEntrypointLibraryUri()
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$ImageViewHierarchyNode: ViewHierarchyNode$ImageViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect)
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
io.sentry.instrumentation.file.SentryFileInputStream$Factory: boolean isTracingEnabled(io.sentry.IHub)
io.sentry.android.replay.capture.CaptureStrategy: java.util.Date getSegmentTimestamp()
io.sentry.transport.HttpConnection: java.net.HttpURLConnection open()
io.sentry.util.MapObjectReader: java.util.Map nextMapOfListOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.UserFeedback: java.lang.String toString()
io.sentry.JsonObjectDeserializer: java.lang.Object nextNumber(io.sentry.JsonObjectReader)
io.sentry.SpanOptions: boolean isTrimStart()
io.sentry.Scope: void setContexts(java.lang.String,java.lang.Character)
io.sentry.protocol.SentryThread: java.lang.Integer access$102(io.sentry.protocol.SentryThread,java.lang.Integer)
io.sentry.SentryEnvelopeItem: SentryEnvelopeItem(io.sentry.SentryEnvelopeItemHeader,byte[])
io.sentry.JsonObjectReader: java.lang.Object nextObjectOrNull()
androidx.appcompat.widget.Toolbar: void setTitle(int)
io.sentry.backpressure.IBackpressureMonitor: void start()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.internal.gestures.SentryGestureListener: void stopTracing(io.sentry.SpanStatus)
io.sentry.Hub: void setFingerprint(java.util.List)
io.sentry.metrics.GaugeMetric: int getCount()
io.sentry.rrweb.RRWebEvent: io.sentry.rrweb.RRWebEventType getType()
io.sentry.protocol.User: void setIpAddress(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.internal.threaddump.Lines: boolean hasNext()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getCachedEngineId()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $values()
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String getActivityName(android.app.Activity)
io.sentry.util.MapObjectReader: void nextUnknown(io.sentry.ILogger,java.util.Map,java.lang.String)
io.sentry.android.core.performance.AppStartMetrics: AppStartMetrics()
io.sentry.android.core.internal.util.Debouncer: Debouncer(io.sentry.transport.ICurrentDateProvider,long,int)
io.sentry.android.replay.capture.BufferCaptureStrategy: void onConfigurationChanged(io.sentry.android.replay.ScreenshotRecorderConfig)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
io.sentry.SentryOptions: boolean isEnableDefaultTagsForMetrics()
io.sentry.protocol.Mechanism: void setUnknown(java.util.Map)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.util.CollectionUtils$Predicate: boolean test(java.lang.Object)
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.sentry.MonitorConfig$Deserializer: MonitorConfig$Deserializer()
io.sentry.android.replay.capture.SessionCaptureStrategy: void start$lambda$0(io.sentry.android.replay.capture.SessionCaptureStrategy,io.sentry.IScope)
io.sentry.protocol.SentryThread: java.lang.Long access$002(io.sentry.protocol.SentryThread,java.lang.Long)
io.sentry.NoOpSpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.flutter.embedding.engine.loader.FlutterLoader$1: void lambda$call$0()
io.sentry.flutter.SentryFlutter$updateOptions$4: SentryFlutter$updateOptions$4(io.sentry.android.core.SentryAndroidOptions)
io.sentry.DiagnosticLogger: io.sentry.ILogger getLogger()
io.sentry.rrweb.RRWebOptionsEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.rrweb.RRWebVideoEvent: void setSegmentId(int)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode component3()
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: android.view.View remove(int)
io.sentry.flutter.SentryFlutterPlugin$setupReplay$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
io.sentry.Hub: io.sentry.ITransaction getTransaction()
io.sentry.protocol.Device: java.lang.Float getBatteryLevel()
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
io.sentry.protocol.SentryException: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.Span: java.lang.String getOperation()
io.sentry.SentryEvent: java.lang.String getLogger()
io.sentry.profilemeasurements.ProfileMeasurement$Deserializer: ProfileMeasurement$Deserializer()
io.sentry.android.core.internal.threaddump.Lines: io.sentry.android.core.internal.threaddump.Line next()
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason[] $values()
io.sentry.config.PropertiesProvider: java.util.List getList(java.lang.String)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromProfilingTrace$20(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.OptionsContainer: OptionsContainer(java.lang.Class)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
io.sentry.SentryTracer: void setName(java.lang.String)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.lang.Integer getInteger(java.util.regex.Matcher,int,java.lang.Integer)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: java.lang.Object getLifecycle()
io.sentry.NoOpTransaction: io.sentry.BaggageHeader toBaggageHeader(java.util.List)
io.sentry.android.core.SendCachedEnvelopeIntegration: void onConnectionStatusChanged(io.sentry.IConnectionStatusProvider$ConnectionStatus)
io.sentry.flutter.SentryFlutter: void access$updateReplayOptions(io.sentry.flutter.SentryFlutter,io.sentry.android.core.SentryAndroidOptions,java.util.Map)
io.sentry.metrics.MetricsHelper: long getCutoffTimestampMs(long)
io.sentry.android.replay.ScreenshotRecorderConfig: float getScaleFactorY()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder withNewEngine()
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onActionModeStarted(android.view.ActionMode)
io.sentry.util.HttpUtils: java.lang.String filterOutSecurityCookies(java.lang.String,java.util.List)
io.sentry.protocol.User: java.lang.String getId()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double getHeight()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.activity.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
io.flutter.embedding.android.FlutterFragment: void onBackPressed()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: io.sentry.rrweb.RRWebInteractionEvent$InteractionType[] values()
io.sentry.IHub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel)
io.sentry.protocol.Device: java.lang.String getFamily()
io.sentry.android.replay.ScreenshotRecorderConfig: int component5()
io.flutter.view.AccessibilityBridge: void setAccessibleNavigation(boolean)
io.sentry.cache.tape.QueueFile: io.sentry.cache.tape.QueueFile$Element readElement(long)
io.sentry.android.replay.WindowSpy$windowField$2: java.lang.reflect.Field invoke()
io.sentry.rrweb.RRWebSpanEvent: java.lang.String access$102(io.sentry.rrweb.RRWebSpanEvent,java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void access$600(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,java.lang.String)
io.sentry.TransactionContext: void setForNextAppStart(boolean)
io.sentry.Hint: void set(java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
io.sentry.MemoryCollectionData: MemoryCollectionData(long,long,long)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: long getId()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
io.flutter.view.VsyncWaiter: void init()
io.flutter.embedding.engine.renderer.FlutterRenderer: void translateFeatureBounds(int[],int,android.graphics.Rect)
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache getEnvelopeDiskCache()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.protocol.Device: void setId(java.lang.String)
io.sentry.protocol.Browser: Browser(io.sentry.protocol.Browser)
io.sentry.protocol.SentryStackFrame: void setFramesOmitted(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$run$0(io.sentry.transport.TransportResult,io.sentry.hints.SubmissionResult)
io.sentry.SpanContext: java.lang.String getOrigin()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
io.sentry.OutboxSender: void logItemCaptured(int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.WindowManagerHandler,android.content.Context)
io.sentry.android.replay.util.FixedWindowCallback: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
io.sentry.protocol.Geo: java.lang.String access$202(io.sentry.protocol.Geo,java.lang.String)
io.sentry.Scope: void setContexts(java.lang.String,java.lang.String)
io.sentry.profilemeasurements.ProfileMeasurementValue: ProfileMeasurementValue()
io.sentry.SentryOptions: void setProfilesSampler(io.sentry.SentryOptions$ProfilesSamplerCallback)
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
io.sentry.protocol.SentryTransaction$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.sentry.transport.HttpConnection: HttpConnection(io.sentry.SentryOptions,io.sentry.RequestDetails,io.sentry.transport.RateLimiter)
io.sentry.SentryOptions: void setCacheDirPath(java.lang.String)
io.sentry.protocol.SentryThread: void setPriority(java.lang.Integer)
io.sentry.SentryBaseEvent: void setExtras(java.util.Map)
io.sentry.SentryOptions: java.lang.String getDsn()
io.sentry.flutter.SentryFlutter: io.sentry.SentryReplayEvent updateReplayOptions$lambda$4(java.util.Map,io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.HubAdapter: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext,io.sentry.TransactionOptions)
io.sentry.android.replay.ReplayIntegration$rootViewsSpy$2: io.sentry.android.replay.RootViewsSpy invoke()
io.sentry.metrics.IMetricsClient: io.sentry.protocol.SentryId captureMetrics(io.sentry.metrics.EncodedMetrics)
io.sentry.cache.tape.QueueFile$Element: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$2: void onReceive(android.content.Context,android.content.Intent)
androidx.activity.ComponentActivity: void onBackPressed()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
io.sentry.rrweb.RRWebVideoEvent: java.util.Map getUnknown()
io.sentry.PropagationContext: io.sentry.PropagationContext fromHeaders(io.sentry.ILogger,java.lang.String,java.lang.String)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$ImageTextureEntry createImageTexture()
io.sentry.protocol.SdkInfo: java.lang.Integer access$302(io.sentry.protocol.SdkInfo,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.sentry.protocol.MetricSummary: void setCount(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
io.sentry.flutter.SentryFlutterPlugin: void setTag(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.sentry.SentryBaseEvent: io.sentry.protocol.Request getRequest()
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList)
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
io.sentry.transport.ProxyAuthenticator: java.net.PasswordAuthentication getPasswordAuthentication()
io.sentry.Baggage: java.lang.String getUserSegment()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean isVisible()
io.sentry.ProfilingTraceData: java.lang.String getTruncationReason()
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
io.flutter.embedding.engine.FlutterEngine: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.systemchannels.ScribeChannel$1: ScribeChannel$1(io.flutter.embedding.engine.systemchannels.ScribeChannel)
io.sentry.protocol.ViewHierarchyNode: void setX(java.lang.Double)
io.sentry.protocol.SentryStackFrame: void setPreContext(java.util.List)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
io.sentry.android.core.AnrV2EventProcessor: java.lang.Long getMemorySize(android.app.ActivityManager$MemoryInfo)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
io.sentry.ISpan: java.lang.String getDescription()
io.sentry.protocol.Mechanism$Deserializer: Mechanism$Deserializer()
io.sentry.Session: void end(java.util.Date)
io.sentry.Sentry: void init(io.sentry.Sentry$OptionsConfiguration,boolean)
io.sentry.util.UrlUtils$UrlDetails: java.lang.String getQuery()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.flutter.embedding.engine.systemchannels.BackGestureChannel: java.util.Map backEventToJsonMap(android.window.BackEvent)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
io.flutter.embedding.android.KeyboardManager: void destroy()
io.sentry.NoOpHub: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.sentry.SentryOptions: io.sentry.SentryLevel getDiagnosticLevel()
io.sentry.NoOpSpan: void setMeasurement(java.lang.String,java.lang.Number)
io.sentry.metrics.MetricsApi: void set(java.lang.String,java.lang.String,io.sentry.MeasurementUnit,java.util.Map,java.lang.Long)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
io.flutter.view.AccessibilityBridge: int access$7500()
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.android.FlutterView: boolean access$202(io.flutter.embedding.android.FlutterView,boolean)
io.sentry.NoOpHub: void setLevel(io.sentry.SentryLevel)
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty persistableAtomic$default(io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.Object,java.lang.String,kotlin.jvm.functions.Function3,int,java.lang.Object)
io.sentry.ReplayRecording: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.MetricSummary: double getMax()
io.flutter.embedding.engine.FlutterEngineCache: boolean contains(java.lang.String)
io.sentry.EnvelopeSender: void processDirectory(java.io.File)
io.sentry.ExternalOptions: void setDist(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
io.sentry.metrics.MetricsApi: void gauge(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,java.lang.Long)
io.sentry.Hub: Hub(io.sentry.SentryOptions,io.sentry.Stack$StackItem)
io.sentry.TraceContext$TraceContextUser$Deserializer: io.sentry.TraceContext$TraceContextUser deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryBaseEvent: java.util.Map getTags()
io.sentry.NoOpLogger: io.sentry.NoOpLogger getInstance()
io.sentry.SentryClient$SortBreadcrumbsByDate: SentryClient$SortBreadcrumbsByDate()
io.sentry.SynchronizedQueue: boolean offer(java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
io.sentry.ISentryClient: io.sentry.transport.RateLimiter getRateLimiter()
io.sentry.SentryOptions: java.util.List getInAppExcludes()
io.sentry.Span: java.util.Map getMeasurements()
io.sentry.android.core.AppLifecycleIntegration: void lambda$register$0(io.sentry.IHub)
io.sentry.ProfilingTraceData: java.util.List lambda$new$0()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
io.sentry.vendor.Base64: byte[] decode(byte[],int)
io.sentry.NoOpSentryClient: void close(boolean)
io.sentry.Scope: void clearSession()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
io.sentry.protocol.Device: void setScreenDensity(java.lang.Float)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: java.lang.Object invoke()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(boolean)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter beginArray()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
io.sentry.protocol.ViewHierarchyNode: java.util.Map getUnknown()
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
io.sentry.ProfilingTransactionData: java.lang.Long getRelativeStartCpuMs()
io.sentry.Session: io.sentry.Session clone()
io.sentry.UncaughtExceptionHandlerIntegration: UncaughtExceptionHandlerIntegration(io.sentry.UncaughtExceptionHandler)
io.sentry.rrweb.RRWebEvent$Deserializer: RRWebEvent$Deserializer()
io.sentry.cache.tape.QueueFile: void ringWrite(long,byte[],int,int)
io.sentry.android.core.AnrV2EventProcessor: void setOptionsTags(io.sentry.SentryBaseEvent)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiChangeListener()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.sentry.vendor.gson.stream.JsonWriter: void beforeValue()
io.sentry.android.replay.R: R()
io.sentry.Hub: void setUser(io.sentry.protocol.User)
io.sentry.NoOpSentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.IScope,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.protocol.SentryStackFrame: java.lang.String getFilename()
io.sentry.NoOpTransaction: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.flutter.embedding.android.FlutterFragment: boolean attachToEngineAutomatically()
io.sentry.SynchronizedQueue: int hashCode()
io.sentry.protocol.Gpu$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
io.flutter.plugin.common.PluginRegistry$NewIntentListener: boolean onNewIntent(android.content.Intent)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.fragment.app.Fragment: boolean isRemoving()
io.sentry.ILogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Object[])
io.sentry.SentryEvent: java.util.List getFingerprints()
io.sentry.MonitorSchedule: io.sentry.MonitorSchedule crontab(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
io.sentry.rrweb.RRWebSpanEvent: java.util.Map getData()
io.sentry.Breadcrumb: io.sentry.Breadcrumb http(java.lang.String,java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback getBeforeSend()
io.sentry.UserFeedback: void setEmail(java.lang.String)
androidx.appcompat.widget.SearchView: int getInputType()
io.flutter.embedding.android.KeyData: java.nio.ByteBuffer toBytes()
io.sentry.SentryOptions: java.lang.String getCacheDirPath()
io.sentry.android.core.AnrV2EventProcessor: void setPlatform(io.sentry.SentryBaseEvent)
io.sentry.SpanContext: boolean equals(java.lang.Object)
io.sentry.vendor.gson.stream.JsonReader: void checkLenient()
io.sentry.IScopeObserver: void setExtra(java.lang.String,java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$1: void run()
io.sentry.ISentryExecutorService: boolean isClosed()
io.sentry.flutter.SentryFlutter$updateOptions$24$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.sentry.protocol.SentryStackFrame: void setModule(java.lang.String)
io.sentry.Baggage: java.lang.String getTransaction()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.sentry.ISentryClient: void captureSession(io.sentry.Session)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double access$402(io.sentry.protocol.ViewHierarchyNode,java.lang.Double)
io.sentry.protocol.SentrySpan$JsonKeys: SentrySpan$JsonKeys()
io.flutter.embedding.engine.FlutterEngine: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint,io.sentry.ScopeCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.sentry.android.replay.video.SimpleVideoEncoder: kotlin.jvm.functions.Function0 getOnClose()
io.sentry.Breadcrumb: void setCategory(java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
io.sentry.Attachment: Attachment(byte[],java.lang.String,java.lang.String,boolean)
io.sentry.IOptionsObserver: void setRelease(java.lang.String)
io.sentry.android.core.SentryLogcatAdapter: int w(java.lang.String,java.lang.String,java.lang.Throwable)
io.sentry.android.core.ActivityLifecycleIntegration: void finishSpan(io.sentry.ISpan,io.sentry.SentryDate)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
io.sentry.IScope: io.sentry.ITransaction getTransaction()
io.sentry.protocol.App: void setBuildType(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.sentry.ProfilingTraceData: java.lang.String access$1302(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.SpanStatus$Deserializer: SpanStatus$Deserializer()
io.sentry.ProfilingTransactionData: java.lang.Long getRelativeEndCpuMs()
io.sentry.android.core.performance.AppStartMetrics: void lambda$onActivityStarted$3()
io.sentry.util.UrlUtils$UrlDetails: java.lang.String getUrl()
io.sentry.android.core.internal.util.ScreenshotUtils: boolean isActivityValid(android.app.Activity)
io.sentry.NoOpSentryExecutorService: java.lang.Object lambda$schedule$2()
io.sentry.ProfilingTransactionData: java.lang.Long getRelativeEndNs()
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.embedding.android.KeyData$Type getEventType(android.view.KeyEvent)
io.sentry.android.replay.capture.BufferCaptureStrategy: void access$capture(io.sentry.android.replay.capture.BufferCaptureStrategy,java.util.List)
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] $values()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void popSystemNavigator()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
io.sentry.util.DebugMetaPropertiesApplier: void applyBundleIds(io.sentry.SentryOptions,java.util.List)
io.sentry.util.Random: int internalNextInt(int,int)
io.sentry.metrics.MetricsApi: void increment(java.lang.String,double)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayAdded(int)
io.sentry.NoOpSpan: boolean updateEndDate(io.sentry.SentryDate)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
io.sentry.android.replay.ReplayCache$replayCacheDir$2: ReplayCache$replayCacheDir$2(io.sentry.android.replay.ReplayCache)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.fragment.app.FragmentActivity: FragmentActivity()
io.sentry.IEnvelopeSender: void processEnvelopeFile(java.lang.String,io.sentry.Hint)
io.sentry.metrics.MetricsApi: MetricsApi(io.sentry.metrics.MetricsApi$IMetricsInterface)
io.sentry.SentryEnvelopeItemHeader: SentryEnvelopeItemHeader(io.sentry.SentryItemType,int,java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
io.sentry.protocol.App: java.util.Date getAppStartTime()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldDestroyEngineWithHost()
io.sentry.NoOpSentryClient: io.sentry.protocol.SentryId captureReplayEvent(io.sentry.SentryReplayEvent,io.sentry.IScope,io.sentry.Hint)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.plugins.sharedpreferences.StringListLookupResultType: io.flutter.plugins.sharedpreferences.StringListLookupResultType valueOf(java.lang.String)
io.sentry.Scope: void withTransaction(io.sentry.Scope$IWithTransaction)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: boolean isReleased()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
io.sentry.config.EnvironmentVariablePropertiesProvider: java.util.Map getMap(java.lang.String)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
io.sentry.android.core.AnrIntegration$AnrHint: AnrIntegration$AnrHint(boolean)
io.sentry.android.core.internal.util.CpuInfoUtils: io.sentry.android.core.internal.util.CpuInfoUtils getInstance()
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
io.sentry.Hub: void flush(long)
io.sentry.android.core.SentryPerformanceProvider: void onAppLaunched(android.content.Context,io.sentry.android.core.performance.AppStartMetrics)
io.sentry.profilemeasurements.ProfileMeasurement: java.lang.String access$002(io.sentry.profilemeasurements.ProfileMeasurement,java.lang.String)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: int getPaddingTop()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
io.sentry.android.replay.ReplayIntegration$onScreenshotRecorded$3: void invoke(io.sentry.android.replay.ReplayCache,long)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableSystemEventBreadcrumbs()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.sentry.android.replay.gestures.TouchRecorderCallback: void onTouchEvent(android.view.MotionEvent)
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.HttpConnection access$400(io.sentry.transport.AsyncHttpTransport)
io.sentry.protocol.SentryStackTrace$JsonKeys: SentryStackTrace$JsonKeys()
io.sentry.protocol.SentryTransaction: java.util.Map access$400(io.sentry.protocol.SentryTransaction)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
io.sentry.SentryIntegrationPackageStorage: void addIntegration(java.lang.String)
io.sentry.protocol.SentryStackFrame: java.util.Map getVars()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.sentry.RequestDetailsResolver: io.sentry.RequestDetails resolve()
io.sentry.IHub$-CC: io.sentry.ITransaction $default$startTransaction(io.sentry.IHub,java.lang.String,java.lang.String,io.sentry.TransactionOptions)
io.sentry.vendor.Base64$Encoder: int maxOutputSize(int)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
io.sentry.protocol.SdkVersion$Deserializer: io.sentry.protocol.SdkVersion deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.instrumentation.file.SentryFileOutputStream: void write(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void requestAutofill()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: FlutterBluePlusPlugin()
io.sentry.NoOpReplayBreadcrumbConverter: io.sentry.NoOpReplayBreadcrumbConverter getInstance()
io.sentry.IConnectionStatusProvider: void removeConnectionStatusObserver(io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
io.sentry.protocol.SentryThread: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.ReplayIntegration: void resume()
io.sentry.SentryOptions: io.sentry.IEnvelopeReader getEnvelopeReader()
io.sentry.rrweb.RRWebInteractionEvent: java.util.Map getUnknown()
io.sentry.hints.AbnormalExit: java.lang.String mechanism()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onPanelClosed(int,android.view.Menu)
io.sentry.android.core.SentryAndroidOptions: void setEnableAppComponentBreadcrumbs(boolean)
io.sentry.NoOpSpan: java.lang.String getTag(java.lang.String)
io.sentry.rrweb.RRWebVideoEvent: void setEncoding(java.lang.String)
io.sentry.android.core.ContextUtils: java.lang.String[] getArchitectures(io.sentry.android.core.BuildInfoProvider)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.sentry.SentryBaseEvent: java.util.List access$1100(io.sentry.SentryBaseEvent)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.sentry.ISpan: io.sentry.ISpan startChild(java.lang.String)
io.sentry.SentryTracer: void onIdleTimeoutReached()
io.sentry.JsonSerializer: void serialize(io.sentry.SentryEnvelope,java.io.OutputStream)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
io.flutter.plugin.editing.SpellCheckPlugin: void destroy()
io.sentry.SentryReplayOptions: java.lang.Double getOnErrorSampleRate()
io.sentry.instrumentation.file.SentryFileOutputStream: void write(byte[],int,int)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
io.sentry.instrumentation.file.SentryFileInputStream: io.sentry.instrumentation.file.FileInputStreamInitData init(java.io.FileDescriptor,java.io.FileInputStream,io.sentry.IHub)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.sentry.Scope: Scope(io.sentry.Scope)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
io.sentry.SentryOptions: void setEnableBackpressureHandling(boolean)
io.sentry.SentryReplayEvent: int getSegmentId()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.sentry.protocol.OperatingSystem: void setRooted(java.lang.Boolean)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: RootViewsSpy$delegatingViewList$1(io.sentry.android.replay.RootViewsSpy)
androidx.core.app.NotificationCompatSideChannelService: NotificationCompatSideChannelService()
io.sentry.protocol.Browser: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.Device: java.util.TimeZone access$2502(io.sentry.protocol.Device,java.util.TimeZone)
io.sentry.transport.ITransportGate: boolean isConnected()
io.sentry.OutboxSender: boolean isRelevantFileName(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void lambda$onEndFrame$3()
io.sentry.NoOpScope: void clearTransaction()
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
io.sentry.android.core.AndroidCpuCollector: long readTotalCpuNanos()
io.sentry.util.HintUtils: boolean isFromHybridSdk(io.sentry.Hint)
io.sentry.util.MapObjectWriter: MapObjectWriter(java.util.Map)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter name(java.lang.String)
io.sentry.android.core.CurrentActivityIntegration: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.ExternalOptions: void setDsn(java.lang.String)
io.sentry.android.ndk.SentryNdk: void lambda$static$0()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
io.sentry.android.replay.gestures.GestureRecorder$SentryReplayGestureRecorder: boolean dispatchTouchEvent(android.view.MotionEvent)
io.sentry.Scope: java.util.List getAttachments()
io.sentry.protocol.Response: void setData(java.lang.Object)
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler: java.util.Map getKeyboardState()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: void setSegmentId(int)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
io.flutter.embedding.android.FlutterTextureView: void resume()
io.sentry.SentryOptions: java.lang.String getProguardUuid()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$200(io.flutter.view.AccessibilityBridge,int,int)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
io.sentry.metrics.MetricsApi: void increment(java.lang.String,double,io.sentry.MeasurementUnit)
io.sentry.protocol.SdkVersion: java.util.Set access$002(io.sentry.protocol.SdkVersion,java.util.Set)
io.sentry.profilemeasurements.ProfileMeasurementValue: double getValue()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
io.sentry.SentryEvent: io.sentry.protocol.Message access$102(io.sentry.SentryEvent,io.sentry.protocol.Message)
io.flutter.plugin.platform.PlatformViewsController: void access$100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.rrweb.RRWebBreadcrumbEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.SentryEnvelopeItemHeader: java.lang.String getFileName()
io.sentry.protocol.Device: java.lang.String getName()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.sentry.flutter.SentryFlutterPlugin: void removeExtra(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.flutter.SentryFlutter$updateOptions$8: SentryFlutter$updateOptions$8(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToForeground()
io.sentry.SentryOptions: void loadLazyFields()
io.sentry.rrweb.RRWebEvent: long getTimestamp()
io.sentry.vendor.gson.stream.JsonReader: void beginArray()
io.sentry.MetricsAggregator: boolean isOverWeight()
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(io.sentry.instrumentation.file.FileInputStreamInitData)
io.sentry.util.CollectionUtils: java.util.Map newHashMap(java.util.Map)
io.sentry.protocol.Response: void setUnknown(java.util.Map)
io.sentry.NoOpTransactionPerformanceCollector: io.sentry.NoOpTransactionPerformanceCollector getInstance()
io.sentry.ReplayController: void pause()
io.sentry.android.replay.ReplayIntegration: void onTouchEvent(android.view.MotionEvent)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
io.sentry.util.thread.IMainThreadChecker: boolean isMainThread()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: java.lang.String access$300(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState,android.view.MotionEvent)
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.performance.AppStartMetrics: void onActivityDestroyed(android.app.Activity)
io.sentry.android.replay.util.TextAttributes: int hashCode()
io.sentry.metrics.MetricsApi: void set(java.lang.String,int,io.sentry.MeasurementUnit,java.util.Map,java.lang.Long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToForeground()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$7100(io.flutter.view.AccessibilityBridge,int)
io.sentry.metrics.GaugeMetric: double getMin()
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiDisplayed()
io.sentry.protocol.TransactionInfo: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.AnrV2Integration$AnrV2Hint: java.lang.Long timestamp()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
io.sentry.DataCategory: DataCategory(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder dartEntrypoint(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
io.sentry.Attachment: java.lang.String getAttachmentType()
io.sentry.rrweb.RRWebBreadcrumbEvent: io.sentry.SentryLevel access$502(io.sentry.rrweb.RRWebBreadcrumbEvent,io.sentry.SentryLevel)
io.sentry.NoOpTransaction: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
io.sentry.android.replay.ScreenshotRecorder: void bind(android.view.View)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $values()
io.sentry.NoOpTransaction: void setStatus(io.sentry.SpanStatus)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(int)
io.sentry.Hub: io.sentry.protocol.SentryId captureMessageInternal(java.lang.String,io.sentry.SentryLevel,io.sentry.ScopeCallback)
io.sentry.MetricsAggregator: java.util.Set getFlushableBuckets(boolean)
io.sentry.android.core.DeviceInfoUtil: io.sentry.android.core.DeviceInfoUtil getInstance(android.content.Context,io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.AndroidTransactionProfiler: java.util.List lambda$onTransactionFinish$0()
io.sentry.protocol.OperatingSystem: java.util.Map getUnknown()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void stopTrackingWindow(android.view.Window)
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: void setResult(boolean)
androidx.fragment.app.Fragment: android.content.Context requireContext()
io.sentry.SentryOptions: void setFullyDisplayedReporter(io.sentry.FullyDisplayedReporter)
io.sentry.cache.PersistingScopeObserver: void delete(java.lang.String)
io.sentry.HttpStatusCodeRange: HttpStatusCodeRange(int,int)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean dispatchKeyEvent(android.view.KeyEvent)
io.sentry.util.TracingUtils$TracingHeaders: TracingUtils$TracingHeaders(io.sentry.SentryTraceHeader,io.sentry.BaggageHeader)
io.sentry.SynchronizedQueue: SynchronizedQueue(java.util.Queue,java.lang.Object)
io.sentry.NoOpTransaction: void setOperation(java.lang.String)
io.flutter.embedding.engine.loader.ResourceExtractor$1: boolean accept(java.io.File,java.lang.String)
io.sentry.protocol.DebugImage: java.lang.String access$202(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.Breadcrumb: io.sentry.Breadcrumb debug(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2(java.lang.String,java.lang.Object,java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.flutter.embedding.android.KeyData: KeyData(java.nio.ByteBuffer)
io.sentry.cache.EnvelopeCache: EnvelopeCache(io.sentry.SentryOptions,java.lang.String,int)
io.sentry.android.core.AnrV2EventProcessor: boolean isBackgroundAnr(java.lang.Object)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate$-CC: void $default$setFrameworkHandlesBack(io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate,boolean)
io.sentry.android.replay.gestures.GestureRecorder: GestureRecorder(io.sentry.SentryOptions,io.sentry.android.replay.gestures.TouchRecorderCallback)
io.sentry.cache.tape.QueueFile$ElementIterator: boolean hasNext()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: int getSize()
io.sentry.android.core.ActivityFramesTracker: void lambda$runSafelyOnUiThread$3(java.lang.Runnable,java.lang.String)
io.sentry.util.MapObjectWriter: void serializeCollection(io.sentry.ILogger,java.util.Collection)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
io.sentry.JsonSerializer: boolean isKnownPrimitive(java.lang.Class)
io.sentry.SystemOutLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Object[])
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$2: SentryFrameMetricsCollector$2()
io.sentry.protocol.Device: java.lang.Integer access$2302(io.sentry.protocol.Device,java.lang.Integer)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)
io.sentry.clientreport.IClientReportRecorder: void recordLostEvent(io.sentry.clientreport.DiscardReason,io.sentry.DataCategory,long)
io.sentry.MonitorSchedule$Deserializer: io.sentry.MonitorSchedule deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.MeasurementValue: MeasurementValue(java.lang.Number,java.lang.String)
io.sentry.protocol.ViewHierarchyNode: void setTag(java.lang.String)
io.sentry.SynchronizedQueue: java.lang.Object[] toArray()
io.flutter.plugin.common.BinaryCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel valueOf(java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onDetachedFromActivity()
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created copy(io.sentry.SentryReplayEvent,io.sentry.ReplayRecording)
io.sentry.NoOpReplayController: void start()
io.flutter.plugin.platform.PlatformViewWrapper: void draw(android.graphics.Canvas)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.sentry.NoOpScope: java.util.List getAttachments()
io.sentry.rrweb.RRWebEvent: int hashCode()
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized()
io.sentry.SentryIntegrationPackageStorage: SentryIntegrationPackageStorage()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
io.sentry.transport.AuthenticatorWrapper: io.sentry.transport.AuthenticatorWrapper getInstance()
io.sentry.vendor.gson.stream.JsonReader: int nextNonWhitespace(boolean)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: void sendCachedEnvelopes(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.SentryOptions: void setEnableShutdownHook(boolean)
io.sentry.android.replay.util.TextLayout: int getLineCount()
io.sentry.NoOpSerializer: io.sentry.SentryEnvelope deserializeEnvelope(java.io.InputStream)
io.sentry.EventProcessor: io.sentry.SentryReplayEvent process(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.protocol.Gpu: void setNpotSupport(java.lang.String)
io.sentry.transport.NoOpTransport: void close()
io.sentry.android.replay.gestures.GestureRecorder$onRootViewsChanged$1$1: java.lang.Boolean invoke(java.lang.ref.WeakReference)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
io.sentry.metrics.MetricsApi: void distribution(java.lang.String,double)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
io.sentry.NoOpTransaction: void finish(io.sentry.SpanStatus,io.sentry.SentryDate,boolean,io.sentry.Hint)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion: DefaultReplayBreadcrumbConverter$Companion()
io.sentry.NoOpScope: void removeTag(java.lang.String)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.Set)
io.sentry.ProfilingTransactionData: java.lang.String access$102(io.sentry.ProfilingTransactionData,java.lang.String)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void setScribeMethodHandler(io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler)
io.sentry.android.core.AndroidLogger: int toLogcatLevel(io.sentry.SentryLevel)
androidx.fragment.app.Fragment: void performStart()
io.sentry.SentryOptions: void setBeforeSendReplay(io.sentry.SentryOptions$BeforeSendReplayCallback)
io.sentry.android.core.internal.util.RootChecker: boolean checkTestKeys()
io.sentry.android.core.ActivityLifecycleIntegration: void clearScope(io.sentry.IScope,io.sentry.ITransaction)
io.sentry.Sentry: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.ScopeCallback)
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.sentry.instrumentation.file.SentryFileInputStream: io.sentry.instrumentation.file.FileInputStreamInitData access$200(java.io.FileDescriptor,java.io.FileInputStream,io.sentry.IHub)
io.sentry.protocol.Geo: java.lang.String access$102(io.sentry.protocol.Geo,java.lang.String)
io.sentry.Sentry: void init(io.sentry.OptionsContainer,io.sentry.Sentry$OptionsConfiguration)
io.sentry.android.core.SentryAndroidOptions: int getProfilingTracesIntervalMillis()
io.sentry.SentryOptions: void setEnableDefaultTagsForMetrics(boolean)
io.sentry.IHub: void setTag(java.lang.String,java.lang.String)
io.sentry.transport.RateLimiter: boolean isAnyRateLimitActive()
io.sentry.cache.tape.ObjectQueue: void clear()
io.sentry.Breadcrumb: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
io.sentry.SentryOptions: void setFlushTimeoutMillis(long)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: FlutterFragmentActivity$NewEngineInGroupIntentBuilder(java.lang.Class,java.lang.String)
io.sentry.Session: Session(io.sentry.Session$State,java.util.Date,java.util.Date,int,java.lang.String,java.util.UUID,java.lang.Boolean,java.lang.Long,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List)
io.sentry.android.replay.RootViewsSpy$listeners$1: boolean contains(io.sentry.android.replay.OnRootViewsChangedListener)
io.sentry.SpotlightIntegration: void closeAndDisconnect(java.net.HttpURLConnection)
io.sentry.NoOpTransportFactory: io.sentry.NoOpTransportFactory getInstance()
io.sentry.protocol.Gpu: java.lang.String access$202(io.sentry.protocol.Gpu,java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditableSizeAndTransform(double,double,double[])
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
io.sentry.rrweb.RRWebMetaEvent: void setHref(java.lang.String)
io.sentry.cache.PersistingScopeObserver$1: void toStream(io.sentry.Breadcrumb,java.io.OutputStream)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
io.sentry.android.replay.RootViewsSpy$Companion: RootViewsSpy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.ObjectReader: int nextInt()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
io.sentry.android.replay.video.SimpleMp4FrameMuxer: SimpleMp4FrameMuxer(java.lang.String,float)
io.sentry.metrics.MetricsApi: void increment(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.android.replay.LastSegmentData: io.sentry.SentryReplayEvent$ReplayType component6()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(java.io.File,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
io.sentry.android.replay.ReplayIntegration: ReplayIntegration(android.content.Context,io.sentry.transport.ICurrentDateProvider,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.IScope: void setScreen(java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap bmBluetoothService(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattService,android.bluetooth.BluetoothGattService,android.bluetooth.BluetoothGatt)
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: ComposeViewHierarchyNode()
io.sentry.Hub: void setLevel(io.sentry.SentryLevel)
io.sentry.protocol.User: void setUnknown(java.util.Map)
io.sentry.SentryAutoDateProvider: io.sentry.SentryDate now()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: void invoke()
io.sentry.TraceContext: io.sentry.protocol.SentryId getTraceId()
io.sentry.rrweb.RRWebMetaEvent: void setWidth(int)
io.sentry.NoOpSpan: io.sentry.SpanStatus getStatus()
io.sentry.flutter.SentryFlutter$updateOptions$17: java.lang.Object invoke(java.lang.Object)
io.sentry.android.replay.util.FixedWindowCallback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.Date getSegmentTimestamp()
io.sentry.SentryRuntimeEventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
io.sentry.profilemeasurements.ProfileMeasurementValue: boolean equals(java.lang.Object)
io.sentry.android.core.AndroidCpuCollector: void collect(io.sentry.PerformanceCollectionData)
io.flutter.embedding.android.FlutterActivity: void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.sentry.android.core.AndroidTransportGate: boolean isConnected()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.flutter.plugin.platform.PlatformView$-CC: void $default$onFlutterViewDetached(io.flutter.plugin.platform.PlatformView)
io.sentry.android.replay.ReplayIntegration$captureReplay$1: void invoke(java.util.Date)
io.sentry.Breadcrumb: io.sentry.Breadcrumb transaction(java.lang.String)
com.lib.flutter_blue_plus.R: R()
io.sentry.SpotlightIntegration: void execute(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.SentryOptions: boolean isEnableDeduplication()
io.flutter.plugin.common.MethodChannel$Result: void error(java.lang.String,java.lang.String,java.lang.Object)
io.sentry.protocol.SdkInfo: java.lang.String getSdkName()
io.sentry.Scope: void setContexts(java.lang.String,java.lang.Number)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
io.sentry.IHub: io.sentry.SentryTraceHeader getTraceparent()
io.sentry.android.core.AnrV2EventProcessor: void setReplayId(io.sentry.SentryEvent)
io.sentry.SentryNanotimeDate: long nanoTimestamp()
io.sentry.ProfilingTraceData: java.lang.String getDeviceOsVersion()
io.sentry.util.MapObjectReader: java.lang.Object nextValueOrNull()
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan getSdkInitTimeSpan()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
io.sentry.protocol.ViewHierarchyNode: java.lang.String access$202(io.sentry.protocol.ViewHierarchyNode,java.lang.String)
io.sentry.android.core.ContextUtils$SideLoadedInfo: java.lang.String getInstallerStore()
io.sentry.transport.RateLimiter: void updateRetryAfterLimits(java.lang.String,java.lang.String,int)
io.sentry.transport.ReusableCountLatch: boolean waitTillZero(long,java.util.concurrent.TimeUnit)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
io.sentry.IHub: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.Hint)
io.sentry.rrweb.RRWebBreadcrumbEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.metrics.SetMetric: void add(double)
io.sentry.Hint: io.sentry.Hint withAttachment(io.sentry.Attachment)
io.sentry.cache.tape.QueueFile$Builder: QueueFile$Builder(java.io.File)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.IScope)
io.sentry.android.replay.capture.CaptureStrategy$DefaultImpls: void onScreenChanged(io.sentry.android.replay.capture.CaptureStrategy,java.lang.String)
io.sentry.NoOpTransactionPerformanceCollector: java.util.List stop(io.sentry.ITransaction)
io.sentry.SentryLockReason: int hashCode()
io.sentry.SentryOptions: void setExecutorService(io.sentry.ISentryExecutorService)
io.sentry.SentryOptions$Proxy: SentryOptions$Proxy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.core.DefaultAndroidEventProcessor: void setSideLoadedInfo(io.sentry.SentryBaseEvent)
io.sentry.SpanContext: void setDescription(java.lang.String)
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType[] values()
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: void onAvailable(android.net.Network)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,double,double,int,java.nio.ByteBuffer)
io.sentry.ISpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String)
io.sentry.CheckIn: io.sentry.MonitorConfig getMonitorConfig()
io.sentry.Scope$IWithPropagationContext: void accept(io.sentry.PropagationContext)
io.sentry.SentryOptions: java.lang.Double getSampleRate()
io.sentry.protocol.SentrySpan: void setUnknown(java.util.Map)
io.sentry.protocol.Device: java.lang.String getManufacturer()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
io.sentry.android.core.SentryAndroidOptions: boolean isAttachScreenshot()
io.sentry.NoOpScope: io.sentry.protocol.SentryId getReplayId()
io.sentry.NoOpScope: void setContexts(java.lang.String,java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void finishAutofillContext(boolean)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
io.sentry.Scope: io.sentry.SentryOptions getOptions()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap bmScanAdvertisement(android.bluetooth.BluetoothDevice,android.bluetooth.le.ScanResult)
io.sentry.protocol.OperatingSystem$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryOptions: void setEnableDeduplication(boolean)
io.sentry.config.ClasspathPropertiesLoader: java.util.Properties load()
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering()
io.sentry.android.core.CurrentActivityIntegration: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List getDisplayCutouts()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $values()
io.sentry.SentryEvent: java.util.Map getModules()
io.sentry.SentryIntegrationPackageStorage: java.util.Set getIntegrations()
io.sentry.flutter.SentryFlutterPlugin: void removeContexts(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.Device: void setLocale(java.lang.String)
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.RateLimiter getRateLimiter()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Bitmap access$getSinglePixelBitmap(io.sentry.android.replay.ScreenshotRecorder)
io.sentry.protocol.SdkInfo: void setUnknown(java.util.Map)
io.flutter.plugin.platform.PlatformViewsController: void onTrimMemory(int)
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel access$300(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
io.sentry.HubAdapter: void close()
io.sentry.protocol.MetricSummary: double getMin()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
io.sentry.android.replay.ScreenshotRecorder$capture$1$1$1$1: java.lang.Boolean invoke(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.sentry.vendor.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)
io.sentry.rrweb.RRWebSpanEvent$JsonKeys: RRWebSpanEvent$JsonKeys()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
io.sentry.flutter.SentryFlutter$updateOptions$6: void invoke(boolean)
io.sentry.android.replay.ReplayFrame: long component2()
io.sentry.protocol.SentryStackFrame: java.lang.String access$1002(io.sentry.protocol.SentryStackFrame,java.lang.String)
kotlin.jvm.internal.Lambda: int getArity()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.sentry.PropagationContext: io.sentry.Baggage getBaggage()
io.flutter.plugin.editing.ScribePlugin: boolean isFeatureAvailable()
io.sentry.NoOpTransactionPerformanceCollector: NoOpTransactionPerformanceCollector()
io.sentry.protocol.SentryPackage$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
io.sentry.android.core.AndroidLogger: AndroidLogger(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment retrieveExistingFlutterFragmentIfPossible()
io.sentry.rrweb.RRWebVideoEvent: int getHeight()
io.sentry.internal.modules.ModulesLoader: java.util.Map getOrLoadModules()
io.sentry.protocol.ViewHierarchyNode: java.lang.String getType()
io.sentry.protocol.Device: java.lang.Long access$1202(io.sentry.protocol.Device,java.lang.Long)
io.sentry.IHub: io.sentry.transport.RateLimiter getRateLimiter()
io.sentry.SendFireAndForgetEnvelopeSender: SendFireAndForgetEnvelopeSender(io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetDirPath)
io.sentry.protocol.SentryStackTrace: java.lang.Boolean access$202(io.sentry.protocol.SentryStackTrace,java.lang.Boolean)
io.sentry.protocol.User: io.sentry.protocol.User fromMap(java.util.Map,io.sentry.SentryOptions)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
io.sentry.protocol.Browser: void setVersion(java.lang.String)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$4: void onBatchScanResults(java.util.List)
io.sentry.android.core.LoadClass: boolean isClassAvailable(java.lang.String,io.sentry.SentryOptions)
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
io.sentry.SentryEnvelopeHeader: io.sentry.protocol.SentryId getEventId()
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
io.sentry.clientreport.ClientReportRecorder: void recordLostEvent(io.sentry.clientreport.DiscardReason,io.sentry.DataCategory,long)
io.sentry.SentryClient: io.sentry.protocol.SentryTransaction executeBeforeSendTransaction(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.SentryEvent: io.sentry.protocol.SentryException getUnhandledException()
io.sentry.vendor.gson.stream.JsonToken: JsonToken(java.lang.String,int)
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: java.lang.String getProxyClassName(androidx.compose.ui.node.LayoutNode,boolean)
io.sentry.protocol.ViewHierarchyNode: void setAlpha(java.lang.Double)
io.sentry.FullyDisplayedReporter: void registerFullyDrawnListener(io.sentry.FullyDisplayedReporter$FullyDisplayedReporterListener)
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.sentry.TraceContext$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
io.sentry.Sentry: void flush(long)
io.sentry.profilemeasurements.ProfileMeasurement: java.util.Map getUnknown()
io.sentry.protocol.Message: void setParams(java.util.List)
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: void setPointerIcon(android.view.PointerIcon)
io.sentry.util.Random: void nextBytes(byte[])
io.sentry.util.Pair: java.lang.Object getFirst()
io.sentry.TracesSampler: TracesSampler(io.sentry.SentryOptions)
io.sentry.android.replay.video.MuxerConfig: int component3()
io.sentry.protocol.DebugImage: java.lang.Long access$702(io.sentry.protocol.DebugImage,java.lang.Long)
io.sentry.cache.tape.ObjectQueue: ObjectQueue()
io.sentry.android.core.ActivityBreadcrumbsIntegration: java.lang.String getActivityName(android.app.Activity)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$1: BaseCaptureStrategy$persistableAtomicNullable$1(io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.sentry.transport.AsyncHttpTransport: java.lang.Runnable access$102(io.sentry.transport.AsyncHttpTransport,java.lang.Runnable)
io.flutter.plugin.platform.SingleViewWindowManager: void removeCrossWindowBlurEnabledListener(java.util.function.Consumer)
io.sentry.SentryEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.util.MapObjectReader: void nextNull()
io.sentry.protocol.Device: void setSimulator(java.lang.Boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
io.sentry.android.replay.ReplayCache$ongoingSegmentFile$2: java.io.File invoke()
io.sentry.HubAdapter: void startSession()
io.sentry.SentryOptions: boolean isEnablePrettySerializationOutput()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter endObject()
io.sentry.protocol.SentrySpan$Deserializer: io.sentry.protocol.SentrySpan deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.Device: java.lang.Long getExternalStorageSize()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
io.sentry.IHub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint)
io.sentry.android.core.AndroidProfiler: void putPerformanceCollectionDataInMeasurements(java.util.List)
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivityStarted(android.app.Activity)
io.sentry.Sentry: io.sentry.IHub cloneMainHub()
io.sentry.android.core.SentryAndroid: void init(android.content.Context,io.sentry.ILogger,io.sentry.Sentry$OptionsConfiguration)
io.sentry.cache.PersistingScopeObserver: void setUser(io.sentry.protocol.User)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map access$602(io.sentry.rrweb.RRWebBreadcrumbEvent,java.util.Map)
io.sentry.Span: void setData(java.lang.String,java.lang.Object)
io.sentry.HubAdapter: boolean isHealthy()
io.flutter.embedding.android.FlutterTextureView: boolean shouldNotify()
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: void setRetry(boolean)
io.sentry.vendor.gson.stream.JsonWriter: void setSerializeNulls(boolean)
io.sentry.config.SystemPropertyPropertiesProvider: SystemPropertyPropertiesProvider()
io.sentry.android.replay.LastSegmentData: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge: int access$1176(io.flutter.view.AccessibilityBridge,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.sentry.protocol.SentryStackFrame: void setLineno(java.lang.Integer)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType valueOf(java.lang.String)
io.sentry.rrweb.RRWebVideoEvent$Deserializer: RRWebVideoEvent$Deserializer()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2: DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
io.sentry.TraceContext: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.Hub: io.sentry.transport.RateLimiter getRateLimiter()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.sentry.JsonObjectReader: int nextInt()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult findLCA(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(java.lang.String)
io.sentry.android.replay.GeneratedVideo: io.sentry.android.replay.GeneratedVideo copy$default(io.sentry.android.replay.GeneratedVideo,java.io.File,int,long,int,java.lang.Object)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$ChrFound: FlutterBluePlusPlugin$ChrFound(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,android.bluetooth.BluetoothGattCharacteristic,java.lang.String)
io.sentry.SentryOptions: java.util.List getContextTags()
io.sentry.protocol.ViewHierarchyNode: void setVisibility(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(java.lang.Number)
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: void setResult(boolean)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
io.flutter.embedding.engine.loader.ResourceExtractor: void waitForCompletion()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.sentry.android.replay.ScreenshotRecorderConfig: float getScaleFactorX()
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.cache.tape.QueueFile: long wrapPosition(long)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiDisplayed()
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
io.sentry.IScopeObserver: void setBreadcrumbs(java.util.Collection)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
io.sentry.protocol.User: int hashCode()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int getWidth()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
io.sentry.TraceContext$TraceContextUser: TraceContext$TraceContextUser(java.lang.String,java.lang.String,io.sentry.TraceContext$1)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.sentry.protocol.Device: java.lang.Integer getScreenDpi()
io.sentry.clientreport.DiscardedEvent: java.util.Map getUnknown()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: boolean canPrune()
io.flutter.plugin.platform.VirtualDisplayController: void resize31(android.view.View,int,int,java.lang.Runnable)
io.sentry.cache.CacheUtils: CacheUtils()
io.sentry.MainEventProcessor: void close()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
io.sentry.Session$Deserializer: io.sentry.Session deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.ISpan: io.sentry.SentryTraceHeader toSentryTrace()
io.sentry.SentryReplayEvent: io.sentry.SentryReplayEvent$ReplayType getReplayType()
io.sentry.cache.IEnvelopeCache$-CC: void $default$store(io.sentry.cache.IEnvelopeCache,io.sentry.SentryEnvelope)
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.sentry.flutter.SentryFlutter$updateOptions$13: java.lang.Object invoke(java.lang.Object)
io.sentry.cache.tape.QueueFile: void writeHeader(long,int,long,long)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onSaveInstanceState(android.os.Bundle)
io.sentry.protocol.Device$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map getUnknown()
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
io.sentry.SentryOptions: void setBeforeBreadcrumb(io.sentry.SentryOptions$BeforeBreadcrumbCallback)
io.sentry.rrweb.RRWebVideoEvent$JsonKeys: RRWebVideoEvent$JsonKeys()
io.sentry.util.MapObjectReader: java.lang.Object nextOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.protocol.Mechanism: java.lang.String getType()
io.sentry.Scope: java.lang.Object clone()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.SentryTracer: void setMeasurementFromChild(java.lang.String,java.lang.Number,io.sentry.MeasurementUnit)
io.sentry.SynchronizedCollection: boolean addAll(java.util.Collection)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void onTrimMemory(int)
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
io.flutter.plugin.platform.PlatformViewsController$1: void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
io.sentry.android.core.AnrV2EventProcessor: AnrV2EventProcessor(android.content.Context,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.BuildInfoProvider)
io.sentry.android.core.PerformanceAndroidEventProcessor: boolean hasAppStartSpan(io.sentry.protocol.SentryTransaction)
io.sentry.protocol.SentryStackFrame: java.lang.String getSymbol()
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.android.FlutterViewDelegate: FlutterViewDelegate()
io.sentry.SentryReplayOptions: void addUnmaskViewClass(java.lang.String)
io.sentry.SentryOptions: void setMaxDepth(int)
androidx.core.app.ActivityCompat$Api31Impl: boolean isLaunchedFromBubble(android.app.Activity)
io.sentry.SentryOptions: boolean isEnableExternalConfiguration()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean onSearchRequested()
io.sentry.android.replay.SentryReplayModifiers$SentryPrivacy$1: java.lang.String invoke(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void performLowMemory()
io.sentry.SentryEnvelopeItem: byte[] lambda$fromReplay$26(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureReplay(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
io.sentry.Baggage: boolean isHighQualityTransactionName(io.sentry.protocol.TransactionNameSource)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: void setUnknown(java.util.Map)
io.sentry.android.core.ContextUtils: java.lang.String getFamily(io.sentry.ILogger)
io.sentry.rrweb.RRWebOptionsEvent$Deserializer: void deserializePayload(io.sentry.rrweb.RRWebOptionsEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.util.Platform: boolean isJvm()
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizeTogglingKey(io.flutter.embedding.android.KeyboardMap$TogglingGoal,boolean,long,android.view.KeyEvent)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
io.sentry.protocol.DebugImage: java.lang.String access$502(io.sentry.protocol.DebugImage,java.lang.String)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.sentry.profilemeasurements.ProfileMeasurement: java.util.Collection access$102(io.sentry.profilemeasurements.ProfileMeasurement,java.util.Collection)
io.sentry.Stack: void pop()
io.sentry.util.HintUtils$SentryHintFallback: void accept(java.lang.Object,java.lang.Class)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double getAlpha()
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.sentry.android.core.InternalSentrySdk: void lambda$getCurrentScope$0(java.util.concurrent.atomic.AtomicReference,io.sentry.IScope)
io.sentry.android.ndk.NativeScope: void nativeAddBreadcrumb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int getHeight()
io.sentry.ProfilingTraceData: void setTruncationReason(java.lang.String)
io.sentry.cache.tape.FileObjectQueue: FileObjectQueue(io.sentry.cache.tape.QueueFile,io.sentry.cache.tape.ObjectQueue$Converter)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.Hint access$500(io.sentry.transport.AsyncHttpTransport$EnvelopeSender)
io.sentry.EnvelopeSender: void lambda$processFile$2(java.io.File,io.sentry.hints.Retryable)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: boolean isValidForRRWebSpan(io.sentry.Breadcrumb)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
io.flutter.plugin.platform.PlatformViewRenderTarget: void resize(int,int)
io.sentry.NoOpTransaction: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.SentryReplayEvent component1()
io.sentry.protocol.Device: java.lang.Float access$2902(io.sentry.protocol.Device,java.lang.Float)
io.sentry.cache.tape.QueueFile: java.util.Iterator iterator()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.sentry.android.core.SentryAndroidOptions: void setAttachViewHierarchy(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
io.sentry.clientreport.ClientReport: ClientReport(java.util.Date,java.util.List)
io.sentry.clientreport.ClientReport$Deserializer: java.lang.Exception missingRequiredFieldException(java.lang.String,io.sentry.ILogger)
io.sentry.android.replay.ReplayCache: void access$deleteFile(io.sentry.android.replay.ReplayCache,java.io.File)
io.sentry.ProfilingTransactionData$Deserializer: io.sentry.ProfilingTransactionData deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
io.sentry.protocol.SentryException: java.lang.String getValue()
io.sentry.Hub: void setTransaction(java.lang.String)
io.sentry.IHub: io.sentry.ITransaction startTransaction(java.lang.String,java.lang.String)
io.sentry.cache.PersistingScopeObserver: void lambda$setTransaction$9(java.lang.String)
io.sentry.protocol.MetricSummary: void setMin(double)
io.sentry.SentryTracer: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SpanOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: FlutterRenderer$ImageReaderSurfaceProducer$PerImage(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.Image,long)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.sentry.protocol.SentryException: void setStacktrace(io.sentry.protocol.SentryStackTrace)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.RenderMode getRenderMode()
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromReplay$25(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
io.sentry.SentryTracer: io.sentry.ISpan startChild(io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.SpanOptions)
io.sentry.android.replay.ReplayIntegration$replayExecutor$2: ReplayIntegration$replayExecutor$2()
io.sentry.ProfilingTraceData: java.util.List access$1800(io.sentry.ProfilingTraceData)
io.sentry.SentryOptions: void addPerformanceCollector(io.sentry.IPerformanceCollector)
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureEnvelope(io.sentry.ISentryClient,io.sentry.SentryEnvelope)
io.sentry.util.SentryRandom$SentryRandomThreadLocal: SentryRandom$SentryRandomThreadLocal(io.sentry.util.SentryRandom$1)
io.sentry.SpanContext: io.sentry.protocol.SentryId getTraceId()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
io.sentry.vendor.gson.stream.JsonReader: void endObject()
io.sentry.protocol.Contexts: void setRuntime(io.sentry.protocol.SentryRuntime)
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.sentry.SentryNanotimeDateProvider: SentryNanotimeDateProvider()
io.sentry.NoOpSerializer: io.sentry.NoOpSerializer getInstance()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
io.sentry.flutter.SentryFlutter$updateOptions$16: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
io.flutter.embedding.android.FlutterFragmentActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget: void send()
kotlin.collections.AbstractList: AbstractList()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: io.sentry.internal.gestures.UiElement access$100(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState)
io.sentry.TransactionContext: boolean isForNextAppStart()
io.sentry.protocol.DebugImage: void setUnknown(java.util.Map)
io.sentry.MemoryCollectionData: long getUsedNativeMemory()
io.sentry.SpanContext: SpanContext(java.lang.String,io.sentry.TracesSamplingDecision)
io.sentry.Sentry: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.ScopeCallback)
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: boolean isJetpackScrollingView(android.view.View,boolean)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.util.List parse(io.sentry.android.core.internal.threaddump.Lines)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: void resize(int,int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap access$1100(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: SurfaceTexturePlatformViewRenderTarget(io.flutter.view.TextureRegistry$SurfaceTextureEntry)
io.sentry.protocol.OperatingSystem: void setKernelVersion(java.lang.String)
io.sentry.protocol.App: java.lang.String getBuildType()
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
io.sentry.Span: io.sentry.SentryDate getFinishDate()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
io.sentry.protocol.SentryRuntime: java.lang.String getName()
io.sentry.NoOpTransaction: io.sentry.protocol.Contexts getContexts()
io.sentry.SentryBaseEvent: io.sentry.protocol.SdkVersion access$202(io.sentry.SentryBaseEvent,io.sentry.protocol.SdkVersion)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
io.sentry.SentryBaseEvent: io.sentry.protocol.SentryId getEventId()
io.sentry.protocol.User: java.lang.String access$302(io.sentry.protocol.User,java.lang.String)
io.sentry.android.replay.util.FixedWindowCallback: void onAttachedToWindow()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
io.sentry.RequestDetails: RequestDetails(java.lang.String,java.util.Map)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],boolean)
io.sentry.PropagationContext: java.lang.Boolean isSampled()
io.sentry.rrweb.RRWebVideoEvent: void serializePayload(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.ReplayCache$Companion$fromDisk$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
io.sentry.SentryOptions: void setConnectionStatusProvider(io.sentry.IConnectionStatusProvider)
io.sentry.NoOpTransaction: io.sentry.NoOpTransaction getInstance()
io.sentry.SentryOptions: void setEnvelopeReader(io.sentry.IEnvelopeReader)
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
io.sentry.android.core.util.AndroidLazyEvaluator: void setValue(java.lang.Object)
io.sentry.rrweb.RRWebInteractionEvent: void setPointerId(int)
io.sentry.rrweb.RRWebVideoEvent: java.lang.String getTag()
io.sentry.protocol.Gpu: void setVendorName(java.lang.String)
io.sentry.MainEventProcessor: void setCommons(io.sentry.SentryBaseEvent)
io.sentry.protocol.User: java.lang.String access$502(io.sentry.protocol.User,java.lang.String)
io.sentry.android.core.internal.util.RootChecker: boolean isDeviceRooted()
io.sentry.ExternalOptions: java.lang.String getEnvironment()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
io.sentry.ExternalOptions: void setPrintUncaughtStackTrace(java.lang.Boolean)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: int getPaddingLeft()
io.sentry.NoOpSentryExecutorService: boolean isClosed()
io.sentry.util.StringUtils: StringUtils()
io.sentry.SentryReplayEvent$ReplayType: SentryReplayEvent$ReplayType(java.lang.String,int)
io.sentry.IMetricsAggregator: void set(java.lang.String,java.lang.String,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.android.core.internal.gestures.SentryGestureListener: void onLongPress(android.view.MotionEvent)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource getSource()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivity()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
io.sentry.android.ndk.NdkScopeObserver: void removeExtra(java.lang.String)
io.sentry.SentryOptions: boolean isSendModules()
io.sentry.android.core.AnrIntegration: void lambda$register$0(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.AnrV2EventProcessor: void setScopeTags(io.sentry.SentryBaseEvent)
io.sentry.cache.PersistingScopeObserver: void lambda$serializeToDisk$13(java.lang.Runnable)
io.sentry.android.core.SendCachedEnvelopeIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.UncaughtExceptionHandlerIntegration$UncaughtExceptionHint: boolean isFlushable(io.sentry.protocol.SentryId)
io.sentry.Baggage: io.sentry.Baggage fromHeader(java.lang.String,io.sentry.ILogger)
io.sentry.HubAdapter: void setExtra(java.lang.String,java.lang.String)
io.sentry.android.replay.RootViewsSpy$Companion: io.sentry.android.replay.RootViewsSpy install()
io.sentry.ProfilingTraceData: ProfilingTraceData(java.io.File,io.sentry.ITransaction)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
io.sentry.ITransaction: io.sentry.protocol.TransactionNameSource getTransactionNameSource()
io.sentry.transport.ITransport: io.sentry.transport.RateLimiter getRateLimiter()
io.sentry.NoOpScope: void setTransaction(java.lang.String)
io.sentry.ISpan: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.flutter.view.VsyncWaiter$FrameCallback: long access$302(io.flutter.view.VsyncWaiter$FrameCallback,long)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: FlutterRenderer$DisplayFeatureState(java.lang.String,int,int)
io.sentry.SentryOptions: java.util.Set getBundleIds()
io.flutter.embedding.android.FlutterActivity: void commitBackGesture()
io.sentry.SystemOutLogger: SystemOutLogger()
io.sentry.Hub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.protocol.TransactionInfo$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.SentryLogcatAdapter: int wtf(java.lang.String,java.lang.String)
io.sentry.protocol.DebugMeta: io.sentry.protocol.SdkInfo access$002(io.sentry.protocol.DebugMeta,io.sentry.protocol.SdkInfo)
io.sentry.android.core.SentryFrameMetrics: void clear()
io.sentry.cache.tape.FileObjectQueue: java.util.Iterator iterator()
io.sentry.MemoryCollectionData: long getTimestampMillis()
io.sentry.android.replay.capture.BufferCaptureStrategy: BufferCaptureStrategy(io.sentry.SentryOptions,io.sentry.IHub,io.sentry.transport.ICurrentDateProvider,io.sentry.util.Random,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.protocol.Device: java.lang.String access$2602(io.sentry.protocol.Device,java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$2: void onViewDetachedFromWindow(android.view.View)
io.sentry.android.replay.ReplayIntegration: void stop()
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: DirectoryProcessor$SendCachedEnvelopeHint(long,io.sentry.ILogger,java.lang.String,java.util.Queue)
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.sentry.android.replay.capture.BufferCaptureStrategy: BufferCaptureStrategy(io.sentry.SentryOptions,io.sentry.IHub,io.sentry.transport.ICurrentDateProvider,io.sentry.util.Random,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function1)
io.sentry.JsonObjectDeserializer$TokenPrimitive: JsonObjectDeserializer$TokenPrimitive(java.lang.Object)
io.sentry.IPerformanceSnapshotCollector: void setup()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.sentry.SpotlightIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
io.sentry.rrweb.RRWebInteractionEvent: io.sentry.rrweb.RRWebInteractionEvent$InteractionType getInteractionType()
io.sentry.android.core.SentryAndroidOptions: void setNativeHandlerStrategy(io.sentry.android.core.NdkHandlerStrategy)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.clientreport.DiscardedEvent: java.lang.String toString()
io.sentry.android.replay.ReplayCache$rotate$1: java.lang.Boolean invoke(io.sentry.android.replay.ReplayFrame)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
io.sentry.util.IntegrationUtils: IntegrationUtils()
io.flutter.embedding.android.FlutterFragment: void onPostResume()
io.flutter.plugin.text.ProcessTextPlugin: void onDetachedFromActivity()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding(android.content.ContentProvider)
io.sentry.IScope: void addEventProcessor(io.sentry.EventProcessor)
io.sentry.protocol.ViewHierarchyNode: java.lang.String access$302(io.sentry.protocol.ViewHierarchyNode,java.lang.String)
io.sentry.android.replay.GeneratedVideo: java.io.File component1()
io.sentry.transport.ReusableCountLatch$Sync: void access$200(io.sentry.transport.ReusableCountLatch$Sync)
io.sentry.MainEventProcessor: void setThreads(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.android.core.AnrV2EventProcessor: void setLevel(io.sentry.SentryEvent)
io.sentry.profilemeasurements.ProfileMeasurement$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.BaggageHeader: java.lang.String getValue()
io.sentry.android.core.SpanFrameMetricsCollector: long toNanoTime(io.sentry.SentryDate)
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.metrics.LocalMetricsAggregator: java.util.Map getSummaries()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.protocol.SentrySpan: java.lang.String getDescription()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.sentry.android.replay.util.ComposeTextLayout: int getLineTop(int)
io.sentry.ProfilingTransactionData: void setRelativeEndNs(java.lang.Long)
io.flutter.embedding.android.KeyEmbedderResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: DartMessenger$SerialTaskQueue(java.util.concurrent.ExecutorService)
io.flutter.plugin.platform.PlatformViewWrapper$1: PlatformViewWrapper$1(io.flutter.plugin.platform.PlatformViewWrapper,android.view.View$OnFocusChangeListener)
io.sentry.SentryClient: io.sentry.SentryReplayEvent processReplayEvent(io.sentry.SentryReplayEvent,io.sentry.Hint,java.util.List)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
io.sentry.IHub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.ScopeCallback)
io.sentry.android.replay.ReplayLifecycle: boolean isTouchRecordingAllowed()
io.sentry.android.ndk.NativeScope: NativeScope()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason valueOf(java.lang.String)
io.sentry.clientreport.ClientReportRecorder: void recordLostEvent(io.sentry.clientreport.DiscardReason,io.sentry.DataCategory)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.Scope: void setUser(io.sentry.protocol.User)
io.sentry.rrweb.RRWebInteractionMoveEvent: int getPointerId()
io.sentry.protocol.Gpu: java.lang.Boolean isMultiThreadedRendering()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void isFeatureAvailable(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.replay.ReplayIntegration: void onConfigurationChanged(android.content.res.Configuration)
io.sentry.SentryDate: int compareTo(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
io.flutter.util.TraceSection: java.lang.String cropSectionName(java.lang.String)
io.sentry.MonitorSchedule$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.Device: java.lang.Boolean access$1102(io.sentry.protocol.Device,java.lang.Boolean)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: io.sentry.IConnectionStatusProvider$ConnectionStatus getConnectionStatus()
io.sentry.NoOpSpan: void finish(io.sentry.SpanStatus,io.sentry.SentryDate)
io.sentry.android.core.ActivityLifecycleIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.instrumentation.file.FileIOSpanManager$FileIOCallable: java.lang.Object call()
io.sentry.SentryDate: long diff(io.sentry.SentryDate)
io.sentry.android.core.EnvelopeFileObserverIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
io.sentry.ISpan: boolean isNoOp()
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.android.FlutterFragmentActivity: void onTrimMemory(int)
io.sentry.SentryEvent: void setThreads(java.util.List)
io.sentry.rrweb.RRWebEvent$Deserializer: boolean deserializeValue(io.sentry.rrweb.RRWebEvent,java.lang.String,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.rrweb.RRWebVideoEvent: void setUnknown(java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.Sentry: void withScope(io.sentry.ScopeCallback)
io.sentry.android.core.ContextUtils: java.lang.String getDeviceName(android.content.Context)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
io.sentry.protocol.SdkInfo: java.lang.Integer getVersionMajor()
io.flutter.embedding.android.FlutterFragmentActivity: void configureWindowForTransparency()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
io.sentry.SentryBaseEvent: java.lang.String getPlatform()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: java.util.List getChildren()
io.sentry.DiagnosticLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Throwable)
io.sentry.metrics.NoopMetricsAggregator: NoopMetricsAggregator()
io.sentry.android.replay.ReplayCache: void close()
io.sentry.ExternalOptions: java.lang.Double getProfilesSampleRate()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
io.sentry.Hint: io.sentry.Attachment getScreenshot()
io.sentry.android.replay.capture.SessionCaptureStrategy$stop$1: void invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.sentry.Sentry: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent)
io.sentry.Scope: void addEventProcessor(io.sentry.EventProcessor)
io.sentry.TransactionContext: io.sentry.TransactionContext fromPropagationContext(io.sentry.PropagationContext)
io.sentry.util.PropagationTargetsUtils: boolean contain(java.util.List,java.lang.String)
io.sentry.MonitorConfig: MonitorConfig(io.sentry.MonitorSchedule)
io.sentry.NoOpHub: void reportFullyDisplayed()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallError(java.lang.String,java.lang.String)
io.sentry.SentryTracer: void setThrowable(java.lang.Throwable)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onCharacteristicReceived(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,byte[],int)
io.sentry.SpotlightIntegration: SpotlightIntegration()
io.sentry.SentryOptions$Proxy: void setUser(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.le.ScanCallback getScanCallback()
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
io.sentry.android.core.ActivityFramesTracker$FrameCounts: int access$100(io.sentry.android.core.ActivityFramesTracker$FrameCounts)
io.sentry.android.core.SendCachedEnvelopeIntegration: void sendCachedEnvelopes(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.SpanFrameMetricsCollector: int interpolateFrameCount(io.sentry.android.core.SentryFrameMetrics,long,long)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.android.replay.util.FixedWindowCallback: boolean onMenuOpened(int,android.view.Menu)
io.sentry.IScopeObserver: void setTrace(io.sentry.SpanContext,io.sentry.IScope)
io.sentry.protocol.Mechanism: java.util.Map getUnknown()
io.sentry.exception.ExceptionMechanismException: ExceptionMechanismException(io.sentry.protocol.Mechanism,java.lang.Throwable,java.lang.Thread,boolean)
io.sentry.android.replay.ReplayCache$replayCacheDir$2: java.lang.Object invoke()
io.sentry.ISentryClient: void close()
io.sentry.clientreport.DiscardedEvent: java.lang.Long getQuantity()
io.sentry.android.replay.WindowSpy: java.lang.Class getDecorViewClass()
io.sentry.flutter.SentryFlutter: void setAutoPerformanceTracingEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$500(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.sentry.flutter.SentryFlutter$updateOptions$6: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryReplayOptions: void setUnmaskViewContainerClass(java.lang.String)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.sentry.NoOpTransactionProfiler: void bindTransaction(io.sentry.ITransaction)
io.sentry.Span: void setSpanFinishedCallback(io.sentry.SpanFinishedCallback)
io.sentry.TraceContext: TraceContext(io.sentry.protocol.SentryId,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.sentry.protocol.SentryId)
io.sentry.hints.DiskFlushNotification: void markFlushed()
io.sentry.SentryTracer: void setTag(java.lang.String,java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$startTracing$0(java.lang.ref.WeakReference,java.lang.String,io.sentry.ITransaction)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean dispatchTrackballEvent(android.view.MotionEvent)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureMessage(io.sentry.IHub,java.lang.String,io.sentry.ScopeCallback)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.sentry.instrumentation.file.SentryFileOutputStream: java.io.FileDescriptor getFileDescriptor(java.io.FileOutputStream)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
io.sentry.Attachment: Attachment(byte[],java.lang.String,java.lang.String,java.lang.String,boolean)
io.sentry.rrweb.RRWebVideoEvent: int getWidth()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
io.sentry.cache.IEnvelopeCache: void store(io.sentry.SentryEnvelope)
io.sentry.android.core.ViewHierarchyEventProcessor: void addChildren(android.view.View,io.sentry.protocol.ViewHierarchyNode,java.util.List)
io.sentry.android.core.AnrV2EventProcessor: void setRequest(io.sentry.SentryBaseEvent)
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.sentry.JsonObjectReader: void nextNull()
io.sentry.util.ClassLoaderUtils: ClassLoaderUtils()
io.sentry.SentryReplayOptions: boolean isTrackOrientationChange()
io.sentry.MetricsAggregator: void close()
io.sentry.protocol.SentryStackFrame: java.lang.String access$602(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.SentryOptions$Proxy: SentryOptions$Proxy(java.lang.String,java.lang.String)
io.sentry.MeasurementUnit$Information: java.lang.String apiName()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: byte[] getManufacturerSpecificData(android.bluetooth.le.ScanRecord)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onActionModeFinished(android.view.ActionMode)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
io.sentry.protocol.SdkVersion: java.util.Set getIntegrationSet()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$3: void onReceive(android.content.Context,android.content.Intent)
io.sentry.cache.tape.EmptyObjectQueue$EmptyIterator: EmptyObjectQueue$EmptyIterator()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: void setChildren(java.util.List)
io.sentry.protocol.Device: void setBrand(java.lang.String)
io.sentry.protocol.Device: java.lang.Long getUsableMemory()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$2500(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.IScope: void setContexts(java.lang.String,java.lang.Boolean)
io.sentry.protocol.SentryThread$JsonKeys: SentryThread$JsonKeys()
io.sentry.protocol.SentryThread: java.lang.Boolean isMain()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.sentry.ExternalOptions: java.util.List getContextTags()
io.sentry.android.core.UserInteractionIntegration: void onActivityStarted(android.app.Activity)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet)
io.sentry.hints.SessionEndHint: SessionEndHint()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
io.sentry.android.core.AppLifecycleIntegration: void lambda$close$1()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
io.sentry.flutter.SentryFlutterPlugin: void beginNativeFrames(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.Sentry: void reportFullyDisplayed()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: boolean isMaskContainer(android.view.View,io.sentry.SentryOptions)
io.sentry.protocol.SentryThread: void setHeldLocks(java.util.Map)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
io.sentry.ProfilingTraceData: boolean isTruncationReasonValid()
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter beginArray()
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter endArray()
io.sentry.UserFeedback: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: ViewHierarchyNode$TextViewHierarchyNode(io.sentry.android.replay.util.TextLayout,java.lang.Integer,int,int,float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.ISpan: void finish()
io.sentry.cache.PersistingOptionsObserver: void setSdkVersion(io.sentry.protocol.SdkVersion)
io.flutter.embedding.android.KeyboardManager: KeyboardManager(io.flutter.embedding.android.KeyboardManager$ViewDelegate)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
io.sentry.config.PropertiesProvider: java.lang.String getProperty(java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$onActivityCreated$7(io.sentry.ISpan)
io.sentry.MonitorConfig: void setFailureIssueThreshold(java.lang.Long)
io.sentry.android.core.performance.AppStartMetrics: void onContentProviderPostCreate(android.content.ContentProvider)
io.sentry.android.replay.ScreenshotRecorder$prescaledMatrix$2: ScreenshotRecorder$prescaledMatrix$2(io.sentry.android.replay.ScreenshotRecorder)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
io.sentry.HubAdapter: void removeExtra(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.WindowManagerHandler access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] $values()
io.sentry.protocol.Request: void setApiTarget(java.lang.String)
io.flutter.embedding.android.KeyData$DeviceType: KeyData$DeviceType(java.lang.String,int,long)
io.sentry.cache.tape.QueueFile: byte[] access$000()
io.sentry.protocol.Geo: java.util.Map getUnknown()
io.sentry.SynchronizedQueue: java.lang.Object remove()
io.sentry.ExperimentalOptions: ExperimentalOptions(boolean,io.sentry.protocol.SdkVersion)
io.sentry.SentryLockReason: java.lang.String getPackageName()
io.sentry.clientreport.DiscardedEvent: DiscardedEvent(java.lang.String,java.lang.String,java.lang.Long)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: void setSendClientReports(boolean)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
io.sentry.protocol.Gpu: java.lang.String getName()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void startBackGesture(android.window.BackEvent)
io.sentry.metrics.MetricsHelper: java.util.Map mergeTags(java.util.Map,java.util.Map)
io.sentry.transport.ReusableCountLatch$Sync: void increment()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.ExclusiveAppComponent getExclusiveAppComponent()
io.sentry.flutter.SentryFlutterPlugin$setupReplay$2: SentryFlutterPlugin$setupReplay$2(io.sentry.flutter.SentryFlutterPlugin)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
io.sentry.protocol.Gpu: Gpu(io.sentry.protocol.Gpu)
io.sentry.protocol.SentryTransaction: java.math.BigDecimal doubleToBigDecimal(java.lang.Double)
io.sentry.backpressure.BackpressureMonitor: void reschedule(int)
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: boolean waitFlush()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
io.sentry.Baggage: void setReplayId(java.lang.String)
io.sentry.Scope: void setFingerprint(java.util.List)
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Canvas getSinglePixelBitmapCanvas()
io.sentry.MeasurementUnit$Fraction: MeasurementUnit$Fraction(java.lang.String,int)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: ResourceExtractor$ExtractTask(java.lang.String,java.util.HashSet,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
io.sentry.NoOpEnvelopeReader: io.sentry.NoOpEnvelopeReader getInstance()
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
io.sentry.SentryOptions: long getMaxTraceFileSize()
io.sentry.MonitorScheduleType: java.lang.String apiName()
io.sentry.protocol.SentryRuntime$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.capture.CaptureStrategy$Companion: void rotateEvents$sentry_android_replay_release$default(io.sentry.android.replay.capture.CaptureStrategy$Companion,java.util.Deque,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.sentry.protocol.Request: void setBodySize(java.lang.Long)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: int indexOf(java.lang.Object)
io.sentry.SentryEnvelope: SentryEnvelope(io.sentry.protocol.SentryId,io.sentry.protocol.SdkVersion,io.sentry.SentryEnvelopeItem)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
io.sentry.ReplayController: void captureReplay(java.lang.Boolean)
io.sentry.android.core.ManifestMetadataReader: java.lang.String readStringNotNull(android.os.Bundle,io.sentry.ILogger,java.lang.String,java.lang.String)
io.sentry.android.core.internal.gestures.SentryWindowCallback: SentryWindowCallback(android.view.Window$Callback,android.content.Context,io.sentry.android.core.internal.gestures.SentryGestureListener,io.sentry.SentryOptions)
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.sentry.android.replay.util.TextAttributes: TextAttributes(androidx.compose.ui.graphics.Color,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(java.lang.Integer,io.sentry.SpanStatus)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void lambda$installDeferredComponent$0(java.lang.String,int,java.lang.Integer)
io.flutter.embedding.android.FlutterFragmentActivity: java.util.List getDartEntrypointArgs()
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
io.sentry.SentryTracer: void access$000(io.sentry.SentryTracer)
io.sentry.android.replay.video.SimpleVideoEncoder: SimpleVideoEncoder(io.sentry.SentryOptions,io.sentry.android.replay.video.MuxerConfig,kotlin.jvm.functions.Function0)
io.sentry.cache.PersistingScopeObserver: void setTags(java.util.Map)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void lambda$new$0(io.sentry.ILogger,java.lang.Thread,java.lang.Throwable)
io.sentry.ReplayRecording: void setSegmentId(java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
io.sentry.transport.RateLimiter: void close()
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.sentry.util.thread.MainThreadChecker: boolean isMainThread()
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter nullValue()
io.flutter.view.AccessibilityBridge: boolean lambda$shouldSetCollectionInfo$1(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
io.sentry.Baggage: java.lang.String getThirdPartyHeader()
io.sentry.profilemeasurements.ProfileMeasurement$Deserializer: io.sentry.profilemeasurements.ProfileMeasurement deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.rrweb.RRWebSpanEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.internal.util.FirstDrawDoneListener: void registerForNextDraw(android.app.Activity,java.lang.Runnable,io.sentry.android.core.BuildInfoProvider)
io.sentry.SpanStatus: boolean matches(int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
io.sentry.android.replay.WindowManagerSpy$windowManagerClass$2: java.lang.Class invoke()
io.sentry.protocol.SentryTransaction: boolean isFinished()
io.sentry.protocol.SentryException: java.lang.String access$202(io.sentry.protocol.SentryException,java.lang.String)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean add(java.lang.Object)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRouteInformation(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setStartupCrashFlushTimeoutMillis(long)
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.RootViewsSpy getRootViewsSpy$sentry_android_replay_release()
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
io.sentry.android.ndk.SentryNdkUtil: SentryNdkUtil()
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEmitMetricCallback getBeforeEmitMetricCallback()
io.sentry.protocol.SentryStackFrame: java.lang.Integer access$302(io.sentry.protocol.SentryStackFrame,java.lang.Integer)
io.sentry.android.replay.WindowManagerSpy$windowManagerInstance$2: java.lang.Object invoke()
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
io.sentry.IOptionsObserver: void setDist(java.lang.String)
io.sentry.clientreport.DiscardedEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.Request: java.lang.Object access$302(io.sentry.protocol.Request,java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
io.sentry.SentryTracer: java.lang.String getName()
io.sentry.vendor.Base64$Encoder: boolean process(byte[],int,int,boolean)
io.sentry.rrweb.RRWebInteractionMoveEvent: void setDataUnknown(java.util.Map)
io.sentry.protocol.DebugMeta: void setUnknown(java.util.Map)
io.sentry.rrweb.RRWebVideoEvent: java.lang.String getFrameRateType()
io.sentry.vendor.Base64: byte[] encode(byte[],int)
io.sentry.flutter.SentryFlutterPlugin: void setContexts$lambda$6(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result,io.sentry.IScope)
io.sentry.android.core.ScreenshotEventProcessor: ScreenshotEventProcessor(io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.BuildInfoProvider)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$ImageViewHierarchyNode: ViewHierarchyNode$ImageViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.PlatformViewsController: void onResume()
io.sentry.SentryReplayOptions: void setMaskViewContainerClass(java.lang.String)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.IHub,io.sentry.protocol.SentryTransaction,io.sentry.TraceContext)
io.sentry.protocol.User: java.util.Map getData()
io.sentry.NoOpReplayController: boolean isRecording()
io.sentry.SentryEvent: void setTransaction(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo()
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.AppStartMetrics getInstance()
io.sentry.NoOpHub: io.sentry.IHub clone()
io.sentry.android.core.AnrV2EventProcessor: void mergeUser(io.sentry.SentryBaseEvent)
io.sentry.util.HintUtils: void lambda$runIfDoesNotHaveType$1(io.sentry.util.HintUtils$SentryNullableConsumer,java.lang.Object,java.lang.Class)
io.sentry.SentryAppStartProfilingOptions$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendReplayCallback getBeforeSendReplay()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
io.sentry.cache.tape.EmptyObjectQueue$EmptyIterator: EmptyObjectQueue$EmptyIterator(io.sentry.cache.tape.EmptyObjectQueue$1)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault()
io.flutter.embedding.android.FlutterFragment: void detachFromFlutterEngine()
io.sentry.protocol.MetricSummary$Deserializer: MetricSummary$Deserializer()
io.sentry.SentryOptions: int getMaxBreadcrumbs()
io.sentry.android.replay.video.SimpleFrameMuxer: void muxVideoFrame(java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo)
io.sentry.vendor.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String,java.lang.Throwable)
io.sentry.protocol.DebugImage: java.lang.String access$602(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture: QueuedThreadPoolExecutor$CancelledFuture()
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.sentry.transport.TransportResult$ErrorTransportResult: TransportResult$ErrorTransportResult(int)
io.sentry.TransactionOptions: void setIdleTimeout(java.lang.Long)
androidx.fragment.app.Fragment: android.view.View getFocusedView()
io.sentry.android.core.ContextUtils: void resetInstance()
io.sentry.protocol.SdkInfo: java.lang.Integer getVersionPatchlevel()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
io.sentry.android.core.CurrentActivityHolder: CurrentActivityHolder()
io.sentry.protocol.User: User(io.sentry.protocol.User)
io.sentry.protocol.Response: void setStatusCode(java.lang.Integer)
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.sentry.protocol.SentryStackTrace: void setUnknown(java.util.Map)
io.sentry.SentryOptions: io.sentry.SentryReplayOptions getSessionReplay()
io.sentry.MonitorSchedule: java.util.Map getUnknown()
io.sentry.SentryOptions: void setBeforeSend(io.sentry.SentryOptions$BeforeSendCallback)
io.sentry.protocol.App: java.lang.String access$902(io.sentry.protocol.App,java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] values()
io.sentry.protocol.SentryId: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.SentryStackFrame: void setAbsPath(java.lang.String)
io.sentry.IOptionsObserver: void setEnvironment(java.lang.String)
io.sentry.android.core.cache.AndroidEnvelopeCache: void lambda$store$0(io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.AnrV2Integration$AnrV2Hint)
io.sentry.android.replay.capture.BaseCaptureStrategy: void stop()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: android.util.DisplayMetrics getPastDisplayMetrics(int)
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int bmConnectionPriorityParse(int)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean onMenuOpened(int,android.view.Menu)
io.sentry.ShutdownHookIntegration: void lambda$close$2()
io.sentry.NoOpScope: void setTransaction(io.sentry.ITransaction)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: void onLost(android.net.Network)
io.sentry.NoOpHub: void removeTag(java.lang.String)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate createDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: SingleViewFakeWindowViewGroup(android.content.Context)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
io.sentry.android.core.SentryFrameMetrics: int getSlowFrozenFrameCount()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.JsonObjectSerializer: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger,java.lang.Object)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter name(java.lang.String)
io.sentry.SentryOptions$Proxy: void setPass(java.lang.String)
io.sentry.rrweb.RRWebOptionsEvent: java.util.Map getOptionsPayload()
io.flutter.plugin.editing.TextInputPlugin: void destroy()
io.sentry.transport.ITransport: void send(io.sentry.SentryEnvelope,io.sentry.Hint)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.sentry.android.core.AndroidProfiler$1: AndroidProfiler$1(io.sentry.android.core.AndroidProfiler)
io.sentry.CircularFifoQueue: int access$200(io.sentry.CircularFifoQueue)
io.sentry.IScope: java.util.List getFingerprint()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.sentry.SentryEnvelopeHeader$Deserializer: io.sentry.SentryEnvelopeHeader deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.IHub: void addBreadcrumb(java.lang.String,java.lang.String)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult copy(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
io.sentry.IHub: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext)
io.sentry.util.MapObjectReader: java.lang.Long nextLongOrNull()
io.sentry.protocol.ViewHierarchyNode: java.util.List getChildren()
io.sentry.SentryEvent$Deserializer: io.sentry.SentryEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.sentry.protocol.DebugImage: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
io.sentry.protocol.Device: java.lang.Double access$3202(io.sentry.protocol.Device,java.lang.Double)
io.sentry.SentryOptions: io.sentry.ITransactionProfiler getTransactionProfiler()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleBreadcrumbs()
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
io.sentry.TransactionContext: TransactionContext(io.sentry.protocol.SentryId,io.sentry.SpanId,io.sentry.SpanId,io.sentry.TracesSamplingDecision,io.sentry.Baggage)
io.sentry.flutter.SentryFlutter$updateOptions$3: SentryFlutter$updateOptions$3(io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty persistableAtomicNullable(java.lang.Object,java.lang.String,kotlin.jvm.functions.Function3)
io.sentry.NoOpScope: void removeExtra(java.lang.String)
io.sentry.android.replay.util.NodesKt: boolean isMaskable(androidx.compose.ui.graphics.painter.Painter)
io.sentry.metrics.DistributionMetric: void add(double)
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivityDestroyed(android.app.Activity)
io.sentry.metrics.MetricsApi: void distribution(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.protocol.App$JsonKeys: App$JsonKeys()
androidx.fragment.app.Fragment: int getEnterAnim()
io.sentry.protocol.Message: void setMessage(java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
io.sentry.protocol.SentryId: int hashCode()
io.sentry.Baggage: java.lang.String decode(java.lang.String)
io.sentry.internal.gestures.UiElement: java.lang.String getTag()
io.sentry.IScopeObserver: void setTag(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.sentry.android.core.performance.AppStartMetrics: void lambda$checkCreateTimeOnMain$1()
io.flutter.util.PathUtils: PathUtils()
io.sentry.SentryBaseEvent: java.lang.String access$1002(io.sentry.SentryBaseEvent,java.lang.String)
io.sentry.android.replay.ScreenshotRecorderConfig: io.sentry.android.replay.ScreenshotRecorderConfig copy$default(io.sentry.android.replay.ScreenshotRecorderConfig,int,int,float,float,int,int,int,java.lang.Object)
io.sentry.android.ndk.INativeScope: void setUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.replay.ScreenshotRecorder: void pause()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
io.sentry.NoOpScope: void setContexts(java.lang.String,java.lang.Character)
io.sentry.SentryOptions: void addTracingOrigin(java.lang.String)
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType valueOf(java.lang.String)
io.sentry.SentryOptions: void setProfilesSampleRate(java.lang.Double)
io.sentry.android.core.DeviceInfoUtil: android.os.StatFs getExternalStorageStat(java.io.File)
io.sentry.ProfilingTraceData: java.lang.String access$1902(io.sentry.ProfilingTraceData,java.lang.String)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
io.sentry.cache.PersistingScopeObserver: PersistingScopeObserver(io.sentry.SentryOptions)
io.sentry.protocol.Gpu: java.lang.Integer getId()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void clearClient()
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromUserFeedback$8(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.SentryOptions: void setRelease(java.lang.String)
io.sentry.ProfilingTraceData: void setEnvironment(java.lang.String)
io.sentry.cache.PersistingOptionsObserver: PersistingOptionsObserver(io.sentry.SentryOptions)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.CheckIn: java.lang.String getStatus()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
io.sentry.SpanContext$JsonKeys: SpanContext$JsonKeys()
io.sentry.android.replay.util.FixedWindowCallback: void onPanelClosed(int,android.view.Menu)
io.flutter.plugin.platform.PlatformViewsController: int access$1100(io.flutter.plugin.platform.PlatformViewsController,double)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
io.sentry.protocol.SentryException: java.lang.String getType()
io.sentry.flutter.SentryFlutterPlugin: void setUser(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.MethodChannel: void setWarnsOnChannelOverflow(boolean)
io.flutter.embedding.android.FlutterFragment: java.util.List getDartEntrypointArgs()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
io.sentry.android.replay.ReplayCache: io.sentry.protocol.SentryId access$getReplayId$p(io.sentry.android.replay.ReplayCache)
io.sentry.UncaughtExceptionHandlerIntegration: java.lang.Throwable getUnhandledThrowable(java.lang.Thread,java.lang.Throwable)
io.sentry.protocol.OperatingSystem: java.lang.String access$102(io.sentry.protocol.OperatingSystem,java.lang.String)
io.flutter.plugin.platform.PlatformViewWrapper: void resizeRenderTarget(int,int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.SentryOptions: void setModulesLoader(io.sentry.internal.modules.IModulesLoader)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
io.sentry.SentryReplayOptions: void addMaskViewClass(java.lang.String)
io.sentry.SentryTracer: java.lang.String getDescription()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
io.sentry.android.core.ManifestMetadataReader: ManifestMetadataReader()
io.flutter.embedding.android.FlutterFragmentActivity: FlutterFragmentActivity()
io.flutter.embedding.engine.loader.ResourceExtractor: void access$100(java.lang.String,java.util.HashSet)
io.sentry.CheckIn: io.sentry.MonitorContexts getContexts()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
io.sentry.flutter.SentryFlutterPlugin: void displayRefreshRate(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean onCreatePanelMenu(int,android.view.Menu)
io.flutter.embedding.android.FlutterFragment: java.lang.String getCachedEngineId()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$1900(int)
io.sentry.CheckIn: void setDuration(java.lang.Double)
io.sentry.SentryTracer: SentryTracer(io.sentry.TransactionContext,io.sentry.IHub)
io.sentry.Breadcrumb: io.sentry.Breadcrumb ui(java.lang.String,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.sentry.Hub: io.sentry.IHub clone()
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.plugin.platform.PlatformOverlayView)
io.sentry.Baggage: io.sentry.TraceContext toTraceContext()
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
io.flutter.plugin.platform.VirtualDisplayController: int getRenderTargetWidth()
io.sentry.android.core.SentryPerformanceProvider: void launchAppStartProfiler(io.sentry.android.core.performance.AppStartMetrics)
io.sentry.android.core.AndroidProfiler: void lambda$start$0()
io.sentry.ProfilingTraceData: java.lang.String getDeviceModel()
io.sentry.android.replay.WindowRecorder$onRootViewsChanged$1$1: WindowRecorder$onRootViewsChanged$1$1(android.view.View)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2(java.lang.String,java.lang.Object,java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
io.sentry.IConnectionStatusProvider: boolean addConnectionStatusObserver(io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
io.flutter.plugin.platform.PlatformViewRenderTarget: android.view.Surface getSurface()
io.sentry.IScope: java.util.List getAttachments()
io.sentry.android.core.ActivityFramesTracker: void setMetrics(android.app.Activity,io.sentry.protocol.SentryId)
io.sentry.ISpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter)
io.sentry.android.replay.ReplayCache$replayCacheDir$2: java.io.File invoke()
io.sentry.clientreport.NoOpClientReportRecorder: void recordLostEvent(io.sentry.clientreport.DiscardReason,io.sentry.DataCategory,long)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterEngineGroupCache: void clear()
io.sentry.SentryReplayOptions: java.lang.String getUnmaskViewContainerClass()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.sentry.ScopeObserverAdapter: void setExtra(java.lang.String,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
io.sentry.protocol.SentryStackFrame: void setNative(java.lang.Boolean)
io.sentry.SentryEnvelope: SentryEnvelope(io.sentry.SentryEnvelopeHeader,java.lang.Iterable)
io.sentry.rrweb.RRWebBreadcrumbEvent: double access$202(io.sentry.rrweb.RRWebBreadcrumbEvent,double)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: void onAvailable(android.net.Network)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
io.sentry.protocol.Response: java.lang.String getCookies()
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: io.sentry.Breadcrumb createBreadcrumb(long,android.content.Intent,java.lang.String,boolean)
io.sentry.SentryBaseEvent: java.lang.String access$900(io.sentry.SentryBaseEvent)
io.sentry.NoOpSentryClient: void flush(long)
io.sentry.android.replay.ScreenshotRecorderConfig: int component6()
io.sentry.DisabledQueue: DisabledQueue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.sentry.IScope: void setLevel(io.sentry.SentryLevel)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureException(io.sentry.IHub,java.lang.Throwable,io.sentry.ScopeCallback)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.sentry.Baggage: Baggage(java.util.Map,java.lang.String,boolean,io.sentry.ILogger)
io.sentry.backpressure.BackpressureMonitor: void run()
io.sentry.cache.PersistingScopeObserver$1: PersistingScopeObserver$1(io.sentry.cache.PersistingScopeObserver)
io.sentry.protocol.Mechanism: java.lang.Thread getThread()
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: io.sentry.IConnectionStatusProvider$ConnectionStatus getConnectionStatus(android.content.Context,android.net.ConnectivityManager,io.sentry.ILogger)
io.sentry.ProfilingTraceData: java.lang.String access$302(io.sentry.ProfilingTraceData,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
io.sentry.SentryDate: int compareTo(io.sentry.SentryDate)
io.sentry.SentryEvent: java.lang.String access$602(io.sentry.SentryEvent,java.lang.String)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
io.sentry.android.core.AnrV2EventProcessor: void setDist(io.sentry.SentryBaseEvent)
io.sentry.SentryReplayOptions$SentryReplayQuality: SentryReplayOptions$SentryReplayQuality(java.lang.String,int,float,int,int)
io.sentry.rrweb.RRWebMetaEvent: java.lang.String getHref()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
io.sentry.Scope: io.sentry.protocol.User getUser()
io.sentry.protocol.Geo: java.lang.String getCountryCode()
io.sentry.protocol.SentryException: void setMechanism(io.sentry.protocol.Mechanism)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
io.sentry.Scope: io.sentry.protocol.Request getRequest()
io.sentry.android.core.SentryAndroidOptions: void setAnrTimeoutIntervalMillis(long)
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.sentry.IHub: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.protocol.User: java.lang.String getName()
io.sentry.Hub: boolean isEnabled()
io.flutter.embedding.android.FlutterView: void onAttachedToWindow()
io.sentry.ISpan: void setOperation(java.lang.String)
io.flutter.plugins.sharedpreferences.LegacySharedPreferencesPlugin: LegacySharedPreferencesPlugin()
io.sentry.protocol.ViewHierarchyNode: void setIdentifier(java.lang.String)
io.sentry.flutter.SentryFlutter: boolean getAutoPerformanceTracingEnabled()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: void setOtherNodeSubtree(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
io.sentry.protocol.Device: java.lang.Integer access$2102(io.sentry.protocol.Device,java.lang.Integer)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter nullValue()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.activity.OnBackPressedCallback: void handleOnBackStarted(androidx.activity.BackEventCompat)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void noWindowsAreFocused()
io.flutter.embedding.android.FlutterTextureView: void init()
io.sentry.SpanContext: SpanContext(io.sentry.SpanContext)
io.sentry.android.core.internal.gestures.SentryGestureListener: boolean onDown(android.view.MotionEvent)
io.flutter.embedding.engine.plugins.PluginRegistry: void removeAll()
io.flutter.embedding.android.FlutterFragment: void onUserLeaveHint()
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromClientReport$22(io.sentry.SentryEnvelopeItem$CachedItem)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int,byte[])
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.FlutterActivity: void unregisterOnBackInvokedCallback()
io.sentry.protocol.User: java.lang.String access$202(io.sentry.protocol.User,java.lang.String)
io.sentry.android.core.SentryInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String access$000(java.io.File,android.content.pm.PackageManager,java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.sentry.NoOpTransaction: java.lang.Boolean isProfileSampled()
io.sentry.android.replay.LastSegmentData: java.util.List component8()
io.sentry.util.Pair: Pair(java.lang.Object,java.lang.Object)
io.sentry.Scope: java.lang.String getScreen()
io.sentry.Breadcrumb: void setMessage(java.lang.String)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
io.sentry.IHub: io.sentry.IHub clone()
io.sentry.ScopeObserverAdapter: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.NoOpScope: void setFingerprint(java.util.List)
io.sentry.android.core.ContextUtils: java.lang.String lambda$static$4(android.content.Context)
io.sentry.Stack$StackItem: io.sentry.IScope getScope()
io.sentry.rrweb.RRWebBreadcrumbEvent: void setMessage(java.lang.String)
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet)
io.sentry.internal.modules.CompositeModulesLoader: CompositeModulesLoader(java.util.List,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.Sentry: void init()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect getRect()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
io.sentry.Session$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder shouldAttachEngineToActivity(boolean)
io.sentry.IOptionsObserver: void setReplayErrorSampleRate(java.lang.Double)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
io.sentry.vendor.gson.stream.JsonReader: void skipValue()
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void share(java.lang.String)
io.sentry.JsonUnknown: java.util.Map getUnknown()
io.sentry.protocol.SentryRuntime: SentryRuntime(io.sentry.protocol.SentryRuntime)
io.sentry.protocol.Device: void setName(java.lang.String)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
io.sentry.android.core.DeviceInfoUtil: java.io.File getExternalStorageDep(java.io.File)
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromUserFeedback$7(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.SentryOptions: void setSerializer(io.sentry.ISerializer)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $values()
io.flutter.plugin.platform.PlatformViewRenderTarget: int getHeight()
io.sentry.Baggage: java.lang.String getReplayId()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter value(double)
io.sentry.android.core.SentryFrameMetrics: SentryFrameMetrics(int,long,int,long,long)
io.sentry.protocol.User: java.util.Map access$700(io.sentry.protocol.User)
io.sentry.TransactionContext: io.sentry.TransactionContext fromSentryTrace(java.lang.String,java.lang.String,io.sentry.SentryTraceHeader)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
io.sentry.ExternalOptions: io.sentry.SentryOptions$RequestSize getMaxRequestBodySize()
io.sentry.IHub: void setTransaction(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: int lastIndexOf(java.lang.Object)
io.sentry.protocol.SentrySpan: SentrySpan(io.sentry.Span)
io.sentry.android.replay.util.ViewsKt: void removeOnDrawListenerSafe(android.view.View,android.view.ViewTreeObserver$OnDrawListener)
io.sentry.SynchronizedCollection: boolean contains(java.lang.Object)
io.sentry.android.core.ManifestMetadataReader: java.lang.Boolean readBoolNullable(android.os.Bundle,io.sentry.ILogger,java.lang.String,java.lang.Boolean)
io.sentry.SentryOptions: java.lang.String getCacheDirPathWithoutDsn()
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
io.sentry.Breadcrumb: void setUnknown(java.util.Map)
io.sentry.NoOpHub: void startSession()
io.sentry.cache.tape.EmptyObjectQueue$EmptyIterator: boolean hasNext()
io.sentry.SentryEnvelopeItem: SentryEnvelopeItem(io.sentry.SentryEnvelopeItemHeader,java.util.concurrent.Callable)
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType valueOf(java.lang.String)
io.sentry.Session: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback getTracesSampler()
io.sentry.Baggage: io.sentry.Baggage fromHeader(java.lang.String,boolean,io.sentry.ILogger)
io.sentry.protocol.Contexts: io.sentry.protocol.Browser getBrowser()
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(java.io.FileDescriptor)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.sentry.rrweb.RRWebSpanEvent: java.lang.String access$002(io.sentry.rrweb.RRWebSpanEvent,java.lang.String)
io.sentry.Sentry: io.sentry.BaggageHeader getBaggage()
io.sentry.android.core.LoadClass: boolean isClassAvailable(java.lang.String,io.sentry.ILogger)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onDetachedFromBroadcastReceiver()
io.sentry.TraceContext: TraceContext(io.sentry.protocol.SentryId,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.sentry.protocol.SentryId)
io.sentry.SentryOptions: boolean isAttachStacktrace()
io.sentry.protocol.SentryStackFrame: java.lang.String access$102(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.android.core.internal.modules.AssetsModulesLoader: java.util.Map loadModules()
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
io.flutter.embedding.android.FlutterActivity$1: void onBackProgressed(android.window.BackEvent)
io.sentry.transport.RateLimiter: void markHintWhenSendingFailed(io.sentry.Hint,boolean)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.android.replay.ScreenshotRecorder$maskingPaint$2: ScreenshotRecorder$maskingPaint$2()
io.sentry.protocol.Mechanism: void setData(java.util.Map)
io.sentry.protocol.User: java.lang.String access$102(io.sentry.protocol.User,java.lang.String)
io.sentry.Scope: void setTag(java.lang.String,java.lang.String)
io.sentry.util.DebugMetaPropertiesApplier: java.lang.String getProguardUuid(java.util.Properties)
io.sentry.transport.RateLimiter: RateLimiter(io.sentry.SentryOptions)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.Device: java.lang.Long access$1602(io.sentry.protocol.Device,java.lang.Long)
io.sentry.Breadcrumb: java.lang.String access$102(io.sentry.Breadcrumb,java.lang.String)
io.sentry.protocol.SentryStackFrame: void setImageAddr(java.lang.String)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: void closeReader()
io.sentry.internal.gestures.UiElement: java.lang.String getOrigin()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.sentry.HubAdapter: io.sentry.transport.RateLimiter getRateLimiter()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.ViewHierarchyNode: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.Gpu: void setVersion(java.lang.String)
io.sentry.protocol.Mechanism: java.lang.Boolean access$302(io.sentry.protocol.Mechanism,java.lang.Boolean)
io.sentry.Span: io.sentry.SentryTraceHeader toSentryTrace()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String bondStateString(int)
io.sentry.SentryEnvelopeItem: byte[] getData()
io.sentry.SentryReplayEvent: void setTraceIds(java.util.List)
io.sentry.protocol.SentrySpan$Deserializer: SentrySpan$Deserializer()
io.sentry.util.HintUtils: java.lang.Object getSentrySdkHint(io.sentry.Hint)
io.sentry.NoOpTransaction: void setMeasurement(java.lang.String,java.lang.Number,io.sentry.MeasurementUnit)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int bmConnectionStateEnum(int)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onPanelClosed(int,android.view.Menu)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode(java.lang.String,int)
io.sentry.android.replay.WindowSpy: WindowSpy()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: SpellCheckChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.protocol.OperatingSystem$JsonKeys: OperatingSystem$JsonKeys()
io.sentry.util.CheckInUtils: java.lang.Object withCheckIn(java.lang.String,java.util.concurrent.Callable)
io.sentry.android.replay.ReplayCache: void addFrame$sentry_android_replay_release$default(io.sentry.android.replay.ReplayCache,android.graphics.Bitmap,long,java.lang.String,int,java.lang.Object)
io.sentry.android.replay.ScreenshotRecorder: ScreenshotRecorder(io.sentry.android.replay.ScreenshotRecorderConfig,io.sentry.SentryOptions,io.sentry.android.replay.util.MainLooperHandler,java.util.concurrent.ScheduledExecutorService,io.sentry.android.replay.ScreenshotRecorderCallback)
io.sentry.SentryReplayOptions: java.lang.String getMaskViewContainerClass()
io.sentry.protocol.MeasurementValue$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.transport.TransportResult$SuccessTransportResult: boolean isSuccess()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
io.sentry.NoOpSentryExecutorService: NoOpSentryExecutorService()
io.sentry.protocol.SdkVersion: io.sentry.protocol.SdkVersion updateSdkVersion(io.sentry.protocol.SdkVersion,java.lang.String,java.lang.String)
io.sentry.android.core.SentryAndroid: SentryAndroid()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
io.sentry.metrics.LocalMetricsAggregator: LocalMetricsAggregator()
io.sentry.SentryOptions: void setEnvironment(java.lang.String)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.RenderMode,io.flutter.embedding.android.TransparencyMode)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
io.sentry.SentryExecutorService: SentryExecutorService()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: float access$602(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState,float)
io.sentry.DateUtils: java.util.Date getDateTimeWithMillisPrecision(java.lang.String)
io.sentry.Sentry: void init(io.sentry.SentryOptions)
io.sentry.Stack: void push(io.sentry.Stack$StackItem)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String scanFailedString(int)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.sentry.android.replay.SessionReplayOptionsKt: void setMaskAllText(io.sentry.SentryReplayOptions,boolean)
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue: void dispatch(java.lang.Runnable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onWindowFocusChanged(boolean)
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.protocol.Device: java.lang.Long getExternalFreeStorage()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $values()
io.sentry.NoOpHub: io.sentry.SentryTraceHeader traceHeaders()
com.tekartik.sqflite.SqflitePlugin: SqflitePlugin()
io.sentry.metrics.NoopMetricsAggregator: void set(java.lang.String,int,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.flutter.embedding.android.FlutterFragment: java.lang.String getInitialRoute()
io.sentry.android.core.AnrV2Integration$AnrV2Hint: void setFlushable(io.sentry.protocol.SentryId)
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
io.sentry.Sentry: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.flutter.plugin.platform.PlatformView: android.view.View getView()
io.sentry.android.replay.ReplayCache$Companion: boolean fromDisk$lambda$3(io.sentry.android.replay.ReplayCache,java.io.File,java.lang.String)
io.sentry.android.core.cache.AndroidEnvelopeCache: boolean hasStartupCrashMarker(io.sentry.SentryOptions)
io.sentry.transport.ReusableCountLatch$Sync: void decrement()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
io.sentry.ProfilingTransactionData: int hashCode()
io.sentry.HubAdapter: void setFingerprint(java.util.List)
io.sentry.SentryOptions: void setIdleTimeout(java.lang.Long)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
io.sentry.Breadcrumb: java.util.Map getUnknown()
io.sentry.SentryBaseEvent: java.lang.String access$500(io.sentry.SentryBaseEvent)
io.flutter.embedding.android.KeyEmbedderResponder: void sendKeyEvent(io.flutter.embedding.android.KeyData,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
io.sentry.SentryOptions: void setTraceSampling(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: void runInBackground(kotlin.jvm.functions.Function0)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureException(io.sentry.ISentryClient,java.lang.Throwable,io.sentry.IScope)
io.sentry.ReplayController: void resume()
io.sentry.NoOpSentryClient: io.sentry.NoOpSentryClient getInstance()
io.sentry.android.replay.capture.BaseCaptureStrategy: void setScreenAtStart(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
io.sentry.config.CompositePropertiesProvider: CompositePropertiesProvider(java.util.List)
io.sentry.android.replay.capture.CaptureStrategy$Companion: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment buildReplay(io.sentry.SentryOptions,java.io.File,io.sentry.protocol.SentryId,java.util.Date,int,int,int,int,int,long,io.sentry.SentryReplayEvent$ReplayType,java.lang.String,java.util.List,java.util.Deque)
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
io.sentry.MainEventProcessor: boolean shouldApplyScopeData(io.sentry.SentryBaseEvent,io.sentry.Hint)
io.sentry.android.replay.WindowRecorder: void onRootViewsChanged(android.view.View,boolean)
io.sentry.android.core.AndroidTransactionProfiler: io.sentry.ProfilingTraceData onTransactionFinish(io.sentry.ITransaction,java.util.List,io.sentry.SentryOptions)
io.sentry.flutter.SentryFlutterPlugin: void loadImageList(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryLogcatAdapter: int d(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.plugin.platform.PlatformPlugin: void share(java.lang.String)
io.sentry.UncaughtExceptionHandlerIntegration$UncaughtExceptionHint: void setFlushable(io.sentry.protocol.SentryId)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayMask$1: ModifierExtensionsKt$sentryReplayMask$1()
io.sentry.SpanContext: java.lang.String getOperation()
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context,java.lang.String[])
androidx.fragment.app.Fragment: boolean isInBackStack()
io.sentry.Hint: void setReplayRecording(io.sentry.ReplayRecording)
io.sentry.android.replay.util.PersistableLinkedList: io.sentry.rrweb.RRWebEvent remove()
io.sentry.NoOpSpan: io.sentry.BaggageHeader toBaggageHeader(java.util.List)
io.sentry.protocol.MetricSummary: MetricSummary(double,double,double,int,java.util.Map)
io.sentry.android.replay.capture.BaseCaptureStrategy: void setRecorderConfig(io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.android.core.Installation: java.lang.String readInstallationFile(java.io.File)
io.sentry.SentryTraceHeader: java.lang.Boolean isSampled()
io.sentry.Breadcrumb: java.lang.Object getData(java.lang.String)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.sentry.flutter.SentryFlutter$updateOptions$20: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.sentry.android.replay.ScreenshotRecorder$prescaledMatrix$2: android.graphics.Matrix invoke()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.rrweb.RRWebInteractionMoveEvent$JsonKeys: RRWebInteractionMoveEvent$JsonKeys()
io.sentry.NoOpHub: boolean isHealthy()
io.sentry.android.core.DefaultAndroidEventProcessor: void setDist(io.sentry.SentryBaseEvent,java.lang.String)
io.sentry.protocol.SentrySpan: java.lang.Double getStartTimestamp()
io.sentry.profilemeasurements.ProfileMeasurementValue: void setUnknown(java.util.Map)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$finishTransaction$5(io.sentry.ITransaction,io.sentry.IScope)
io.sentry.SentryEnvelopeItemHeader$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: void combineThreadLocks(io.sentry.protocol.SentryThread,io.sentry.SentryLockReason)
io.sentry.IScope: void setFingerprint(java.util.List)
io.sentry.Span: void updateStartDate(io.sentry.SentryDate)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivityForConfigChanges()
io.sentry.android.replay.ReplayCache: boolean encode(io.sentry.android.replay.ReplayFrame)
io.sentry.ProfilingTraceData: void setDeviceManufacturer(java.lang.String)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2: kotlin.text.Regex invoke()
io.sentry.SentryReplayEvent: void setUnknown(java.util.Map)
io.sentry.android.core.SentryAndroidOptions: int getNdkHandlerStrategy()
io.flutter.embedding.engine.loader.ResourceExtractor: void deleteFiles(java.lang.String,java.util.HashSet)
io.sentry.SentryTracer$FinishStatus: io.sentry.SpanStatus access$100(io.sentry.SentryTracer$FinishStatus)
io.sentry.transport.QueuedThreadPoolExecutor: void waitTillIdle(long)
io.sentry.NoOpSentryClient: void captureUserFeedback(io.sentry.UserFeedback)
io.sentry.HubAdapter: void removeTag(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
io.sentry.util.IntegrationUtils: void addIntegrationToSdkVersion(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
io.sentry.ProfilingTraceData: java.lang.String getCpuArchitecture()
io.sentry.rrweb.RRWebSpanEvent: void setDataUnknown(java.util.Map)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
io.sentry.flutter.SentryFlutter$updateOptions$28: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.AnrV2EventProcessor: boolean sampleReplay(io.sentry.SentryEvent)
io.sentry.protocol.Request: void setOthers(java.util.Map)
io.sentry.JsonObjectReader: float nextFloat()
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
io.sentry.SentryBaseEvent: io.sentry.protocol.DebugMeta access$1200(io.sentry.SentryBaseEvent)
io.sentry.rrweb.RRWebVideoEvent: long getDurationMs()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
io.sentry.android.replay.video.SimpleVideoEncoder: io.sentry.android.replay.video.MuxerConfig getMuxerConfig()
io.sentry.SentryOptions$Cron: java.lang.Long getDefaultRecoveryThreshold()
io.sentry.android.core.AnrV2Integration$ParseResult$Type: io.sentry.android.core.AnrV2Integration$ParseResult$Type[] values()
io.sentry.ReplayRecording: java.util.List getPayload()
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(io.sentry.instrumentation.file.FileInputStreamInitData,java.io.FileDescriptor)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$900(io.flutter.plugin.platform.PlatformViewsController)
androidx.core.content.UnusedAppRestrictionsBackportService: UnusedAppRestrictionsBackportService()
io.sentry.protocol.SentryTransaction: java.lang.String getTransaction()
io.sentry.transport.ReusableCountLatch: ReusableCountLatch()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: void invoke()
io.sentry.NoOpHub: void configureScope(io.sentry.ScopeCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
io.sentry.android.replay.util.AndroidTextLayout: int getEllipsisCount(int)
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
androidx.fragment.app.Fragment: int getNextTransition()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
io.sentry.transport.RateLimiter: io.sentry.DataCategory getCategoryFromItemType(java.lang.String)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1: ProcessTextChannel$1(io.flutter.embedding.engine.systemchannels.ProcessTextChannel)
io.sentry.MetricsAggregator: long nowMillis()
io.flutter.plugin.common.MessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.sentry.cache.PersistingScopeObserver: void lambda$setBreadcrumbs$3()
io.sentry.android.core.ManifestMetadataReader: boolean isAutoInit(android.content.Context,io.sentry.ILogger)
io.sentry.IScopeObserver: void setTransaction(java.lang.String)
io.sentry.ProfilingTraceData: java.lang.String access$1202(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$1: void run()
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
io.sentry.android.core.performance.TimeSpan: void setStartedAt(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.IScope,io.sentry.Hint)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
io.sentry.util.MapObjectWriter: void setLenient(boolean)
io.sentry.rrweb.RRWebVideoEvent: long access$202(io.sentry.rrweb.RRWebVideoEvent,long)
io.sentry.Scope: io.sentry.Session endSession()
io.sentry.android.core.PerformanceAndroidEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.flutter.embedding.engine.FlutterEngineGroupCache: void remove(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.Scope: io.sentry.Breadcrumb executeBeforeBreadcrumb(io.sentry.SentryOptions$BeforeBreadcrumbCallback,io.sentry.Breadcrumb,io.sentry.Hint)
io.sentry.protocol.Device: java.lang.Long access$1302(io.sentry.protocol.Device,java.lang.Long)
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
io.sentry.protocol.Request: java.lang.Object getData()
io.sentry.clientreport.ClientReportKey: java.lang.String getReason()
io.sentry.SentryEnvelope: io.sentry.SentryEnvelope from(io.sentry.ISerializer,io.sentry.SentryBaseEvent,io.sentry.protocol.SdkVersion)
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(java.io.File,io.sentry.IHub)
androidx.fragment.app.Fragment: android.content.Context getContext()
io.sentry.NoOpConnectionStatusProvider: io.sentry.IConnectionStatusProvider$ConnectionStatus getConnectionStatus()
io.sentry.JsonObjectReader: void skipValue()
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(java.lang.String,boolean)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
io.sentry.ExternalOptions: java.lang.Boolean isEnableBackpressureHandling()
io.sentry.protocol.Device$DeviceOrientation: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineDetachedFromFlutterView()
io.sentry.Span: void setThrowable(java.lang.Throwable)
io.sentry.SentryBaseEvent: java.lang.String getTag(java.lang.String)
io.sentry.util.HintUtils: HintUtils()
io.sentry.PerformanceCollectionData: void addCpuData(io.sentry.CpuCollectionData)
io.flutter.embedding.engine.renderer.FlutterRenderer$2: FlutterRenderer$2(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.sentry.HostnameCache: HostnameCache(long,java.util.concurrent.Callable)
io.sentry.util.UrlUtils: io.sentry.util.UrlUtils$UrlDetails splitRelativeUrl(java.lang.String)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String access$102(io.sentry.rrweb.RRWebBreadcrumbEvent,java.lang.String)
io.sentry.protocol.SentryThread: java.lang.Boolean isDaemon()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
io.sentry.transport.QueuedThreadPoolExecutor: void afterExecute(java.lang.Runnable,java.lang.Throwable)
io.sentry.android.core.AnrV2EventProcessor: void setDevice(io.sentry.SentryBaseEvent)
io.sentry.Sentry: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.sentry.SentryBaseEvent: io.sentry.protocol.User access$800(io.sentry.SentryBaseEvent)
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
io.sentry.android.core.NetworkBreadcrumbsIntegration: io.sentry.android.core.BuildInfoProvider access$200(io.sentry.android.core.NetworkBreadcrumbsIntegration)
io.sentry.android.core.AnrV2Integration$AnrProcessor: void reportNonEnrichedHistoricalAnrs(java.util.List,java.lang.Long)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter nullValue()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
io.sentry.protocol.SdkVersion: java.util.Set access$102(io.sentry.protocol.SdkVersion,java.util.Set)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType getType()
io.sentry.SentryOptions: void addInAppInclude(java.lang.String)
io.sentry.TraceContext$Deserializer: java.lang.Exception missingRequiredFieldException(java.lang.String,io.sentry.ILogger)
io.sentry.util.MapObjectReader: boolean hasNext()
io.sentry.NoOpSpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureException(io.sentry.ISentryClient,java.lang.Throwable,io.sentry.IScope,io.sentry.Hint)
io.sentry.protocol.Request: void setMethod(java.lang.String)
io.sentry.protocol.SentryStackTrace: void setSnapshot(java.lang.Boolean)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.plugin.common.BasicMessageChannel,io.flutter.embedding.engine.FlutterJNI)
io.sentry.metrics.EncodedMetrics: java.util.Map getBuckets()
io.sentry.flutter.SentryFlutter$updateOptions$21: void invoke(boolean)
io.sentry.MeasurementUnit: java.lang.String name()
io.flutter.plugin.platform.PlatformView$-CC: void $default$onFlutterViewAttached(io.flutter.plugin.platform.PlatformView,android.view.View)
io.sentry.ExternalOptions: java.lang.Long getIdleTimeout()
io.flutter.plugin.platform.PlatformViewsController: void diposeAllViews()
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.sentry.SentryClient: io.sentry.SentryEvent processEvent(io.sentry.SentryEvent,io.sentry.Hint,java.util.List)
io.sentry.SpanContext: SpanContext(java.lang.String)
io.sentry.PerformanceCollectionData: void addMemoryData(io.sentry.MemoryCollectionData)
io.sentry.cache.EnvelopeCache: void writeCrashMarkerFile()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.sentry.ProfilingTraceData: java.lang.String getDeviceOsName()
io.sentry.SentryStackTraceFactory: java.util.List getStackFrames(java.lang.StackTraceElement[],boolean)
androidx.activity.ComponentActivity: void reportFullyDrawn()
io.sentry.clientreport.ClientReport$Deserializer: ClientReport$Deserializer()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
io.sentry.SentryOptions: void setBackpressureMonitor(io.sentry.backpressure.IBackpressureMonitor)
io.sentry.rrweb.RRWebBreadcrumbEvent$Deserializer: void deserializePayload(io.sentry.rrweb.RRWebBreadcrumbEvent,io.sentry.ObjectReader,io.sentry.ILogger)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
io.sentry.protocol.SentryException$Deserializer: SentryException$Deserializer()
io.sentry.MonitorConfig: java.lang.Long getCheckinMargin()
io.flutter.plugin.platform.SingleViewWindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)
io.sentry.android.core.AnrV2EventProcessor: void setSdk(io.sentry.SentryBaseEvent)
io.sentry.android.core.performance.WindowContentChangedCallback: WindowContentChangedCallback(android.view.Window$Callback,java.lang.Runnable)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
io.sentry.Baggage: java.lang.String getRelease()
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: android.view.PointerIcon getSystemPointerIcon(int)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void onLowMemory()
io.sentry.android.replay.capture.SessionCaptureStrategy: void onScreenshotRecorded$lambda$3(io.sentry.android.replay.capture.SessionCaptureStrategy,kotlin.jvm.functions.Function2,long,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
androidx.fragment.app.Fragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
io.sentry.rrweb.RRWebSpanEvent: void setOp(java.lang.String)
io.sentry.cache.CacheStrategy: boolean isValidSession(io.sentry.Session)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.rrweb.RRWebOptionsEvent$Deserializer: RRWebOptionsEvent$Deserializer()
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.sentry.SentryOptions: io.sentry.ISerializer lambda$new$1()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.sentry.clientreport.ClientReportRecorder: io.sentry.SentryEnvelope attachReportToEnvelope(io.sentry.SentryEnvelope)
io.sentry.SentryReplayEvent$ReplayType$Deserializer: io.sentry.SentryReplayEvent$ReplayType deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.SentryReplayEvent process(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.sentry.DisabledQueue: boolean offer(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
io.sentry.SentryReplayEvent: void setTimestamp(java.util.Date)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
io.sentry.protocol.SentryStackFrame: void setFilename(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback: void onKeyEventHandled(boolean)
io.sentry.MonitorConfig: java.util.Map getUnknown()
io.sentry.util.TracingUtils: void lambda$trace$2(io.sentry.util.TracingUtils$PropagationContextHolder,io.sentry.SentryOptions,io.sentry.IScope)
io.sentry.flutter.SentryFlutter$updateOptions$11: SentryFlutter$updateOptions$11(io.sentry.android.core.SentryAndroidOptions)
io.sentry.NoOpHub: io.sentry.BaggageHeader getBaggage()
io.sentry.HubAdapter: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.sentry.SentryOptions$Proxy: java.lang.String getHost()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.sentry.Baggage: java.lang.String encode(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setAnrEnabled(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.sentry.HostnameCache$HostnameCacheThreadFactory: HostnameCache$HostnameCacheThreadFactory()
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)
io.sentry.ExternalOptions: java.util.List getInAppIncludes()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$1200(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.android.replay.util.ViewsKt: kotlin.Pair isVisibleToUser(android.view.View)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
io.sentry.NoOpScope: void setContexts(java.lang.String,java.lang.Object[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.ExclusiveAppComponent getExclusiveAppComponent()
io.sentry.android.replay.util.FixedWindowCallback: void onDetachedFromWindow()
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$snakeToCamelCase$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.sentry.protocol.ViewHierarchyNode$JsonKeys: ViewHierarchyNode$JsonKeys()
io.sentry.android.core.AnrV2Integration$AnrV2Hint: boolean isFlushable(io.sentry.protocol.SentryId)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.Span: io.sentry.BaggageHeader toBaggageHeader(java.util.List)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
io.sentry.instrumentation.file.SentryFileOutputStream: io.sentry.instrumentation.file.FileOutputStreamInitData init(java.io.FileDescriptor,java.io.FileOutputStream,io.sentry.IHub)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.sentry.Breadcrumb: io.sentry.Breadcrumb info(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
io.sentry.SentryTracer: java.util.TimerTask getDeadlineTimeoutTask()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomic$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.android.core.InternalSentrySdk: void deleteCurrentSessionFile(io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
io.sentry.NoOpSentryClient: io.sentry.IMetricsAggregator getMetricsAggregator()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivityResumed(android.app.Activity)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
io.sentry.NoOpScope: java.util.List getEventProcessors()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: int getDistance()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
io.sentry.internal.modules.ManifestModulesLoader$Module: java.lang.String access$000(io.sentry.internal.modules.ManifestModulesLoader$Module)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
io.sentry.ObjectWriter: io.sentry.ObjectWriter jsonValue(java.lang.String)
io.sentry.rrweb.RRWebSpanEvent: java.lang.String getTag()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.sentry.android.replay.util.ViewsKt: void addOnDrawListenerSafe(android.view.View,android.view.ViewTreeObserver$OnDrawListener)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
io.sentry.NoOpReplayController: void stop()
io.sentry.protocol.ViewHierarchyNode: java.lang.Double getX()
io.sentry.NoOpScope: void setContexts(java.lang.String,java.lang.Number)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.sentry.ObjectReader: java.lang.Long nextLongOrNull()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
io.sentry.SentryOptions: boolean isEnableTimeToFullDisplayTracing()
io.sentry.android.core.AndroidOptionsInitializer: java.lang.String lambda$installDefaultIntegrations$1(io.sentry.android.core.SentryAndroidOptions)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
io.sentry.DisabledQueue: void clear()
io.flutter.embedding.android.KeyEmbedderResponder: void synthesizeEvent(boolean,java.lang.Long,java.lang.Long,long)
io.sentry.Breadcrumb: void setData(java.lang.String,java.lang.Object)
io.sentry.NoOpScope: io.sentry.ISpan getSpan()
io.sentry.android.core.DefaultAndroidEventProcessor: boolean shouldApplyScopeData(io.sentry.SentryBaseEvent,io.sentry.Hint)
io.sentry.protocol.Mechanism: void setHelpLink(java.lang.String)
io.sentry.protocol.Mechanism: java.util.Map getData()
io.sentry.Breadcrumb: io.sentry.Breadcrumb http(java.lang.String,java.lang.String,java.lang.Integer)
io.sentry.protocol.Mechanism: Mechanism(java.lang.Thread)
io.sentry.cache.tape.QueueFile$Builder: io.sentry.cache.tape.QueueFile$Builder zero(boolean)
io.sentry.TransactionContext: TransactionContext(java.lang.String,java.lang.String,io.sentry.TracesSamplingDecision)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.clientreport.NoOpClientReportRecorder: NoOpClientReportRecorder()
io.sentry.NoOpTransaction: void forceFinish(io.sentry.SpanStatus,boolean,io.sentry.Hint)
io.sentry.util.Random: Random()
io.sentry.metrics.EncodedMetrics: EncodedMetrics(java.util.Map)
io.flutter.embedding.engine.plugins.service.ServiceAware: void onDetachedFromService()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType fromLong(long)
io.sentry.NoOpSpan: java.lang.Throwable getThrowable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String uuidStr(java.lang.Object)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String getBreadcrumbType()
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1()
io.sentry.android.replay.capture.BufferCaptureStrategy: void createCurrentSegment(java.lang.String,kotlin.jvm.functions.Function1)
io.sentry.protocol.DebugImage: java.lang.String getArch()
io.sentry.protocol.Response: java.lang.Object getData()
io.sentry.metrics.MetricsHelper: void encodeMetrics(long,java.util.Collection,java.lang.StringBuilder)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
io.sentry.NoOpTransaction: io.sentry.TracesSamplingDecision getSamplingDecision()
io.sentry.android.core.AnrV2Integration$AnrProcessor: io.sentry.android.core.AnrV2Integration$ParseResult parseThreadDump(android.app.ApplicationExitInfo,boolean)
io.sentry.HubAdapter: void setUser(io.sentry.protocol.User)
io.sentry.android.replay.ReplayIntegration: void onScreenshotRecorded(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
io.sentry.Scope: void clear()
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
io.sentry.android.core.AndroidOptionsInitializer: void loadDefaultAndMetadataOptions(io.sentry.android.core.SentryAndroidOptions,android.content.Context)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.sentry.SentryOptions: io.sentry.TransactionPerformanceCollector getTransactionPerformanceCollector()
io.sentry.SentryOptions: java.util.List getGestureTargetLocators()
io.sentry.ObjectReader: java.lang.Object nextObjectOrNull()
io.sentry.SentryBaseEvent: void setTag(java.lang.String,java.lang.String)
io.sentry.IHub: void close(boolean)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableScopeSync()
io.flutter.embedding.android.FlutterImageView: void closeImageReader()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.sentry.util.MapObjectReader: java.lang.String nextString()
io.sentry.protocol.User: java.lang.String getSegment()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.sentry.android.replay.capture.BufferCaptureStrategy: void stop$lambda$0(java.io.File)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
io.sentry.DateUtils: double dateToSeconds(java.util.Date)
io.sentry.ObjectWriter: io.sentry.ObjectWriter endObject()
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter endObject()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback getImeSyncCallback()
io.sentry.IScopeObserver: void removeTag(java.lang.String)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource[] $values()
io.sentry.protocol.App: java.lang.String access$002(io.sentry.protocol.App,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.sentry.android.core.ContextUtils$SideLoadedInfo: ContextUtils$SideLoadedInfo(boolean,java.lang.String)
io.sentry.protocol.Gpu: java.lang.String getNpotSupport()
io.sentry.util.StringUtils: java.lang.String substringBefore(java.lang.String,java.lang.String)
io.sentry.cache.CacheStrategy: io.sentry.Session readSession(io.sentry.SentryEnvelopeItem)
io.sentry.CircularFifoQueue: void clear()
io.sentry.rrweb.RRWebVideoEvent: void setFrameRateType(java.lang.String)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type fromLong(long)
io.sentry.android.replay.video.SimpleMp4FrameMuxer: void release()
io.flutter.embedding.engine.FlutterEngine: void destroy()
io.sentry.cache.CacheStrategy: boolean isDirectoryValid()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int getWidth()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureReplayEvent(io.sentry.SentryReplayEvent,io.sentry.IScope,io.sentry.Hint)
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener: void onUserLeaveHint()
io.sentry.android.replay.ScreenshotRecorderConfig$Companion: ScreenshotRecorderConfig$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$1800(int)
io.sentry.CheckIn: io.sentry.protocol.SentryId getCheckInId()
io.sentry.rrweb.RRWebVideoEvent: void setWidth(int)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: boolean access$002(io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget,boolean)
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromAttachment$17(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.replay.ReplayIntegration: void close()
io.sentry.android.replay.RootViewsSpy: java.util.ArrayList access$getDelegatingViewList$p(io.sentry.android.replay.RootViewsSpy)
io.sentry.util.SampleRateUtils: boolean isValidProfilesSampleRate(java.lang.Double)
io.sentry.protocol.SdkVersion: java.util.List getIntegrations()
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.sentry.SynchronizedCollection: void clear()
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceAvailable()
io.sentry.NoOpTransaction: void setName(java.lang.String)
io.sentry.protocol.Message$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(java.io.File)
io.sentry.android.core.AnrIntegrationFactory: io.sentry.Integration create(android.content.Context,io.sentry.android.core.BuildInfoProvider)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: FlutterFragmentActivity$NewEngineIntentBuilder(java.lang.Class)
io.sentry.protocol.Device: boolean equals(java.lang.Object)
io.sentry.protocol.Contexts: io.sentry.protocol.Device getDevice()
io.sentry.instrumentation.file.SentryFileWriter: SentryFileWriter(java.io.File,boolean,io.sentry.IHub)
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.Breadcrumb: Breadcrumb()
io.sentry.flutter.SentryFlutter$updateOptions$24: SentryFlutter$updateOptions$24(kotlin.jvm.internal.Ref$ObjectRef)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$Serializer: RRWebIncrementalSnapshotEvent$Serializer()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.transport.TransportResult: io.sentry.transport.TransportResult error()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
io.sentry.config.PropertiesProvider: java.lang.Double getDoubleProperty(java.lang.String)
io.flutter.util.TraceSection: void begin(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $values()
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.sentry.SentryTracer: void finish()
io.sentry.SentryExecutorService: void close(long)
io.sentry.Scope: void setPropagationContext(io.sentry.PropagationContext)
io.sentry.TraceContext: void setUnknown(java.util.Map)
io.sentry.ISpan: java.lang.Object getData(java.lang.String)
io.sentry.ExternalOptions: java.lang.String getProguardUuid()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.protocol.ViewHierarchyNode: void setType(java.lang.String)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onActionModeFinished(android.view.ActionMode)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler access$000(io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
io.sentry.android.core.ANRWatchDog: void lambda$new$1(io.sentry.transport.ICurrentDateProvider)
io.sentry.android.replay.ScreenshotRecorderConfig: ScreenshotRecorderConfig(float,float)
io.sentry.DirectoryProcessor: void processFile(java.io.File,io.sentry.Hint)
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: java.io.FileOutputStream create(java.io.FileOutputStream,java.io.File,io.sentry.IHub)
io.sentry.android.core.NdkHandlerStrategy: int getValue()
io.sentry.android.core.SentryAndroid: void deduplicateIntegrations(io.sentry.SentryOptions,boolean,boolean)
io.sentry.HostnameCache: void handleCacheUpdateFailure()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistingExecutor$2: java.lang.Object invoke()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void scheduleFrame()
io.sentry.JsonObjectDeserializer: void pushCurrentToken(io.sentry.JsonObjectDeserializer$Token)
io.sentry.Sentry: void startSession()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.sentry.android.replay.ReplayIntegration: boolean isRecording()
io.sentry.SentryOptions$RequestSize: SentryOptions$RequestSize(java.lang.String,int)
io.sentry.SentryTracer: io.sentry.protocol.TransactionNameSource getTransactionNameSource()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setPreferredOrientations(int)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
io.sentry.Baggage: io.sentry.Baggage fromEvent(io.sentry.SentryEvent,io.sentry.SentryOptions)
io.sentry.NoOpTransaction: boolean isNoOp()
io.sentry.Baggage: java.lang.String get(java.lang.String)
io.sentry.SentryEnvelopeHeader: java.util.Map getUnknown()
io.sentry.protocol.MeasurementValue: MeasurementValue(java.lang.Number,java.lang.String,java.util.Map)
io.sentry.CircularFifoQueue: int decrement(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
io.sentry.android.replay.WindowSpy: java.lang.Class access$getDecorViewClass(io.sentry.android.replay.WindowSpy)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality valueOf(java.lang.String)
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
io.sentry.android.replay.LastSegmentData: long component5()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
io.sentry.protocol.Geo$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
io.sentry.JsonObjectSerializer: void serializeMap(io.sentry.ObjectWriter,io.sentry.ILogger,java.util.Map)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
io.sentry.MonitorConfig: void setRecoveryThreshold(java.lang.Long)
io.sentry.android.ndk.NativeScope: void setUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.replay.capture.BufferCaptureStrategy: void rotate(java.util.List,long)
io.sentry.Dsn: java.lang.String getSecretKey()
io.flutter.util.TraceSection: void close()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode getParent()
io.sentry.metrics.MetricsApi: void timing(java.lang.String,java.lang.Runnable,io.sentry.MeasurementUnit$Duration,java.util.Map)
io.sentry.SentryOptions: void setBeforeEnvelopeCallback(io.sentry.SentryOptions$BeforeEnvelopeCallback)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
io.sentry.protocol.Device: java.lang.String getLanguage()
io.sentry.vendor.Base64: java.lang.String encodeToString(byte[],int)
io.sentry.transport.HttpConnection: void closeAndDisconnect(java.net.HttpURLConnection)
io.sentry.android.replay.capture.SessionCaptureStrategy$pause$1: SessionCaptureStrategy$pause$1(io.sentry.android.replay.capture.SessionCaptureStrategy)
io.sentry.SentryLevel: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.DebugImage: void setImageAddr(java.lang.String)
io.sentry.cache.tape.QueueFile: void resetFile()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
io.sentry.util.HintUtils$SentryNullableConsumer: void accept(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: boolean getBackCallbackState()
io.sentry.CheckIn$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
io.sentry.protocol.Request: void setCookies(java.lang.String)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
io.sentry.Scope: void setTransaction(java.lang.String)
io.sentry.flutter.SentryFlutter$Companion: SentryFlutter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.NoOpTransaction: io.sentry.ISpan startChild(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
io.sentry.flutter.SentryFlutter$updateOptions$8: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
io.sentry.JsonObjectReader: void close()
io.sentry.Hint: void addAttachment(io.sentry.Attachment)
io.sentry.protocol.Gpu: java.util.Map getUnknown()
io.sentry.SentryOptions: int getMaxCacheItems()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
io.sentry.SentryOptions: void setBeforeSendTransaction(io.sentry.SentryOptions$BeforeSendTransactionCallback)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiDisplayed()
io.sentry.android.replay.util.FixedWindowCallback: boolean dispatchTouchEvent(android.view.MotionEvent)
io.sentry.cache.PersistingScopeObserver$1: void toStream(java.lang.Object,java.io.OutputStream)
androidx.core.app.ActivityCompat$Api32Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.sentry.protocol.MetricSummary: void setTags(java.util.Map)
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher: void didChangeEditingState(boolean,boolean,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.sentry.SentryEvent: io.sentry.SentryLevel access$502(io.sentry.SentryEvent,io.sentry.SentryLevel)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.LifecycleWatcher: void onStop(androidx.lifecycle.LifecycleOwner)
io.sentry.exception.InvalidSentryTraceHeaderException: InvalidSentryTraceHeaderException(java.lang.String,java.lang.Throwable)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context)
io.sentry.SentryOptions: void setProfilingTracesHz(int)
io.sentry.android.core.AnrV2Integration$ParseResult: AnrV2Integration$ParseResult(io.sentry.android.core.AnrV2Integration$ParseResult$Type,byte[],java.util.List)
io.sentry.CheckIn: void setUnknown(java.util.Map)
io.sentry.protocol.Contexts$Deserializer: Contexts$Deserializer()
io.sentry.Breadcrumb: void removeData(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
io.sentry.protocol.ViewHierarchyNode: void setY(java.lang.Double)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
io.sentry.SentryNanotimeDate: int compareTo(io.sentry.SentryDate)
io.sentry.SentryWrapper: java.util.concurrent.Callable wrapCallable(java.util.concurrent.Callable)
io.sentry.NoOpHub: void bindClient(io.sentry.ISentryClient)
io.sentry.protocol.Gpu$Deserializer: Gpu$Deserializer()
io.sentry.android.core.UserInteractionIntegration: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$400(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.sentry.android.replay.ScreenshotRecorder: void onDraw()
io.sentry.SentryClient: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn,io.sentry.IScope,io.sentry.Hint)
io.sentry.SentryTracer: java.util.List getChildren()
io.sentry.JsonSerializer: java.lang.String serialize(java.util.Map)
io.sentry.Span: java.lang.String getTag(java.lang.String)
io.sentry.Sentry: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint)
io.sentry.protocol.ViewHierarchy$Deserializer: ViewHierarchy$Deserializer()
io.sentry.SentryOptions$TracesSamplerCallback: java.lang.Double sample(io.sentry.SamplingContext)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void installDeferredComponent(int,java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivityForConfigChanges()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$1: void run()
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromReplay(io.sentry.ISerializer,io.sentry.ILogger,io.sentry.SentryReplayEvent,io.sentry.ReplayRecording,boolean)
io.sentry.clientreport.ClientReportRecorder: ClientReportRecorder(io.sentry.SentryOptions)
io.sentry.MonitorScheduleUnit: java.lang.String apiName()
io.sentry.cache.CacheStrategy: void saveNewEnvelope(io.sentry.SentryEnvelope,java.io.File,long)
io.sentry.protocol.SentryThread: java.lang.Boolean access$602(io.sentry.protocol.SentryThread,java.lang.Boolean)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.sentry.android.core.BuildInfoProvider: java.lang.String getManufacturer()
io.sentry.android.core.CurrentActivityHolder: io.sentry.android.core.CurrentActivityHolder getInstance()
io.sentry.flutter.SentryFlutterPlugin$setupReplay$2: java.lang.Object invoke()
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty persistableAtomicNullable$default(io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.Object,java.lang.String,kotlin.jvm.functions.Function3,int,java.lang.Object)
io.sentry.SentryOptions: int getMaxSpans()
io.sentry.SentryTracer: io.sentry.ISpan startChild(java.lang.String)
io.sentry.Sentry: void setLevel(io.sentry.SentryLevel)
io.sentry.android.core.DeviceInfoUtil: io.sentry.protocol.OperatingSystem retrieveOperatingSystemInformation()
io.sentry.CheckIn: CheckIn(java.lang.String,io.sentry.CheckInStatus)
io.sentry.SentryTraceHeader: java.lang.String getName()
io.sentry.rrweb.RRWebOptionsEvent: void setDataUnknown(java.util.Map)
io.sentry.SentryReplayEvent: boolean equals(java.lang.Object)
io.sentry.android.core.SentryLogcatAdapter: void addAsBreadcrumb(java.lang.String,io.sentry.SentryLevel,java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics getViewportMetrics()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
io.sentry.TraceContext: java.lang.String getSampleRate()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
io.sentry.protocol.DebugImage: java.lang.String getUuid()
io.sentry.profilemeasurements.ProfileMeasurement: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.Device: void setScreenHeightPixels(java.lang.Integer)
io.flutter.embedding.android.FlutterView: java.util.Set access$300(io.flutter.embedding.android.FlutterView)
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartEntrypoint(java.lang.String)
io.sentry.protocol.Gpu: void setApiType(java.lang.String)
io.sentry.Session$State: io.sentry.Session$State valueOf(java.lang.String)
io.sentry.NoOpHub: void withScope(io.sentry.ScopeCallback)
io.sentry.cache.tape.FileObjectQueue: void clear()
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceAvailable(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long access$600(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
io.sentry.SentryOptions: io.sentry.ISerializer getSerializer()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeEnvelopeCallback getBeforeEnvelopeCallback()
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
io.sentry.ITransactionProfiler: void close()
io.flutter.embedding.android.FlutterActivity: void onDestroy()
io.flutter.view.TextureRegistry$OnFrameConsumedListener: void onFrameConsumed()
io.sentry.android.replay.ReplayIntegration: void onScreenshotRecorded(java.io.File,long)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
io.sentry.protocol.Geo: java.lang.String access$002(io.sentry.protocol.Geo,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getDartEntrypointFunctionName()
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Bitmap access$getScreenshot$p(io.sentry.android.replay.ScreenshotRecorder)
io.sentry.Breadcrumb: java.lang.String getCategory()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
io.sentry.protocol.Contexts: void setGpu(io.sentry.protocol.Gpu)
io.sentry.SentryExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)
io.sentry.MeasurementUnit$Information: MeasurementUnit$Information(java.lang.String,int)
io.sentry.rrweb.RRWebEvent$Serializer: void serialize(io.sentry.rrweb.RRWebEvent,io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
io.sentry.SentryOptions: void setGestureTargetLocators(java.util.List)
io.sentry.android.replay.RootViewsSpy: RootViewsSpy(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.protocol.DebugImage$Deserializer: io.sentry.protocol.DebugImage deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryStackTraceFactory: java.lang.Boolean isInApp(java.lang.String)
androidx.fragment.app.Fragment: java.lang.String generateActivityResultKey()
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
io.sentry.Instrumenter: io.sentry.Instrumenter[] $values()
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.TransparencyMode)
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.ScreenshotRecorderConfig getRecorderConfig()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(java.lang.Object)
io.sentry.ITransaction: java.lang.Boolean isProfileSampled()
io.sentry.ISpan: java.lang.Throwable getThrowable()
io.sentry.android.core.SentryAndroidOptions: boolean isAttachViewHierarchy()
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: java.lang.String toString()
io.sentry.IScope: void setContexts(java.lang.String,java.lang.Object)
io.sentry.flutter.SentryFlutter$updateOptions$28$1: void invoke(java.util.Map)
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromAttachment(io.sentry.ISerializer,io.sentry.ILogger,io.sentry.Attachment,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
io.sentry.protocol.Response: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.AndroidTransportGate: boolean isConnected(io.sentry.IConnectionStatusProvider$ConnectionStatus)
io.sentry.android.core.SpanFrameMetricsCollector: int addPendingFrameDelay(io.sentry.android.core.SentryFrameMetrics,long,long,long)
io.sentry.Sentry: io.sentry.ITransaction startTransaction(io.sentry.TransactionContext)
io.sentry.ISentryClient: void flush(long)
io.sentry.SentryAppStartProfilingOptions: java.lang.String getProfilingTracesDirPath()
io.sentry.rrweb.RRWebOptionsEvent: java.lang.String access$002(io.sentry.rrweb.RRWebOptionsEvent,java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityStopped(android.app.Activity)
io.sentry.MetricsAggregator: void add(io.sentry.metrics.MetricType,java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$OperationOnPermission: void op(boolean,java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void pause()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: android.app.Activity getActivity()
io.sentry.SystemOutLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary(android.content.Context)
io.sentry.NoOpHub: io.sentry.transport.RateLimiter getRateLimiter()
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.platform.PlatformViewsController)
io.sentry.DefaultTransactionPerformanceCollector$1: DefaultTransactionPerformanceCollector$1(io.sentry.DefaultTransactionPerformanceCollector)
io.sentry.cache.tape.ObjectQueue: java.util.List peek(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5102(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.sentry.util.HintUtils: io.sentry.hints.EventDropReason getEventDropReason(io.sentry.Hint)
io.sentry.Dsn: Dsn(java.lang.String)
io.sentry.SentryInstantDate: long nanoTimestamp()
io.sentry.android.core.AnrV2EventProcessor: void setSideLoadedInfo(io.sentry.SentryBaseEvent)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection getLastInputConnection()
io.sentry.rrweb.RRWebBreadcrumbEvent$Deserializer: io.sentry.rrweb.RRWebBreadcrumbEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.NoOpTransactionProfiler: void close()
io.sentry.android.replay.ReplayIntegration: void captureReplay(java.lang.Boolean)
io.sentry.ProfilingTraceData: java.lang.String getBuildId()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.sentry.SentryOptions: void setSendDefaultPii(boolean)
io.sentry.SentryEvent: boolean isCrashed()
io.sentry.BaggageHeader: BaggageHeader(java.lang.String)
io.sentry.android.core.internal.gestures.SentryGestureListener: void lambda$stopTracing$1(io.sentry.IScope)
io.sentry.protocol.Device: void setConnectionType(java.lang.String)
io.sentry.android.replay.video.MuxerConfig: int getBitRate()
io.sentry.protocol.Response$Deserializer: Response$Deserializer()
io.sentry.android.ndk.BuildConfig: BuildConfig()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.sentry.android.ndk.R: R()
io.sentry.Breadcrumb$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.LifecycleWatcher: void cancelTask()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType[] values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
io.sentry.clientreport.ClientReport: java.util.List getDiscardedEvents()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.fragment.app.Fragment: boolean isInLayout()
io.flutter.embedding.android.FlutterFragment: boolean shouldDispatchAppLifecycleState()
io.sentry.android.replay.WindowManagerSpy: WindowManagerSpy()
io.flutter.plugin.text.ProcessTextPlugin: void cacheResolveInfos()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
io.sentry.android.replay.video.SimpleVideoEncoder$hasExynosCodec$2: java.lang.Boolean invoke()
io.sentry.metrics.NoopMetricsAggregator: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
io.flutter.view.TextureRegistry$-CC: void $default$onTrimMemory(io.flutter.view.TextureRegistry,int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)
io.sentry.vendor.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
io.sentry.SentryOptions: void setEnableMetrics(boolean)
dev.fluttercommunity.plus.packageinfo.PackageInfoPlugin: PackageInfoPlugin()
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineGroupId()
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
io.sentry.vendor.gson.stream.JsonReader: boolean nextBoolean()
io.sentry.UserFeedback: java.lang.String getEmail()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope)
io.sentry.MetricsAggregator: void distribution(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void aWindowIsFocused()
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean getAutomaticallyRegisterPlugins()
io.sentry.protocol.Device: void setArchs(java.lang.String[])
io.sentry.protocol.Device: java.lang.String getLocale()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.sentry.protocol.Device: void setLowMemory(java.lang.Boolean)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext)
io.sentry.android.core.AndroidProfiler: void close()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
io.sentry.android.core.CurrentActivityHolder: void clearActivity()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
io.sentry.protocol.Mechanism: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.internal.util.Debouncer: boolean checkForDebounce()
io.sentry.SentryOptions: io.sentry.SentryDateProvider lambda$new$3()
io.sentry.protocol.SentryStackFrame: java.lang.String getAbsPath()
io.sentry.OutboxSender: void processFile(java.io.File,io.sentry.Hint)
io.sentry.SpanContext: java.lang.Boolean getSampled()
io.sentry.android.replay.ReplayCache: io.sentry.android.replay.GeneratedVideo createVideoOf$default(io.sentry.android.replay.ReplayCache,long,long,int,int,int,int,int,java.io.File,int,java.lang.Object)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: void onConnectionStatusChanged(io.sentry.IConnectionStatusProvider$ConnectionStatus)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceProducer createSurfaceProducer()
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
io.sentry.android.core.SentryAndroidOptions: SentryAndroidOptions()
io.sentry.util.StringUtils: java.lang.String calculateStringHash(java.lang.String,io.sentry.ILogger)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$2: java.lang.Object invoke()
io.sentry.android.core.CurrentActivityIntegration: void cleanCurrentActivity(android.app.Activity)
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType[] $values()
io.flutter.embedding.engine.FlutterEngineGroupCache: FlutterEngineGroupCache()
androidx.activity.OnBackPressedCallback: boolean isEnabled()
io.sentry.OutboxSender: io.sentry.TracesSamplingDecision extractSamplingDecision(io.sentry.TraceContext)
io.sentry.android.replay.capture.SessionCaptureStrategy$Companion: SessionCaptureStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityBridge$SemanticsNode: void log(java.lang.String,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
io.sentry.SentryOptions: io.sentry.ReplayController getReplayController()
io.sentry.clientreport.ClientReportRecorder: void restoreCountsFromClientReport(io.sentry.clientreport.ClientReport)
io.sentry.Stack: int size()
io.sentry.cache.PersistingScopeObserver: void lambda$addBreadcrumb$2(io.sentry.Breadcrumb)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(boolean)
io.sentry.protocol.Device: java.lang.String getCpuDescription()
io.sentry.protocol.App: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void lambda$onConfigurationChanged$0(long,android.content.res.Configuration)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void restoreSystemUiOverlays()
io.sentry.Sentry: io.sentry.SentryTraceHeader traceHeaders()
io.sentry.Breadcrumb: Breadcrumb(long)
io.sentry.SentryOptions: void setMaxAttachmentSize(long)
androidx.startup.InitializationProvider: InitializationProvider()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
io.sentry.SentryItemType: java.lang.String getItemType()
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment: CaptureStrategy$ReplaySegment(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.rrweb.RRWebSpanEvent: double access$302(io.sentry.rrweb.RRWebSpanEvent,double)
io.sentry.protocol.MetricSummary$Deserializer: io.sentry.protocol.MetricSummary deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.NoOpScope: void setRequest(io.sentry.protocol.Request)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$onMethodCall$4(io.flutter.plugin.common.MethodChannel$Result,boolean,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] getExistingTimestamps(java.io.File)
io.sentry.SentryWrapper: SentryWrapper()
io.sentry.android.replay.RootViewsSpy$listeners$1: boolean add(io.sentry.android.replay.OnRootViewsChangedListener)
io.flutter.embedding.android.FlutterFragment: void setDelegateFactory(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void captureConfigurationChangedBreadcrumb(long,android.content.res.Configuration)
io.sentry.Hint: Hint()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.sentry.util.MapObjectWriter: void serializeDate(io.sentry.ILogger,java.util.Date)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String adapterStateString(int)
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus[] $values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.sentry.protocol.Contexts: void setOperatingSystem(io.sentry.protocol.OperatingSystem)
io.sentry.SentryBaseEvent: java.lang.Object getExtra(java.lang.String)
io.sentry.SentryClient: io.sentry.transport.RateLimiter getRateLimiter()
io.sentry.SentryOptions: void setDiagnosticLevel(io.sentry.SentryLevel)
io.sentry.android.core.R: R()
io.sentry.protocol.App$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.transport.NoOpEnvelopeCache: io.sentry.transport.NoOpEnvelopeCache getInstance()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean isAdapterOn()
io.sentry.metrics.MetricsHelper: java.lang.String escapeString(java.lang.String)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.IHub,io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.Hint)
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin,android.view.View)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
io.sentry.android.replay.capture.SessionCaptureStrategy: void createCurrentSegment(java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.Request: int hashCode()
io.sentry.Span: java.lang.Boolean isProfileSampled()
io.sentry.PropagationContext: void setParentSpanId(io.sentry.SpanId)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.sentry.DefaultTransactionPerformanceCollector$2: void run()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.sentry.flutter.SentryFlutterPlugin: java.util.Map serialize(io.sentry.protocol.DebugImage)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
io.sentry.android.replay.Recorder: void start(io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.SynchronizedCollection: boolean remove(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.ScopeObserverAdapter: void removeTag(java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
androidx.fragment.app.Fragment: void postponeEnterTransition()
io.sentry.JsonObjectReader: java.util.Date nextDateOrNull(io.sentry.ILogger)
io.sentry.android.core.AnrV2Integration$AnrProcessor: byte[] getDumpBytes(java.io.InputStream)
io.sentry.android.replay.video.SimpleVideoEncoder$hasExynosCodec$2: java.lang.Object invoke()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.sentry.NoOpScope: io.sentry.protocol.Contexts getContexts()
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: void close()
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
io.sentry.SentryTraceHeader: io.sentry.protocol.SentryId getTraceId()
io.sentry.android.replay.video.MuxerConfig: int getRecordingHeight()
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date)
io.sentry.cache.tape.QueueFile: void access$100(io.sentry.cache.tape.QueueFile)
io.sentry.Hint: void setThreadDump(io.sentry.Attachment)
io.sentry.SentryBaseEvent: java.util.Map access$1302(io.sentry.SentryBaseEvent,java.util.Map)
io.flutter.plugin.common.BasicMessageChannel$MessageHandler: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
io.sentry.android.replay.util.ViewsKt: boolean isMaskable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
io.sentry.protocol.SentryThread: java.lang.String getState()
io.sentry.android.replay.SessionReplayOptionsKt: void setMaskAllImages(io.sentry.SentryReplayOptions,boolean)
io.sentry.android.core.cache.AndroidEnvelopeCache: java.lang.Long lastReportedAnr(io.sentry.SentryOptions)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.NoOpTransaction: void finish()
io.sentry.IHub: void setSpanContext(java.lang.Throwable,io.sentry.ISpan,java.lang.String)
io.sentry.android.core.ContextUtils: java.lang.String getKernelVersion(io.sentry.ILogger)
io.sentry.protocol.SentryException: void setThreadId(java.lang.Long)
io.sentry.JsonObjectDeserializer$TokenArray: JsonObjectDeserializer$TokenArray()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
io.sentry.ISerializer: void serialize(java.lang.Object,java.io.Writer)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
io.sentry.CircularFifoQueue: boolean isEmpty()
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void close()
io.sentry.android.replay.WindowManagerSpy$mViewsField$2: java.lang.reflect.Field invoke()
io.sentry.protocol.DebugImage: void setArch(java.lang.String)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: void capture(io.sentry.IHub,io.sentry.Hint)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
io.sentry.ExternalOptions: void setProguardUuid(java.lang.String)
io.sentry.android.replay.video.SimpleFrameMuxer: long getVideoTime()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
io.sentry.android.replay.util.PersistableLinkedList: boolean remove(io.sentry.rrweb.RRWebEvent)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: java.lang.Object getLifecycle()
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.sentry.CircularFifoQueue: java.lang.Object remove()
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
io.sentry.protocol.OperatingSystem: java.lang.String getKernelVersion()
io.sentry.DirectoryProcessor: boolean lambda$processDirectory$0(java.io.File,java.lang.String)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.sentry.util.MapObjectReader: void beginArray()
io.sentry.metrics.GaugeMetric: GaugeMetric(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
io.sentry.CircularFifoQueue: java.util.Iterator iterator()
io.sentry.android.core.ViewHierarchyEventProcessor: ViewHierarchyEventProcessor(io.sentry.android.core.SentryAndroidOptions)
io.sentry.PropagationContext: io.sentry.TraceContext traceContext()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: void traverse(kotlin.jvm.functions.Function1)
io.sentry.protocol.SentryException$JsonKeys: SentryException$JsonKeys()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: PlayStoreDeferredComponentManager(android.content.Context,io.flutter.embedding.engine.FlutterJNI)
io.sentry.android.replay.RootViewsSpy: void close()
io.sentry.android.core.SpanFrameMetricsCollector$Frame: int compareTo(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
io.sentry.SentryLockReason: java.lang.Long getThreadId()
io.sentry.instrumentation.file.SentryFileWriter: SentryFileWriter(java.lang.String)
io.sentry.android.core.internal.debugmeta.AssetsDebugMetaLoader: java.util.List loadDebugMeta()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
io.sentry.CustomSamplingContext: java.util.Map getData()
io.sentry.NoOpTransaction: NoOpTransaction()
io.sentry.Span: io.sentry.metrics.LocalMetricsAggregator lambda$new$0()
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean)
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
io.flutter.plugin.platform.SingleViewWindowManager: SingleViewWindowManager(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup)
io.sentry.Breadcrumb$Deserializer: io.sentry.Breadcrumb deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.IHub$-CC: io.sentry.ITransaction $default$startTransaction(io.sentry.IHub,io.sentry.TransactionContext)
io.sentry.android.replay.ReplayIntegration: java.util.concurrent.atomic.AtomicBoolean isManualPause$sentry_android_replay_release()
io.flutter.embedding.android.FlutterFragment: boolean getBackCallbackState()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
io.sentry.ITransactionProfiler: void start()
io.sentry.SentryOptions$BeforeSendReplayCallback: io.sentry.SentryReplayEvent execute(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.android.replay.GeneratedVideo: GeneratedVideo(java.io.File,int,long)
io.sentry.SpanContext$Deserializer: SpanContext$Deserializer()
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: boolean deepLinkEnabled(android.os.Bundle)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: ThreadDumpParser(io.sentry.SentryOptions,boolean)
io.sentry.transport.NoOpTransport: void flush(long)
io.sentry.android.replay.capture.BaseCaptureStrategy: void setCurrentSegment(int)
io.sentry.JsonObjectReader: java.lang.String nextString()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
io.sentry.android.replay.video.SimpleVideoEncoder$hasExynosCodec$2: SimpleVideoEncoder$hasExynosCodec$2()
io.sentry.Hub: java.lang.Object clone()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
io.sentry.util.Objects: Objects()
io.sentry.rrweb.RRWebVideoEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.cache.CacheStrategy: boolean isSessionType(io.sentry.SentryEnvelopeItem)
io.sentry.metrics.MetricsHelper: long getTimeBucketKey(long)
io.sentry.NoOpSerializer: NoOpSerializer()
io.sentry.protocol.Message: java.util.List getParams()
io.sentry.android.replay.RootViewsSpy$listeners$1: int indexOf(java.lang.Object)
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: void traverse(androidx.compose.ui.node.LayoutNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,io.sentry.SentryOptions)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader createImageReader()
io.flutter.embedding.engine.loader.ResourceExtractor: void copy(java.io.InputStream,java.io.OutputStream)
io.sentry.android.replay.ScreenshotRecorder$prescaledMatrix$2: java.lang.Object invoke()
io.sentry.ISpan: void setThrowable(java.lang.Throwable)
io.sentry.CpuCollectionData: CpuCollectionData(long,double)
io.sentry.ProfilingTraceData: java.lang.String getDeviceManufacturer()
io.sentry.protocol.DebugImage$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.rrweb.RRWebOptionsEvent: java.lang.String getTag()
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$snakeToCamelCase$1: java.lang.CharSequence invoke(kotlin.text.MatchResult)
io.sentry.util.HintUtils: void lambda$runIfHasTypeLogIfNot$3(io.sentry.ILogger,java.lang.Object,java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: void lambda$new$0(android.media.ImageReader)
io.sentry.util.Random: double nextDouble()
io.sentry.PreviousSessionFinalizer: PreviousSessionFinalizer(io.sentry.SentryOptions,io.sentry.IHub)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$2100(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
io.sentry.NoOpSpan: io.sentry.NoOpSpan getInstance()
io.sentry.SpanId$Deserializer: io.sentry.SpanId deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.internal.threaddump.Lines: io.sentry.android.core.internal.threaddump.Lines readLines(java.io.BufferedReader)
io.sentry.flutter.SentryFlutter$updateOptions$18: SentryFlutter$updateOptions$18(io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.DeviceInfoUtil: io.sentry.protocol.OperatingSystem getOperatingSystem()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.service.ServiceControlSurface getServiceControlSurface()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean getBackCallbackState()
io.sentry.IScopeObserver: void setLevel(io.sentry.SentryLevel)
io.sentry.rrweb.RRWebInteractionMoveEvent: int access$502(io.sentry.rrweb.RRWebInteractionMoveEvent,int)
io.sentry.cache.tape.ObjectQueue: io.sentry.cache.tape.ObjectQueue createEmpty()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemOverlays(java.util.List)
io.sentry.util.UrlUtils: java.lang.String baseUrlOnly(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
io.sentry.android.core.internal.gestures.SentryGestureListener: void lambda$applyScope$3(io.sentry.IScope,io.sentry.ITransaction,io.sentry.ITransaction)
io.sentry.instrumentation.file.SentryFileInputStream: int read()
io.sentry.android.core.SentryLogcatAdapter: int v(java.lang.String,java.lang.String)
io.sentry.PropagationContext: void setBaggage(io.sentry.Baggage)
io.sentry.android.ndk.NdkScopeObserver: void setUser(io.sentry.protocol.User)
io.sentry.JavaMemoryCollector: void collect(io.sentry.PerformanceCollectionData)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: boolean access$500(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
io.sentry.Scope: void removeContexts(java.lang.String)
io.flutter.util.ViewUtils$ViewVisitor: boolean run(android.view.View)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
io.sentry.Scope: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.sentry.util.thread.IMainThreadChecker: boolean isMainThread(long)
io.sentry.android.core.SentryAndroid: void lambda$init$0(io.sentry.android.core.SentryAndroidOptions)
io.sentry.TransactionPerformanceCollector: java.util.List stop(io.sentry.ITransaction)
io.sentry.android.replay.capture.BufferCaptureStrategy$onConfigurationChanged$1: BufferCaptureStrategy$onConfigurationChanged$1(io.sentry.android.replay.capture.BufferCaptureStrategy)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
io.sentry.profilemeasurements.ProfileMeasurementValue: java.lang.String getRelativeStartNs()
io.sentry.android.replay.ReplayCache$Companion$fromDisk$$inlined$sortedBy$1: ReplayCache$Companion$fromDisk$$inlined$sortedBy$1()
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
io.sentry.Hub: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.exception.ExceptionMechanismException: java.lang.Thread getThread()
io.sentry.Session: java.lang.String getDistinctId()
io.sentry.Session: java.lang.String getAbnormalMechanism()
io.sentry.IMetricsAggregator: void increment(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.SentryTracer: io.sentry.Span getLatestActiveSpan()
io.sentry.protocol.SentryStackFrame: java.lang.Integer getLineno()
io.sentry.SentryOptions: SentryOptions()
io.sentry.vendor.Base64: Base64()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.view.Surface createSurface()
io.sentry.hints.Backfillable: boolean shouldEnrich()
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.ReplayRecording getRecording()
io.sentry.protocol.Request: java.lang.Long getBodySize()
io.sentry.config.FilesystemPropertiesLoader: java.util.Properties load()
io.sentry.android.replay.capture.BufferCaptureStrategy$captureReplay$2: BufferCaptureStrategy$captureReplay$2(io.sentry.android.replay.capture.BufferCaptureStrategy,kotlin.jvm.functions.Function1)
io.sentry.SentryTracer: java.lang.String getOperation()
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldAttachEngineToActivity()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.flutter.SentryFlutter$updateOptions$24$2: SentryFlutter$updateOptions$24$2(kotlin.jvm.internal.Ref$ObjectRef)
io.sentry.transport.StdoutTransport: void close()
io.sentry.Sentry: void removeExtra(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$Companion: double adjustReplaySizeToBlockSize(double)
io.flutter.embedding.android.FlutterFragment: void onCreate(android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
io.sentry.protocol.Response: java.lang.Long access$302(io.sentry.protocol.Response,java.lang.Long)
io.sentry.TransactionOptions: io.sentry.SentryDate getStartTimestamp()
io.flutter.plugin.platform.VirtualDisplayController$2$1: VirtualDisplayController$2$1(io.flutter.plugin.platform.VirtualDisplayController$2)
io.sentry.NoOpScope: io.sentry.protocol.User getUser()
io.sentry.android.core.ActivityFramesTracker: void addActivity(android.app.Activity)
io.sentry.protocol.Device$DeviceOrientation$Deserializer: Device$DeviceOrientation$Deserializer()
io.sentry.android.replay.ScreenshotRecorder: void capture$lambda$2(io.sentry.android.replay.ScreenshotRecorder,android.view.Window,android.view.View)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.sentry.SentryEnvelope: io.sentry.SentryEnvelopeHeader getHeader()
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.ReplayCache getCache()
io.sentry.android.core.ActivityLifecycleIntegration: void finishSpan(io.sentry.ISpan,io.sentry.SentryDate,io.sentry.SpanStatus)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getAppBundlePath()
io.sentry.DateUtils: java.util.Date getCurrentDateTime()
io.sentry.instrumentation.file.SentryFileWriter: SentryFileWriter(java.io.File)
io.sentry.protocol.User: boolean equals(java.lang.Object)
io.sentry.MonitorConfig: void setSchedule(io.sentry.MonitorSchedule)
io.sentry.cache.PersistingOptionsObserver: void setEnvironment(java.lang.String)
io.sentry.ProfilingTraceData$Deserializer: io.sentry.ProfilingTraceData deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.sentry.protocol.Mechanism: java.lang.String access$202(io.sentry.protocol.Mechanism,java.lang.String)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
io.sentry.android.core.AnrIntegration: java.lang.Throwable buildAnrThrowable(boolean,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.ApplicationNotResponding)
io.sentry.android.replay.capture.BufferCaptureStrategy: void onScreenshotRecorded(android.graphics.Bitmap,kotlin.jvm.functions.Function2)
io.sentry.OutboxSender: void processDirectory(java.io.File)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.android.core.ManifestMetadataReader: java.lang.Double readDouble(android.os.Bundle,io.sentry.ILogger,java.lang.String)
io.sentry.CircularFifoQueue: boolean offer(java.lang.Object)
io.sentry.protocol.Response: void setCookies(java.lang.String)
io.sentry.rrweb.RRWebInteractionMoveEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.EnvelopeSender: EnvelopeSender(io.sentry.IHub,io.sentry.ISerializer,io.sentry.ILogger,long,int)
io.sentry.MainEventProcessor: void setServerName(io.sentry.SentryBaseEvent)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
io.sentry.android.core.ActivityLifecycleIntegration: void finishSpan(io.sentry.ISpan,io.sentry.SpanStatus)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.protocol.Request: java.lang.String getQueryString()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.sentry.NoOpTransaction: io.sentry.SentryDate getFinishDate()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppLifecycleBreadcrumbs()
io.sentry.NoOpScope: java.lang.String getScreen()
io.sentry.IScope: void setUser(io.sentry.protocol.User)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
io.sentry.util.MapObjectReader: void close()
io.flutter.embedding.android.FlutterFragment: boolean shouldRestoreAndSaveState()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: io.sentry.android.core.performance.TimeSpan getOnStart()
io.sentry.protocol.SentryTransaction: io.sentry.TracesSamplingDecision getSamplingDecision()
io.sentry.SentryOptions: io.sentry.IConnectionStatusProvider getConnectionStatusProvider()
io.sentry.cache.EnvelopeCache: java.io.File getPreviousSessionFile(java.lang.String)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
io.sentry.android.core.SentryFrameMetrics: void addFrame(long,long,boolean,boolean)
io.sentry.protocol.SentryTransaction: java.util.Map access$502(io.sentry.protocol.SentryTransaction,java.util.Map)
io.sentry.Attachment: Attachment(io.sentry.JsonSerializable,java.lang.String,java.lang.String,java.lang.String,boolean)
io.sentry.NoOpTransaction: void setName(java.lang.String,io.sentry.protocol.TransactionNameSource)
io.sentry.Span: java.lang.Throwable getThrowable()
io.sentry.protocol.App: App(io.sentry.protocol.App)
io.flutter.plugin.common.MessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context)
io.sentry.android.replay.util.TextAttributes: TextAttributes(androidx.compose.ui.graphics.Color,boolean)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void acquireMutex(java.util.concurrent.Semaphore)
io.sentry.android.core.performance.AppStartMetrics: io.sentry.ITransactionProfiler getAppStartProfiler()
io.sentry.vendor.Base64: java.lang.String encodeToString(byte[],int,int,int)
io.sentry.util.TracingUtils$PropagationContextHolder: TracingUtils$PropagationContextHolder()
io.sentry.protocol.SentryStackFrame: java.lang.String access$202(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.transport.AsyncHttpTransport: void close(boolean)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource valueOf(java.lang.String)
io.sentry.exception.ExceptionMechanismException: boolean isSnapshot()
io.sentry.Baggage: void setValuesFromScope(io.sentry.IScope,io.sentry.SentryOptions)
io.sentry.clientreport.DiscardedEvent$Deserializer: io.sentry.clientreport.DiscardedEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent: RRWebIncrementalSnapshotEvent(io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.vendor.gson.stream.JsonReader: void nextNull()
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: DefaultReplayBreadcrumbConverter()
io.sentry.NoOpScope: java.util.Map getTags()
io.sentry.instrumentation.file.FileIOSpanManager: void finish(java.io.Closeable)
io.sentry.ISpan: boolean updateEndDate(io.sentry.SentryDate)
io.sentry.android.replay.ViewExtensionsKt: void sentryReplayMask(android.view.View)
io.sentry.android.core.internal.gestures.ViewUtils: io.sentry.internal.gestures.UiElement findTarget(io.sentry.android.core.SentryAndroidOptions,android.view.View,float,float,io.sentry.internal.gestures.UiElement$Type)
io.flutter.embedding.android.AndroidTouchProcessor: float getHorizontalScrollFactor(android.content.Context)
io.sentry.protocol.App: void setAppIdentifier(java.lang.String)
io.sentry.protocol.Mechanism: void setMeta(java.util.Map)
io.sentry.cache.PersistingOptionsObserver: java.lang.Object read(io.sentry.SentryOptions,java.lang.String,java.lang.Class)
io.sentry.SentryEvent: io.sentry.protocol.Message getMessage()
io.sentry.SentryLockReason: void setUnknown(java.util.Map)
io.sentry.metrics.MetricsApi: void increment(java.lang.String)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode fromView(android.view.View,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,int,io.sentry.SentryOptions)
io.sentry.android.core.SentryAndroidOptions: void setAttachScreenshot(boolean)
io.sentry.SpanContext: SpanContext(io.sentry.protocol.SentryId,io.sentry.SpanId,io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.TracesSamplingDecision,io.sentry.SpanStatus,java.lang.String)
io.sentry.NoOpSpan: void setMeasurement(java.lang.String,java.lang.Number,io.sentry.MeasurementUnit)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
io.sentry.Stack: io.sentry.Stack$StackItem peek()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
io.sentry.android.core.performance.TimeSpan: void setStoppedAt(long)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: long access$302(io.sentry.rrweb.RRWebInteractionMoveEvent$Position,long)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
io.sentry.ExternalOptions: io.sentry.SentryOptions$Proxy getProxy()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.android.core.IDebugImagesLoader: void clearDebugImages()
io.sentry.android.core.ActivityLifecycleIntegration: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getCachedEngineGroupId()
io.sentry.util.MapObjectReader: void beginObject()
io.sentry.rrweb.RRWebInteractionEvent: float access$302(io.sentry.rrweb.RRWebInteractionEvent,float)
io.sentry.protocol.Browser$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
io.sentry.android.replay.util.AndroidTextLayout: int getLineBottom(int)
io.sentry.protocol.Contexts: io.sentry.protocol.Response getResponse()
io.sentry.android.replay.ReplayIntegration: void pause()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
io.sentry.Attachment: byte[] getBytes()
io.flutter.util.ViewUtils: boolean childHasFocus(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: java.lang.String getConnectionType(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.android.replay.capture.BufferCaptureStrategy$onConfigurationChanged$1: void invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: void invoke()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
io.sentry.SentryOptions: java.util.List getTracingOrigins()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.sentry.Span: void finish(io.sentry.SpanStatus,io.sentry.SentryDate)
io.sentry.CheckInStatus: io.sentry.CheckInStatus valueOf(java.lang.String)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1: SurfaceTexturePlatformViewRenderTarget$1(io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget)
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromAttachment$16(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader createImageReader29()
io.sentry.protocol.SentrySpan: SentrySpan(io.sentry.Span,java.util.Map)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List access$1000(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
io.flutter.plugin.platform.VirtualDisplayController$2$1: void run()
io.sentry.android.core.internal.util.CpuInfoUtils: java.util.List readMaxFrequencies()
io.sentry.util.StringUtils: java.lang.String removePrefix(java.lang.String,java.lang.String)
io.sentry.protocol.Message: void setFormatted(java.lang.String)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.transport.TransportResult flush()
io.sentry.Sentry: void endSession()
io.sentry.cache.CacheUtils: java.lang.Object read(io.sentry.SentryOptions,java.lang.String,java.lang.String,java.lang.Class,io.sentry.JsonDeserializer)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
io.sentry.android.replay.ReplayIntegration: void resumeInternal()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$isObscured$2: ViewHierarchyNode$isObscured$2(kotlin.jvm.internal.Ref$BooleanRef,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void access$100(com.lib.flutter_blue_plus.FlutterBluePlusPlugin,com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
io.sentry.SentryClient: io.sentry.Session updateSessionData(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.IScope)
io.sentry.protocol.SentryStackFrame: void setUnknown(java.util.Map)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void synthesizeMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.sentry.SpanContext: java.lang.String getDescription()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk$lambda$0(io.sentry.flutter.SentryFlutterPlugin,java.util.Map,io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager: void removeOnFrameMetricsAvailableListener(android.view.Window,android.view.Window$OnFrameMetricsAvailableListener)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.sentry.SentryClient: void captureSession(io.sentry.Session,io.sentry.Hint)
io.sentry.Session: java.lang.String getRelease()
io.sentry.android.core.internal.threaddump.Lines: Lines(java.util.ArrayList)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint)
io.sentry.SentryClient: java.util.List getAttachments(io.sentry.Hint)
io.sentry.cache.PersistingScopeObserver: void lambda$setTags$4(java.util.Map)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.sentry.rrweb.RRWebVideoEvent: void setDataUnknown(java.util.Map)
io.sentry.android.core.CurrentActivityIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.protocol.User: java.util.Map access$702(io.sentry.protocol.User,java.util.Map)
io.flutter.plugin.editing.TextEditingDelta: int getNewComposingStart()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
io.sentry.protocol.SentryPackage: void setVersion(java.lang.String)
io.sentry.CheckIn: void setStatus(java.lang.String)
io.sentry.metrics.MetricsApi$IMetricsInterface: io.sentry.IMetricsAggregator getMetricsAggregator()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
io.sentry.MonitorConfig$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
io.sentry.ObjectWriter: void setLenient(boolean)
io.sentry.SentryReplayEvent: void setReplayId(io.sentry.protocol.SentryId)
io.sentry.IScope: io.sentry.PropagationContext withPropagationContext(io.sentry.Scope$IWithPropagationContext)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
io.flutter.embedding.engine.plugins.service.ServiceAware: void onAttachedToService(io.flutter.embedding.engine.plugins.service.ServicePluginBinding)
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty persistableAtomic(java.lang.Object,java.lang.String,kotlin.jvm.functions.Function3)
io.sentry.flutter.SentryFlutter$updateOptions$14: SentryFlutter$updateOptions$14(io.sentry.android.core.SentryAndroidOptions)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.sentry.SentryTracer: java.util.Timer getTimer()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter endObject()
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
io.sentry.MetricsAggregator: java.util.Map getOrAddTimeBucket(long)
io.sentry.cache.PersistingScopeObserver: void lambda$setExtras$5(java.util.Map)
io.sentry.android.core.performance.AppStartMetrics: void lambda$registerLifecycleCallbacks$0()
io.sentry.cache.EnvelopeCache: boolean waitPreviousSessionFlush()
io.sentry.rrweb.RRWebSpanEvent: double getEndTimestamp()
io.sentry.ObjectReader: java.lang.Double nextDoubleOrNull()
io.sentry.android.core.EnvelopeFileObserverIntegration: java.lang.String getPath(io.sentry.SentryOptions)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
io.sentry.protocol.SdkInfo: java.util.Map getUnknown()
io.sentry.metrics.NoopMetricsAggregator: void increment(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(io.flutter.plugin.common.BinaryMessenger,java.lang.String,int)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean dispatchTouchEvent(android.view.MotionEvent)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: long id()
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
io.sentry.TransactionContext: java.lang.String getName()
io.sentry.SentryEnvelopeHeader: io.sentry.TraceContext getTraceContext()
io.sentry.vendor.gson.stream.JsonReader: int peekNumber()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)
io.sentry.android.core.ActivityFramesTracker: void lambda$setMetrics$1(android.app.Activity)
io.sentry.android.replay.video.MuxerConfig: boolean equals(java.lang.Object)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader createImageReader33()
io.flutter.embedding.android.FlutterViewDelegate: android.view.WindowInsets getWindowInsets(android.content.Context)
io.sentry.ReplayRecording: void setPayload(java.util.List)
io.sentry.NoOpTransaction: java.lang.Boolean isSampled()
io.sentry.rrweb.RRWebBreadcrumbEvent: java.util.Map getDataUnknown()
io.sentry.rrweb.RRWebBreadcrumbEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebBreadcrumbEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(io.sentry.instrumentation.file.FileOutputStreamInitData,java.io.FileDescriptor)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.sentry.ShutdownHookIntegration: void lambda$register$1(io.sentry.SentryOptions)
io.flutter.plugin.editing.ScribePlugin: ScribePlugin(android.view.View,android.view.inputmethod.InputMethodManager,io.flutter.embedding.engine.systemchannels.ScribeChannel)
io.sentry.SentryReplayOptions: void setTrackOrientationChange(boolean)
io.sentry.Breadcrumb: void setType(java.lang.String)
io.sentry.cache.PersistingScopeObserver$1: java.lang.Object from(byte[])
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
io.sentry.android.core.performance.AppStartMetrics: void setClassLoadedUptimeMs(long)
io.sentry.vendor.Base64$Decoder: int maxOutputSize(int)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
xyz.luan.audioplayers.PlayerMode: xyz.luan.audioplayers.PlayerMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateBackGestureProgress(android.window.BackEvent)
io.flutter.embedding.android.FlutterFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.sentry.android.core.AndroidProfiler: io.sentry.android.core.AndroidProfiler$ProfileEndData endAndCollect(boolean,java.util.List)
io.sentry.config.EnvironmentVariablePropertiesProvider: java.lang.String propertyToEnvironmentVariableName(java.lang.String)
io.sentry.SentryReplayEvent$ReplayType$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.Hub: void clearBreadcrumbs()
io.sentry.android.core.performance.TimeSpan: void setStartUnixTimeMs(long)
io.sentry.clientreport.AtomicClientReportStorage: void addCount(io.sentry.clientreport.ClientReportKey,java.lang.Long)
io.sentry.android.replay.video.MuxerConfig: java.lang.String component6()
io.sentry.Span: io.sentry.SpanStatus getStatus()
kotlin.random.Random: Random()
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[])
io.sentry.android.core.performance.AppStartMetrics: java.util.List getContentProviderOnCreateTimeSpans()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
io.sentry.IScope: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.SentryLevel$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.sentry.android.replay.capture.SessionCaptureStrategy$onConfigurationChanged$1: void invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment)
io.sentry.ILogger: boolean isEnabled(io.sentry.SentryLevel)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder()
io.sentry.android.replay.util.FixedWindowCallback: void onPointerCaptureChanged(boolean)
io.sentry.JsonReflectionObjectSerializer: java.util.Map serializeObject(java.lang.Object,io.sentry.ILogger)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableNetworkEventBreadcrumbs()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
io.sentry.protocol.Geo$Deserializer: Geo$Deserializer()
io.sentry.protocol.OperatingSystem: void setBuild(java.lang.String)
io.sentry.android.core.BuildInfoProvider: java.lang.String getVersionRelease()
io.sentry.SentryOptions$BeforeEmitMetricCallback: boolean execute(java.lang.String,java.util.Map)
io.sentry.SentryTracer: io.sentry.ISpan startChild(io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.sentry.instrumentation.file.SentryFileInputStream$Factory: java.io.FileInputStream create(java.io.FileInputStream,java.io.File)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.cache.tape.QueueFile: long remainingBytes()
io.sentry.SentryAppStartProfilingOptions: SentryAppStartProfilingOptions()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
io.sentry.ISpan: void setDescription(java.lang.String)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.sentry.android.core.DefaultAndroidEventProcessor: void setCommons(io.sentry.SentryBaseEvent,boolean,boolean)
io.sentry.rrweb.RRWebInteractionEvent: int getId()
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPrePaused(android.app.Activity)
io.sentry.TraceContext$Deserializer: TraceContext$Deserializer()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
io.sentry.android.core.ANRWatchDog: boolean isProcessNotResponding()
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
io.sentry.android.core.AndroidTransactionProfiler: void close()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.sentry.android.replay.video.MuxerConfig: int component4()
io.sentry.transport.AsyncHttpTransport: void lambda$markHintWhenSendingFailed$3(boolean,io.sentry.hints.Retryable)
io.sentry.android.replay.video.SimpleFrameMuxer: void start(android.media.MediaFormat)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.sentry.ProfilingTraceData: java.lang.String access$2002(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.protocol.Browser$Deserializer: Browser$Deserializer()
io.flutter.embedding.engine.renderer.FlutterRenderer: void setAccessibilityFeatures(int)
io.flutter.view.AccessibilityBridge: void release()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: void invoke()
io.sentry.instrumentation.file.SentryFileInputStream: int read(byte[])
io.sentry.MonitorSchedule: void setUnknown(java.util.Map)
io.sentry.android.ndk.NdkScopeObserver: void lambda$setExtra$4(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.util.MapObjectReader: double nextDouble()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
io.sentry.transport.TransportResult: boolean isSuccess()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.sentry.android.replay.util.FixedWindowCallback: void onContentChanged()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached()
io.sentry.internal.gestures.UiElement$Type: UiElement$Type(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: void close()
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int,int)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
io.sentry.DataCategory: java.lang.String getCategory()
io.sentry.android.core.DeviceInfoUtil: void resetInstance()
io.sentry.android.replay.RootViewsSpy$Companion: RootViewsSpy$Companion()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
io.sentry.SentryBaseEvent: java.lang.String access$1000(io.sentry.SentryBaseEvent)
io.sentry.ObjectReader$-CC: java.util.Date dateOrNull(java.lang.String,io.sentry.ILogger)
io.sentry.ITransactionProfiler: io.sentry.ProfilingTraceData onTransactionFinish(io.sentry.ITransaction,java.util.List,io.sentry.SentryOptions)
io.sentry.android.core.BuildInfoProvider: java.lang.String getModel()
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: FlutterActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
io.sentry.IHub: io.sentry.TransactionContext continueTrace(java.lang.String,java.util.List)
io.sentry.SentryEnvelopeHeader: SentryEnvelopeHeader(io.sentry.protocol.SentryId,io.sentry.protocol.SdkVersion)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback access$200(io.flutter.view.VsyncWaiter)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.sentry.SentryAppStartProfilingOptions: boolean isProfilingEnabled()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$302(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,boolean)
io.sentry.protocol.Mechanism: void setDescription(java.lang.String)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: BinaryMessenger$TaskQueueOptions()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.sentry.protocol.OperatingSystem: java.lang.String getRawDescription()
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
io.sentry.Breadcrumb: io.sentry.Breadcrumb userInteraction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io.sentry.android.replay.capture.CaptureStrategy: io.sentry.protocol.SentryId getCurrentReplayId()
io.sentry.MonitorSchedule: MonitorSchedule(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
io.sentry.android.replay.capture.BufferCaptureStrategy: void onTouchEvent(android.view.MotionEvent)
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.SentryPerformanceProvider: SentryPerformanceProvider(io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.TraceContext: TraceContext(io.sentry.protocol.SentryId,java.lang.String)
io.sentry.OutboxSender: void logEnvelopeItemNull(io.sentry.SentryEnvelopeItem,int)
io.sentry.DefaultTransactionPerformanceCollector: java.util.Map access$200(io.sentry.DefaultTransactionPerformanceCollector)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void release()
io.sentry.protocol.Device: java.lang.String access$002(io.sentry.protocol.Device,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $values()
io.sentry.util.MapObjectReader: java.lang.String nextName()
io.sentry.Hint: boolean isCastablePrimitive(java.lang.Object,java.lang.Class)
io.sentry.SentryOptions: void setEnabled(boolean)
io.sentry.SentryOptions: void setBeforeEmitMetricCallback(io.sentry.SentryOptions$BeforeEmitMetricCallback)
io.sentry.DisabledQueue: java.util.Iterator iterator()
io.sentry.metrics.MetricsApi: void distribution(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,java.lang.Long)
io.flutter.embedding.android.FlutterView: void convertToImageView()
io.sentry.protocol.Gpu: java.lang.Integer access$102(io.sentry.protocol.Gpu,java.lang.Integer)
io.sentry.android.replay.video.SimpleVideoEncoder$mediaFormat$2: android.media.MediaFormat invoke()
io.sentry.IScope: io.sentry.Session getSession()
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.util.SampleRateUtils: boolean isValidSampleRate(java.lang.Double)
io.sentry.ScopeObserverAdapter: void setTrace(io.sentry.SpanContext,io.sentry.IScope)
io.flutter.util.TraceSection: TraceSection(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$15: SentryFlutter$updateOptions$15(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory$-CC: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget $default$processDir(io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory,io.sentry.DirectoryProcessor,java.lang.String,io.sentry.ILogger)
io.sentry.protocol.Device: void setOnline(java.lang.Boolean)
io.sentry.instrumentation.file.FileIOSpanManager: java.lang.Object performIO(io.sentry.instrumentation.file.FileIOSpanManager$FileIOCallable)
io.sentry.JsonObjectReader: boolean nextBoolean()
io.sentry.JsonReflectionObjectSerializer: java.util.List list(java.lang.Object[],io.sentry.ILogger)
io.sentry.android.replay.RootViewsSpy: java.lang.Object access$getViewListLock$p(io.sentry.android.replay.RootViewsSpy)
io.sentry.android.replay.capture.SessionCaptureStrategy$onConfigurationChanged$1: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: void onUnavailable()
io.sentry.android.core.NoOpDebugImagesLoader: void clearDebugImages()
io.sentry.android.replay.ReplayFrame: boolean equals(java.lang.Object)
io.sentry.flutter.SentryFlutter$updateOptions$26: SentryFlutter$updateOptions$26(io.sentry.android.core.SentryAndroidOptions)
io.sentry.TransactionOptions: boolean isAppStartTransaction()
io.sentry.util.thread.NoOpMainThreadChecker: NoOpMainThreadChecker()
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
io.sentry.SpanContext: SpanContext(io.sentry.protocol.SentryId,io.sentry.SpanId,java.lang.String,io.sentry.SpanId,io.sentry.TracesSamplingDecision)
io.sentry.android.replay.capture.BufferCaptureStrategy: void onScreenshotRecorded$lambda$2(io.sentry.android.replay.capture.BufferCaptureStrategy,kotlin.jvm.functions.Function2,long)
io.sentry.android.replay.capture.SessionCaptureStrategy: SessionCaptureStrategy(io.sentry.SentryOptions,io.sentry.IHub,io.sentry.transport.ICurrentDateProvider,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SentryLockReason$Deserializer: io.sentry.SentryLockReason deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.sentry.util.TracingUtils: boolean shouldAttachTracingHeaders(java.lang.String,io.sentry.SentryOptions)
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
io.sentry.android.core.AndroidProfiler: AndroidProfiler(java.lang.String,int,io.sentry.android.core.internal.util.SentryFrameMetricsCollector,io.sentry.ISentryExecutorService,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.IScopeObserver: void setUser(io.sentry.protocol.User)
io.sentry.SentryOptions: io.sentry.SentryDateProvider getDateProvider()
io.sentry.Hub: io.sentry.protocol.SentryId captureEventInternal(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.flutter.SentryFlutterPlugin: void clearBreadcrumbs(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.SentryRuntime: java.lang.String access$002(io.sentry.protocol.SentryRuntime,java.lang.String)
io.flutter.embedding.android.FlutterViewDelegate: java.util.List getCaptionBarInsets(android.content.Context)
io.flutter.embedding.android.FlutterFragmentActivity: android.os.Bundle getMetaData()
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$flush$3(io.sentry.hints.Retryable)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onUserLeaveHint()
io.sentry.SentryOptions: boolean isAttachServerName()
io.sentry.JsonObjectSerializer: void serializeCollection(io.sentry.ObjectWriter,io.sentry.ILogger,java.util.Collection)
io.sentry.android.ndk.NdkScopeObserver: void lambda$addBreadcrumb$1(io.sentry.Breadcrumb)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.android.replay.util.NodesKt: androidx.compose.ui.graphics.painter.Painter findPainter(androidx.compose.ui.node.LayoutNode)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbConnectionDetail getNewConnectionDetails(android.net.NetworkCapabilities,android.net.NetworkCapabilities,long,long)
io.sentry.android.core.NetworkBreadcrumbsIntegration: void lambda$close$0()
io.sentry.util.MapObjectWriter: void serializeTimeZone(io.sentry.ILogger,java.util.TimeZone)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void detachFromFlutterEngine()
io.flutter.plugin.platform.PlatformViewsController$1: void lambda$resize$0(io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
io.sentry.protocol.Response: java.lang.String access$002(io.sentry.protocol.Response,java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String,io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.sentry.android.replay.capture.SessionCaptureStrategy: void createCurrentSegment$lambda$4(io.sentry.android.replay.capture.SessionCaptureStrategy,long,java.util.Date,io.sentry.protocol.SentryId,int,int,int,kotlin.jvm.functions.Function1)
io.sentry.SentryTracer: void setStatus(io.sentry.SpanStatus)
io.sentry.android.core.ActivityLifecycleIntegration: void finishAppStartSpan()
io.flutter.embedding.engine.renderer.RenderSurface: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.sentry.android.core.SentryAndroidOptions: void setProfilingTracesIntervalMillis(int)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToBackground()
io.flutter.embedding.engine.FlutterShellArgs: void remove(java.lang.String)
io.sentry.vendor.Base64$Coder: int maxOutputSize(int)
io.sentry.protocol.SdkInfo: java.lang.String access$002(io.sentry.protocol.SdkInfo,java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
io.sentry.SentryOptions: boolean isPrintUncaughtStackTrace()
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
io.sentry.SentryReplayOptions: io.sentry.SentryReplayOptions$SentryReplayQuality getQuality()
io.sentry.SentryAppStartProfilingOptions: void setProfileSampleRate(java.lang.Double)
io.sentry.protocol.ViewHierarchyNode: java.lang.String access$102(io.sentry.protocol.ViewHierarchyNode,java.lang.String)
io.sentry.HostnameCache$HostnameCacheThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
io.sentry.SentryEnvelopeItemHeader: int getLength()
io.sentry.ISentryClient$-CC: void $default$captureSession(io.sentry.ISentryClient,io.sentry.Session)
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String getExceededTtfdDesc(io.sentry.ISpan)
io.sentry.ProfilingTraceData: java.lang.String access$702(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.JsonObjectDeserializer: java.lang.Object lambda$parse$1(io.sentry.JsonObjectReader)
io.sentry.ExternalOptions: void setTracesSampleRate(java.lang.Double)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
io.sentry.clientreport.ClientReportKey: int hashCode()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean getIsSerial()
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
io.sentry.Scope: Scope(io.sentry.SentryOptions)
io.sentry.ReplayController: boolean isRecording()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
io.sentry.vendor.gson.stream.JsonWriter: boolean isLenient()
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.sentry.SentryOptions: java.lang.String getOutboxPath()
io.sentry.android.replay.video.SimpleVideoEncoder$mediaFormat$2: SimpleVideoEncoder$mediaFormat$2(io.sentry.android.replay.video.SimpleVideoEncoder)
io.sentry.android.core.performance.TimeSpan: boolean hasStopped()
io.sentry.android.replay.ReplayCache$rotate$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
io.sentry.SynchronizedCollection: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
io.sentry.util.Platform: boolean isJavaNinePlus()
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
io.sentry.android.replay.util.ExecutorsKt: void submitSafely$lambda$1(java.lang.Runnable,io.sentry.SentryOptions,java.lang.String)
io.sentry.TracesSamplingDecision: java.lang.Boolean getProfileSampled()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(long)
io.sentry.protocol.SentryStackTrace$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: boolean imageQueueIsEmpty()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.sentry.transport.ReusableCountLatch$Sync: int access$000(io.sentry.transport.ReusableCountLatch$Sync)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean handlesCropAndRotation()
io.sentry.JsonObjectSerializer: JsonObjectSerializer(int)
io.sentry.SentryClient: boolean shouldApplyScopeData(io.sentry.CheckIn,io.sentry.Hint)
io.sentry.ISentryClient: void captureUserFeedback(io.sentry.UserFeedback)
io.sentry.transport.ReusableCountLatch$Sync: ReusableCountLatch$Sync(int)
io.sentry.protocol.OperatingSystem: void setRawDescription(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: void init()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
io.sentry.JsonObjectDeserializer: java.lang.Object deserialize(io.sentry.JsonObjectReader)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
io.sentry.android.replay.util.ComposeTextLayout: ComposeTextLayout(androidx.compose.ui.text.TextLayoutResult,boolean)
io.sentry.SynchronizedQueue: io.sentry.SynchronizedQueue synchronizedQueue(java.util.Queue)
io.sentry.EnvelopeReader: io.sentry.SentryEnvelopeHeader deserializeEnvelopeHeader(byte[],int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
io.sentry.protocol.Contexts: Contexts()
io.sentry.android.replay.ReplayIntegration: io.sentry.android.replay.capture.CaptureStrategy access$getCaptureStrategy$p(io.sentry.android.replay.ReplayIntegration)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: RRWebIncrementalSnapshotEvent$IncrementalSource(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setPlatformViewClient(int,boolean)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: float getY()
io.sentry.SentryBaseEvent: void setServerName(java.lang.String)
io.sentry.android.replay.capture.CaptureStrategy: void onConfigurationChanged(io.sentry.android.replay.ScreenshotRecorderConfig)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onWindowFocusChanged(boolean)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
io.sentry.android.core.performance.AppStartMetrics: void setAppStartProfiler(io.sentry.ITransactionProfiler)
io.sentry.util.StringUtils: java.lang.String toString(java.lang.Object)
io.sentry.protocol.SdkInfo: java.lang.Integer access$202(io.sentry.protocol.SdkInfo,java.lang.Integer)
io.sentry.android.replay.GeneratedVideo: io.sentry.android.replay.GeneratedVideo copy(java.io.File,int,long)
io.sentry.NoOpSentryClient: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.IScope,io.sentry.Hint)
io.sentry.android.replay.ReplayCache$Companion: io.sentry.android.replay.LastSegmentData fromDisk$sentry_android_replay_release$default(io.sentry.android.replay.ReplayCache$Companion,io.sentry.SentryOptions,io.sentry.protocol.SentryId,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivityStarted(android.app.Activity)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.sentry.PropagationContext: io.sentry.SpanId getSpanId()
io.sentry.android.replay.WindowManagerSpy$mViewsField$2: WindowManagerSpy$mViewsField$2()
io.sentry.SentryClient: boolean shouldApplyScopeData(io.sentry.SentryBaseEvent,io.sentry.Hint)
io.sentry.protocol.OperatingSystem: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.DuplicateEventDetectionEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: void run()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
io.sentry.SentryOptions: boolean isTracingEnabled()
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$4: void invoke(io.sentry.rrweb.RRWebEvent)
io.sentry.rrweb.RRWebVideoEvent: int access$602(io.sentry.rrweb.RRWebVideoEvent,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.sentry.Scope: java.util.Queue createBreadcrumbsList(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
io.sentry.clientreport.DiscardedEvent: java.lang.String getReason()
io.sentry.SentryInstantDate: SentryInstantDate(java.time.Instant)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
io.sentry.util.StringUtils: java.lang.String byteCountToString(long)
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(double)
io.sentry.android.replay.ReplayCache$Companion$fromDisk$$inlined$sortBy$1: int compare(java.lang.Object,java.lang.Object)
io.sentry.transport.TransportResult: TransportResult()
io.sentry.Session$State: Session$State(java.lang.String,int)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: void capture$default(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created,io.sentry.IHub,io.sentry.Hint,int,java.lang.Object)
io.sentry.SentryBaseEvent: void setTags(java.util.Map)
io.sentry.flutter.SentryFlutterPlugin$setupReplay$1: java.lang.Boolean invoke(io.sentry.Integration)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getTextFieldHint()
io.sentry.android.core.AndroidTransactionProfiler: boolean onFirstStart()
io.sentry.ProfilingTraceData: int getAndroidApiLevel()
io.sentry.android.replay.ScreenshotRecorderConfig: int getBitRate()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
io.sentry.ProfilingTraceData: ProfilingTraceData()
io.sentry.rrweb.RRWebEvent: io.sentry.rrweb.RRWebEventType access$002(io.sentry.rrweb.RRWebEvent,io.sentry.rrweb.RRWebEventType)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
io.sentry.protocol.ViewHierarchyNode: void setRenderingSystem(java.lang.String)
io.sentry.android.core.AppState: void resetInstance()
io.sentry.SentryOptions: void setShutdownTimeoutMillis(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType[] $values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Path)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.ImageReader)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onResume(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.Sentry: void setCurrentHub(io.sentry.IHub)
androidx.fragment.app.FragmentActivity: void onDestroy()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: SurfaceTextureSurfaceProducer(long,android.os.Handler,io.flutter.embedding.engine.FlutterJNI,io.flutter.view.TextureRegistry$SurfaceTextureEntry)
io.sentry.DateUtils: java.util.Date toUtilDate(io.sentry.SentryDate)
io.sentry.IHub: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.sentry.protocol.SentryStackFrame: void setInApp(java.lang.Boolean)
io.sentry.rrweb.RRWebEvent: RRWebEvent()
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1: BackGestureChannel$1(io.flutter.embedding.engine.systemchannels.BackGestureChannel)
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType[] $values()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.sentry.android.core.ActivityFramesTracker: boolean isFrameMetricsAggregatorAvailable()
io.sentry.android.core.DeviceInfoUtil: java.lang.Long getTotalMemory()
io.sentry.UserFeedback: UserFeedback(io.sentry.protocol.SentryId)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.IHub,io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.sentry.protocol.Device: java.lang.Long getMemorySize()
io.sentry.SentryAppStartProfilingOptions$Deserializer: SentryAppStartProfilingOptions$Deserializer()
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: AndroidConnectionStatusProvider(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan getAppStartTimeSpanWithFallback(io.sentry.android.core.SentryAndroidOptions)
io.sentry.TransactionContext: void setInstrumenter(io.sentry.Instrumenter)
io.sentry.android.replay.util.FixedWindowCallback: void onActionModeStarted(android.view.ActionMode)
io.sentry.rrweb.RRWebBreadcrumbEvent: void setPayloadUnknown(java.util.Map)
io.sentry.IScope: io.sentry.ISpan getSpan()
io.sentry.util.thread.MainThreadChecker: io.sentry.util.thread.MainThreadChecker getInstance()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
io.sentry.Stack$StackItem: io.sentry.SentryOptions getOptions()
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: void recreateSurfaceIfNeeded()
io.sentry.Scope: io.sentry.ITransaction getTransaction()
io.sentry.android.replay.WindowRecorder$Companion: WindowRecorder$Companion()
io.sentry.protocol.SentryThread: java.lang.String access$202(io.sentry.protocol.SentryThread,java.lang.String)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback getOnBackInvokedCallback()
io.sentry.flutter.R: R()
io.sentry.NoOpTransaction: io.sentry.SpanStatus getStatus()
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory$-CC: void lambda$processDir$0(io.sentry.ILogger,java.lang.String,io.sentry.DirectoryProcessor,java.io.File)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
io.sentry.ProfilingTraceData: java.lang.String getDeviceLocale()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.dart.DartExecutor: void setIsolateServiceIdListener(io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
io.sentry.Baggage: java.util.Map getUnknown()
io.flutter.view.AccessibilityBridge: boolean getAccessibleNavigation()
io.sentry.DisabledQueue: boolean add(java.lang.Object)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult copy$default(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,int,java.lang.Object)
io.sentry.metrics.Metric: java.lang.Iterable serialize()
io.sentry.vendor.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double getWidth()
io.flutter.plugins.sharedpreferences.StringListLookupResultType: io.flutter.plugins.sharedpreferences.StringListLookupResultType[] values()
io.sentry.protocol.SdkVersion: java.lang.String getName()
io.sentry.instrumentation.file.SentryFileWriter: SentryFileWriter(java.io.FileDescriptor)
io.sentry.protocol.Device$DeviceOrientation: Device$DeviceOrientation(java.lang.String,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.sentry.android.replay.WindowRecorder$capturer$2: java.lang.Object invoke()
io.sentry.android.core.UserInteractionIntegration: void onActivityStopped(android.app.Activity)
io.sentry.Sentry: void pushScope()
io.sentry.protocol.User: java.util.Map getOthers()
io.sentry.NoOpSpan: boolean isFinished()
io.sentry.SentryClient: void sortBreadcrumbsByDate(io.sentry.SentryBaseEvent,java.util.Collection)
io.sentry.IScope: io.sentry.SentryLevel getLevel()
io.sentry.rrweb.RRWebMetaEvent: int getHeight()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.sentry.cache.IEnvelopeCache: void store(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.DisabledQueue: boolean isEmpty()
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
io.sentry.ShutdownHookIntegration: void close()
io.sentry.profilemeasurements.ProfileMeasurementValue$JsonKeys: ProfileMeasurementValue$JsonKeys()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
io.sentry.protocol.Contexts: io.sentry.SpanContext getTrace()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.sentry.vendor.Base64: byte[] decode(byte[],int,int,int)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$Serializer: void serialize(io.sentry.rrweb.RRWebIncrementalSnapshotEvent,io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.flutter.view.TextureRegistry$OnTrimMemoryListener: void onTrimMemory(int)
io.sentry.rrweb.RRWebVideoEvent$Deserializer: void deserializePayload(io.sentry.rrweb.RRWebVideoEvent,io.sentry.ObjectReader,io.sentry.ILogger)
androidx.preference.EditTextPreference: EditTextPreference(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void lambda$onTrimMemory$2(long,int)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
io.sentry.rrweb.RRWebInteractionMoveEvent: void setPositions(java.util.List)
io.sentry.flutter.SentryFlutter$updateOptions$22: SentryFlutter$updateOptions$22(io.sentry.android.core.SentryAndroidOptions)
io.flutter.plugin.platform.PlatformViewsController: boolean initializePlatformViewIfNeeded(int)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: SpanFrameMetricsCollector$Frame(long,long,long,long,boolean,boolean,long)
io.sentry.android.replay.capture.CaptureStrategy: void start(io.sentry.android.replay.ScreenshotRecorderConfig,int,io.sentry.protocol.SentryId,io.sentry.SentryReplayEvent$ReplayType)
io.sentry.android.core.EmptySecureContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.flutter.util.TraceSection: void end()
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.HubAdapter: void endSession()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
io.sentry.flutter.SentryFlutterPlugin: void captureEnvelope(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback createOnBackInvokedCallback()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
io.sentry.flutter.SentryFlutterPlugin$setupReplay$3: io.sentry.android.replay.ScreenshotRecorderConfig invoke(boolean)
io.sentry.android.replay.ReplayFrame: ReplayFrame(java.io.File,long,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
io.sentry.protocol.Geo: void setCountryCode(java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.platform.PlatformViewRenderTarget$-CC: void $default$scheduleFrame(io.flutter.plugin.platform.PlatformViewRenderTarget)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.IScope,io.sentry.Hint)
io.sentry.android.core.SentryAndroidDateProvider: io.sentry.SentryDate now()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.sentry.protocol.Gpu: java.lang.String access$702(io.sentry.protocol.Gpu,java.lang.String)
io.sentry.protocol.App: void setAppName(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
io.sentry.android.core.ActivityLifecycleIntegration: void setFirstActivityCreated(boolean)
io.sentry.rrweb.RRWebInteractionEvent: void setY(float)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: boolean isAssignableFrom(java.lang.Class,java.util.Set)
io.sentry.metrics.Metric: void add(double)
io.sentry.CircularFifoQueue: int access$600(io.sentry.CircularFifoQueue,int)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: RRWebInteractionMoveEvent$Position()
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
io.sentry.rrweb.RRWebVideoEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter nullValue()
io.sentry.IPerformanceContinuousCollector: void onSpanFinished(io.sentry.ISpan)
io.sentry.android.replay.capture.SessionCaptureStrategy: void start(io.sentry.android.replay.ScreenshotRecorderConfig,int,io.sentry.protocol.SentryId,io.sentry.SentryReplayEvent$ReplayType)
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayUnmask$1: void invoke(androidx.compose.ui.semantics.SemanticsPropertyReceiver)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.sentry.protocol.Device: java.lang.Boolean isOnline()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
io.sentry.android.replay.LastSegmentData: java.lang.String getScreenAtStart()
io.sentry.Hub: io.sentry.SentryOptions getOptions()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: void setDisplayCutouts(java.util.List)
io.flutter.embedding.android.FlutterSurfaceView: void pause()
io.sentry.rrweb.RRWebInteractionEvent$InteractionType$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
io.flutter.embedding.android.FlutterFragment: void onStop()
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureEnvelope(io.sentry.IHub,io.sentry.SentryEnvelope)
io.sentry.MonitorConfig: void setCheckinMargin(java.lang.Long)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
io.sentry.ProfilingTraceData: java.lang.String access$602(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.core.AnrIntegrationFactory: AnrIntegrationFactory()
androidx.fragment.app.Fragment: java.lang.String toString()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.sentry.Hub: io.sentry.metrics.MetricsApi metrics()
io.sentry.rrweb.RRWebBreadcrumbEvent: double getBreadcrumbTimestamp()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.sentry.ITransactionProfiler: boolean isRunning()
io.sentry.MainEventProcessor: void setPlatform(io.sentry.SentryBaseEvent)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
io.sentry.android.core.AppLifecycleIntegration: AppLifecycleIntegration()
io.sentry.config.PropertiesProviderFactory: PropertiesProviderFactory()
io.sentry.ProfilingTraceData: void setRelease(java.lang.String)
io.sentry.protocol.DebugMeta: java.util.List access$102(io.sentry.protocol.DebugMeta,java.util.List)
io.sentry.cache.PersistingOptionsObserver: void setDist(java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void disconnectAllDevices(java.lang.String)
io.sentry.protocol.SentryStackFrame: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.SentryClient: boolean isHealthy()
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(java.lang.String)
io.sentry.SentryEnvelopeItemHeader$Deserializer: java.lang.Exception missingRequiredFieldException(java.lang.String,io.sentry.ILogger)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.sentry.SentryTracer: void setOperation(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.android.core.AnrV2EventProcessor: java.lang.Object readFromDisk(io.sentry.SentryOptions,java.lang.String,java.lang.Class)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2: BaseCaptureStrategy$persistableAtomicNullable$2(java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy,kotlin.jvm.functions.Function3,java.lang.String)
io.sentry.metrics.MetricsApi$IMetricsInterface: io.sentry.ISpan startSpanForMetric(java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void configureForHybridComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder initialRoute(java.lang.String)
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
io.sentry.SentryOptions: java.util.Map getTags()
io.sentry.SentryBaseEvent: void setExtra(java.lang.String,java.lang.Object)
androidx.fragment.app.Fragment: boolean getRetainInstance()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.backpressure.BackpressureMonitor: boolean isHealthy()
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean onSearchRequested()
io.sentry.HostnameCache: io.sentry.HostnameCache getInstance()
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.HubAdapter: void close(boolean)
io.sentry.rrweb.RRWebOptionsEvent$JsonKeys: RRWebOptionsEvent$JsonKeys()
io.sentry.android.replay.Recorder: void pause()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter value(long)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder destroyEngineWithFragment(boolean)
io.sentry.protocol.SentrySpan: io.sentry.SpanStatus getStatus()
io.sentry.protocol.SentryThread$Deserializer: io.sentry.protocol.SentryThread deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.video.MuxerConfig: MuxerConfig(java.io.File,int,int,int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SentryOptions: java.lang.String getSpotlightConnectionUrl()
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
io.sentry.protocol.SentryTransaction: boolean isSampled()
io.sentry.protocol.SdkInfo: java.lang.Integer access$102(io.sentry.protocol.SdkInfo,java.lang.Integer)
io.sentry.util.TracingUtils$TracingHeaders: io.sentry.SentryTraceHeader getSentryTraceHeader()
io.sentry.protocol.OperatingSystem$Deserializer: OperatingSystem$Deserializer()
io.sentry.rrweb.RRWebVideoEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebVideoEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
io.sentry.metrics.SetMetric: java.lang.Iterable serialize()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
io.sentry.flutter.SentryFlutter$updateOptions$22: void invoke(boolean)
io.sentry.JsonSerializer: void serialize(java.lang.Object,java.io.Writer)
io.sentry.rrweb.RRWebVideoEvent: int getSegmentId()
androidx.preference.MultiSelectListPreference: MultiSelectListPreference(android.content.Context,android.util.AttributeSet)
io.sentry.NoOpTransaction: java.lang.String getDescription()
io.flutter.embedding.android.FlutterView$2: void onChange(boolean)
io.sentry.protocol.SentrySpan: java.util.Map getMeasurements()
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge: void setBoldTextFlag()
io.sentry.protocol.Gpu: int hashCode()
io.sentry.rrweb.RRWebSpanEvent: java.util.Map getDataUnknown()
io.sentry.DateUtils: java.util.Date toUtilDateNotNull(io.sentry.SentryDate)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
androidx.fragment.app.Fragment: void restoreChildFragmentState()
io.sentry.rrweb.RRWebVideoEvent: void setTag(java.lang.String)
io.sentry.android.core.internal.gestures.ViewUtils: ViewUtils()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
io.sentry.protocol.SdkVersion: void addIntegration(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.sentry.android.replay.util.ExecutorsKt: java.util.concurrent.Future submitSafely(java.util.concurrent.ExecutorService,io.sentry.SentryOptions,java.lang.String,java.lang.Runnable)
io.sentry.JsonObjectWriter: void setIndent(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$27: void invoke(java.util.Map)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface getContentProviderControlSurface()
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.sentry.protocol.SentryStackTrace: java.lang.Boolean getSnapshot()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.sentry.android.core.SentryAndroidOptions: boolean isAnrEnabled()
io.sentry.android.core.SentryAndroid: void init(android.content.Context,io.sentry.Sentry$OptionsConfiguration)
io.sentry.Baggage: java.lang.String getSampled()
io.sentry.IHub$-CC: void $default$reportFullDisplayed(io.sentry.IHub)
io.sentry.clientreport.ClientReport$Deserializer: io.sentry.clientreport.ClientReport deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$5: void invoke(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.android.core.performance.TimeSpan: long getStartUptimeMs()
io.sentry.android.core.internal.util.ContentProviderSecurityChecker: ContentProviderSecurityChecker()
io.flutter.plugin.editing.SpellCheckPlugin: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])
androidx.preference.SwitchPreference: SwitchPreference(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterActivity: android.content.Intent createDefaultIntent(android.content.Context)
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmapCanvas$2: java.lang.Object invoke()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean attachToEngineAutomatically()
io.sentry.protocol.Request: java.lang.Long access$902(io.sentry.protocol.Request,java.lang.Long)
io.sentry.android.core.InternalSentrySdk: io.sentry.protocol.SentryId captureEnvelope(byte[],boolean)
io.sentry.SentryOptions: io.sentry.transport.ITransportGate getTransportGate()
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.TimeSpan getAppStartTimeSpan()
io.sentry.NoOpScope: java.util.Queue getBreadcrumbs()
io.sentry.cache.tape.FileObjectQueue: void add(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.replay.ReplayIntegration access$getReplay$p(io.sentry.flutter.SentryFlutterPlugin)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ProcessTextChannel)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.sentry.ExternalOptions: void setIgnoredCheckIns(java.util.List)
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunDefaultEngine(android.content.Context)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: android.util.DisplayMetrics access$000(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
io.sentry.util.TracingUtils$TracingHeaders: io.sentry.BaggageHeader getBaggageHeader()
io.sentry.SentryReplayEvent: void setVideoFile(java.io.File)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void commitBackGesture()
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
io.sentry.ProfilingTraceData: void setSampledProfile(java.lang.String)
io.sentry.rrweb.RRWebEventType$Deserializer: RRWebEventType$Deserializer()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel getLocalizationChannel()
io.sentry.android.replay.WindowManagerSpy$mViewsField$2: java.lang.Object invoke()
io.sentry.NoOpHub: io.sentry.TransactionContext continueTrace(java.lang.String,java.util.List)
io.sentry.protocol.User$JsonKeys: User$JsonKeys()
io.sentry.android.core.LifecycleWatcher$1: void run()
io.sentry.ProfilingTraceData: void setAndroidApiLevel(int)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
io.sentry.android.core.SentryLogcatAdapter: int i(java.lang.String,java.lang.String)
io.sentry.SentryWrapper: java.util.function.Supplier wrapSupplier(java.util.function.Supplier)
io.sentry.util.TracingUtils$PropagationContextHolder: io.sentry.PropagationContext access$102(io.sentry.util.TracingUtils$PropagationContextHolder,io.sentry.PropagationContext)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.sentry.NoOpSentryClient: void close()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
io.sentry.SpanStatus: io.sentry.SpanStatus[] values()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.sentry.IScope: java.util.Map getTags()
io.sentry.rrweb.RRWebOptionsEvent: RRWebOptionsEvent()
io.sentry.Sentry: boolean initConfigurations(io.sentry.SentryOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: FlutterRenderer$TextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterFragmentActivity: boolean isDebuggable()
io.sentry.protocol.Device: java.lang.Long access$1802(io.sentry.protocol.Device,java.lang.Long)
io.sentry.IHub: void close()
io.sentry.ITransaction: java.util.List getSpans()
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: boolean usesVirtualDisplay(int)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
io.sentry.ILogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Throwable)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
io.sentry.protocol.SentryId: java.util.UUID fromStringSentryId(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldAttachEngineToActivity()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int getWidth()
io.sentry.protocol.SentryPackage: void setName(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void lambda$new$0()
io.sentry.android.core.internal.modules.AssetsModulesLoader: AssetsModulesLoader(android.content.Context,io.sentry.ILogger)
io.sentry.protocol.Device: java.lang.String access$3302(io.sentry.protocol.Device,java.lang.String)
io.sentry.android.core.performance.TimeSpan: void reset()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder initialRoute(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] access$600()
io.sentry.transport.TransportResult: io.sentry.transport.TransportResult error(int)
io.sentry.SentryOptions: io.sentry.SentryOptions$Cron getCron()
io.sentry.android.core.Installation: java.lang.String writeInstallationFile(java.io.File)
io.sentry.Breadcrumb: Breadcrumb(java.lang.String)
io.sentry.TraceContext$TraceContextUser: java.util.Map getUnknown()
io.sentry.SentryOptions: int getConnectionTimeoutMillis()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
io.sentry.android.core.ContextUtils: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context,io.sentry.android.core.BuildInfoProvider)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.sentry.util.Random: long nextLong()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
io.sentry.ExternalOptions: void setSendClientReports(java.lang.Boolean)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
io.flutter.plugin.platform.PlatformViewsController$1: void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.android.FlutterFragment: android.app.Activity getActivity()
io.sentry.SentryLockReason: java.lang.String getAddress()
io.sentry.clientreport.ClientReport: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: int indexOf(android.view.View)
io.sentry.protocol.Device: void setMemorySize(java.lang.Long)
io.flutter.embedding.android.ExclusiveAppComponent: void detachFromFlutterEngine()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding(android.app.Service,androidx.lifecycle.Lifecycle)
io.sentry.util.MapObjectReader: int nextInt()
io.sentry.HubAdapter: HubAdapter()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.plugin.common.BinaryMessenger$BinaryReply: void reply(java.nio.ByteBuffer)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayRemoved(int)
io.flutter.view.TextureRegistry: void onTrimMemory(int)
io.sentry.Scope: void setContexts(java.lang.String,java.lang.Object)
io.flutter.embedding.android.FlutterView: void setDelegate(io.flutter.embedding.android.FlutterViewDelegate)
io.sentry.protocol.Contexts: void setDevice(io.sentry.protocol.Device)
io.sentry.android.core.performance.AppStartMetrics: void clear()
io.sentry.SentryReplayOptions: long getSessionSegmentDuration()
io.flutter.view.AccessibilityBridge: void access$700(io.flutter.view.AccessibilityBridge,boolean)
io.sentry.config.ClasspathPropertiesLoader: ClasspathPropertiesLoader(java.lang.String,java.lang.ClassLoader,io.sentry.ILogger)
io.sentry.SentryOptions: void setSampleRate(java.lang.Double)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean onMenuItemSelected(int,android.view.MenuItem)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.sentry.android.core.ManifestMetadataReader: void applyMetadata(android.content.Context,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.BuildInfoProvider)
io.sentry.metrics.MetricType: io.sentry.metrics.MetricType[] values()
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
io.sentry.transport.QueuedThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.sentry.TraceContext$JsonKeys: TraceContext$JsonKeys()
io.sentry.TraceContext: java.lang.String getUserId(io.sentry.SentryOptions,io.sentry.protocol.User)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiNoLongerDisplayed()
io.sentry.Scope: void clearTransaction()
io.sentry.protocol.ViewHierarchyNode: java.lang.String getVisibility()
io.sentry.android.core.AndroidDateUtils: io.sentry.SentryDate getCurrentSentryDateTime()
io.sentry.protocol.Request: java.lang.String getUrl()
io.sentry.android.replay.ReplayIntegration: ReplayIntegration(android.content.Context,io.sentry.transport.ICurrentDateProvider,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,io.sentry.android.replay.util.MainLooperHandler,kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
io.sentry.android.replay.util.TextLayout: int getLineBottom(int)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: void invoke()
io.sentry.SentryBaseEvent: void setPlatform(java.lang.String)
io.sentry.util.MapObjectReader: java.util.TimeZone nextTimeZoneOrNull(io.sentry.ILogger)
io.sentry.SentryStackTraceFactory: boolean lambda$getInAppCallStack$1(io.sentry.protocol.SentryStackFrame)
io.sentry.SentryOptions: void setDist(java.lang.String)
io.sentry.IScope: java.lang.String getScreen()
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.sentry.android.replay.ReplayIntegration: void finalizePreviousReplay()
io.sentry.ProfilingTraceData: java.lang.String getPlatform()
io.sentry.android.core.LifecycleWatcher: java.util.Timer getTimer()
io.sentry.flutter.SentryFlutterReplayRecorder: void resume$lambda$1(io.sentry.flutter.SentryFlutterReplayRecorder)
io.sentry.SentryLockReason: java.util.Map getUnknown()
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: float getElevation()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
io.sentry.protocol.Contexts: io.sentry.protocol.App getApp()
io.sentry.SentryTracer: io.sentry.SentryDate getFinishDate()
io.sentry.Scope: void addAttachment(io.sentry.Attachment)
io.sentry.SentryTracer: io.sentry.BaggageHeader toBaggageHeader(java.util.List)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
io.sentry.rrweb.RRWebOptionsEvent: void serializePayload(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.cache.tape.ObjectQueue$Converter: void toStream(java.lang.Object,java.io.OutputStream)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
io.sentry.android.replay.capture.BaseCaptureStrategy$ReplayPersistingExecutorServiceThreadFactory: BaseCaptureStrategy$ReplayPersistingExecutorServiceThreadFactory()
io.sentry.protocol.Device: java.lang.String getId()
io.sentry.rrweb.RRWebSpanEvent: RRWebSpanEvent()
io.sentry.DisabledQueue$1: boolean hasNext()
io.sentry.UserFeedback: UserFeedback(io.sentry.protocol.SentryId,java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.plugin.common.BasicMessageChannel$Reply enqueueConfiguration(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
io.sentry.SentryBaseEvent: io.sentry.protocol.User getUser()
io.sentry.SpotlightIntegration: java.net.HttpURLConnection createConnection(java.lang.String)
io.sentry.hints.EventDropReason: EventDropReason(java.lang.String,int)
io.sentry.android.replay.video.SimpleVideoEncoder: long getDuration()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomic$1: BaseCaptureStrategy$persistableAtomic$1(io.sentry.android.replay.capture.BaseCaptureStrategy,java.lang.String)
io.sentry.android.ndk.DebugImagesLoader: java.util.Set loadDebugImagesForAddresses(java.util.Set)
io.sentry.android.core.AnrV2EventProcessor: java.lang.String getDeviceId()
io.sentry.cache.tape.EmptyObjectQueue: int size()
io.sentry.ProfilingTraceData: java.lang.String access$1502(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.protocol.SentryThread: java.util.Map getUnknown()
io.sentry.SentryReplayEvent: java.util.List getErrorIds()
io.sentry.profilemeasurements.ProfileMeasurementValue: double access$002(io.sentry.profilemeasurements.ProfileMeasurementValue,double)
io.sentry.NoOpHub: void setTag(java.lang.String,java.lang.String)
io.sentry.protocol.Device: java.lang.String access$502(io.sentry.protocol.Device,java.lang.String)
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivityPaused(android.app.Activity)
io.sentry.cache.PersistingScopeObserver: void lambda$setContexts$11(io.sentry.protocol.Contexts)
io.sentry.SentryCrashLastRunState: java.lang.Boolean isCrashedLastRun(java.lang.String,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$onMethodCall$2(io.flutter.plugin.common.MethodChannel$Result,boolean,java.lang.String)
io.sentry.Span: void setStatus(io.sentry.SpanStatus)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.sentry.SentryClient: boolean isEnabled()
io.sentry.util.MapObjectReader: java.lang.Float nextFloatOrNull()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
io.sentry.SentryOptions: void setTracesSampler(io.sentry.SentryOptions$TracesSamplerCallback)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.sentry.rrweb.RRWebEventType$Deserializer: io.sentry.rrweb.RRWebEventType deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.sentry.android.ndk.NativeModuleListLoader: void nativeClearModuleList()
io.sentry.android.core.AndroidOptionsInitializer: void installDefaultIntegrations(android.content.Context,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.LoadClass,io.sentry.android.core.ActivityFramesTracker,boolean,boolean,boolean)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: void onLosing(android.net.Network,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider$1: AndroidConnectionStatusProvider$1(io.sentry.android.core.internal.util.AndroidConnectionStatusProvider,io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
io.sentry.protocol.Request: void setUnknown(java.util.Map)
io.sentry.android.core.AndroidTransactionProfiler: boolean isRunning()
io.sentry.android.core.CurrentActivityIntegration: void onActivityResumed(android.app.Activity)
io.sentry.transport.RateLimiter: void access$000(io.sentry.transport.RateLimiter)
io.sentry.android.core.SentryPerformanceProvider: void shutdown()
io.sentry.profilemeasurements.ProfileMeasurement: void setValues(java.util.Collection)
io.sentry.util.SampleRateUtils: boolean isValidTracesSampleRate(java.lang.Double)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: boolean equals(java.lang.Object)
io.sentry.SentryIntegrationPackageStorage: void clearStorage()
io.sentry.SentryEnvelopeItemHeader: io.sentry.SentryItemType getType()
io.sentry.android.replay.util.ViewsKt: void traverse(android.view.View,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.SentryOptions)
io.sentry.android.replay.WindowRecorder$capturer$2: java.util.concurrent.ScheduledExecutorService invoke()
io.sentry.SentryOptions: void setMaxSpans(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.sentry.protocol.App: void setDeviceAppHash(java.lang.String)
io.sentry.IHub: void endSession()
io.sentry.CircularFifoQueue: java.lang.Object peek()
io.sentry.Hub: io.sentry.ITransaction createTransaction(io.sentry.TransactionContext,io.sentry.TransactionOptions)
io.sentry.EventProcessor$-CC: io.sentry.SentryEvent $default$process(io.sentry.EventProcessor,io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.android.core.ActivityFramesTracker$FrameCounts: int access$200(io.sentry.android.core.ActivityFramesTracker$FrameCounts)
io.sentry.ITransaction: void finish(io.sentry.SpanStatus,io.sentry.SentryDate,boolean,io.sentry.Hint)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.JsonObjectDeserializer: void popCurrentToken()
io.sentry.rrweb.RRWebSpanEvent: double access$402(io.sentry.rrweb.RRWebSpanEvent,double)
io.sentry.IScope: void setContexts(java.lang.String,java.lang.Character)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
io.sentry.NoOpSpan: io.sentry.ISpan startChild(java.lang.String)
io.sentry.protocol.SentryException: void setModule(java.lang.String)
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResource(java.lang.String)
io.sentry.TracesSamplingDecision: java.lang.Double getProfileSampleRate()
io.sentry.metrics.Metric: java.util.Map getTags()
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
io.sentry.Sentry$OptionsConfiguration: void configure(io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartEntrypointArgs(java.util.List)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
io.sentry.cache.PersistingScopeObserver: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String getTtfdDesc(java.lang.String)
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(io.sentry.ILogger,java.lang.Object)
io.sentry.protocol.Device: java.lang.Float access$702(io.sentry.protocol.Device,java.lang.Float)
io.sentry.metrics.MetricsApi$IMetricsInterface: java.util.Map getDefaultTagsForMetrics()
io.sentry.MonitorSchedule$JsonKeys: MonitorSchedule$JsonKeys()
io.sentry.DateUtils: long secondsToNanos(long)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter: kotlin.Lazy access$getSnakecasePattern$delegate$cp()
io.sentry.UserFeedback: java.util.Map getUnknown()
io.sentry.android.core.SentryPerformanceProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
io.sentry.util.MapObjectReader: long nextLong()
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
io.sentry.TransactionOptions: void setBindToScope(boolean)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String bytesToHex(byte[])
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void trackCurrentWindow()
io.sentry.protocol.ViewHierarchyNode$Deserializer: io.sentry.protocol.ViewHierarchyNode deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.sentry.android.replay.ReplayIntegration: void cleanupReplays(java.lang.String)
io.sentry.protocol.Gpu: java.lang.Boolean access$602(io.sentry.protocol.Gpu,java.lang.Boolean)
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean)
io.sentry.Span: java.util.Map getTags()
io.sentry.metrics.MetricsHelper: MetricsHelper()
io.sentry.android.core.InternalSentrySdk: InternalSentrySdk()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.Class,java.lang.String)
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: SentryGestureListener$ScrollState()
io.sentry.Hub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.android.replay.ScreenshotRecorder: void unbind(android.view.View)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
io.sentry.DeduplicateMultithreadedEventProcessor: DeduplicateMultithreadedEventProcessor(io.sentry.SentryOptions)
io.sentry.transport.HttpConnection: java.net.Proxy resolveProxy(io.sentry.SentryOptions$Proxy)
io.sentry.protocol.Request: boolean equals(java.lang.Object)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void lambda$new$2(io.sentry.android.core.BuildInfoProvider,android.view.Window,android.view.FrameMetrics,int)
io.sentry.ProfilingTraceData: void setCpuArchitecture(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: void setLogTag(java.lang.String)
io.sentry.Sentry: void setFingerprint(java.util.List)
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
io.sentry.Baggage: io.sentry.Baggage fromHeader(java.util.List,io.sentry.ILogger)
io.sentry.android.core.SentryAndroidOptions: void setDebugImagesLoader(io.sentry.android.core.IDebugImagesLoader)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
io.sentry.protocol.Gpu$JsonKeys: Gpu$JsonKeys()
io.sentry.android.replay.capture.BaseCaptureStrategy$Companion: BaseCaptureStrategy$Companion()
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(io.sentry.instrumentation.file.FileOutputStreamInitData,io.sentry.instrumentation.file.SentryFileOutputStream$1)
io.sentry.android.replay.util.ViewsKt: int toOpaque(int)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter open(int,char)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
io.sentry.internal.gestures.UiElement: java.lang.String getIdentifier()
io.sentry.android.core.internal.gestures.ViewUtils: boolean touchWithinBounds(android.view.View,float,float)
io.sentry.android.ndk.INativeScope: void removeUser()
io.sentry.NoOpScope: void addEventProcessor(io.sentry.EventProcessor)
io.sentry.hints.BlockingFlushHint: BlockingFlushHint(long,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$15: void invoke(boolean)
io.sentry.CircularFifoQueue: int maxSize()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: void resize(int,int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: boolean isReleased()
io.sentry.android.replay.RootViewsSpy$listeners$1: boolean add(java.lang.Object)
io.sentry.ExternalOptions: ExternalOptions()
io.sentry.android.replay.ReplayIntegration: java.util.concurrent.atomic.AtomicBoolean isEnabled$sentry_android_replay_release()
io.sentry.Scope$SessionPair: io.sentry.Session getPrevious()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryOptions: void setEnableUncaughtExceptionHandler(boolean)
io.sentry.OutboxSender: void processEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
io.sentry.Hub: Hub(io.sentry.SentryOptions)
io.sentry.transport.AsyncHttpTransport: void markHintWhenSendingFailed(io.sentry.Hint,boolean)
io.sentry.util.MapObjectReader: void skipValue()
io.sentry.JsonObjectDeserializer$TokenName: java.lang.Object getValue()
io.sentry.transport.HttpConnection: HttpConnection(io.sentry.SentryOptions,io.sentry.RequestDetails,io.sentry.transport.AuthenticatorWrapper,io.sentry.transport.RateLimiter)
io.flutter.util.ViewUtils$DisplayUpdater: void updateDisplayMetrics(float,float,float)
io.sentry.SentryReplayOptions: java.util.Set getMaskViewClasses()
io.flutter.plugin.platform.PlatformViewsController: void attachToView(io.flutter.embedding.android.FlutterView)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.sentry.rrweb.RRWebVideoEvent: void setFrameCount(int)
io.sentry.NoOpScope: NoOpScope()
io.sentry.android.replay.RootViewsSpy$listeners$1: int lastIndexOf(java.lang.Object)
io.sentry.android.core.SentryAndroid: void init(android.content.Context,io.sentry.ILogger)
io.sentry.protocol.Contexts$Deserializer: io.sentry.protocol.Contexts deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onActionModeStarted(android.view.ActionMode)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String,io.flutter.embedding.android.FlutterFragment$1)
io.sentry.NoOpSentryExecutorService: void close(long)
io.sentry.android.replay.WindowSpy: java.lang.reflect.Field getWindowField()
io.flutter.plugin.text.ProcessTextPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.sentry.ScopeObserverAdapter: void setLevel(io.sentry.SentryLevel)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)
io.sentry.ExternalOptions: void setRelease(java.lang.String)
io.sentry.SynchronizedQueue: java.lang.Object element()
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(long)
io.sentry.IHub: void removeTag(java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothGattService getServiceFromArray(java.lang.String,java.util.List)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$900(int)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray access$100(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.sentry.android.ndk.SentryNdk: void initSentryNative(io.sentry.android.core.SentryAndroidOptions)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.sentry.NoOpSerializer: java.lang.Object deserializeCollection(java.io.Reader,java.lang.Class,io.sentry.JsonDeserializer)
io.sentry.Baggage: void setSampled(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: void runInBackground(kotlin.jvm.functions.Function0)
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate: void setFrameworkHandlesBack(boolean)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: java.lang.String getConnectionType(android.net.NetworkCapabilities,io.sentry.android.core.BuildInfoProvider)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: android.content.Intent build(android.content.Context)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$flush$4(io.sentry.SentryEnvelope,java.lang.Object,java.lang.Class)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn,io.sentry.IScope,io.sentry.Hint)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
io.sentry.android.core.DeviceInfoUtil: java.lang.Float getBatteryTemperature(android.content.Intent)
androidx.fragment.app.FragmentActivity: void onStop()
io.sentry.config.PropertiesProvider$-CC: java.lang.String $default$getProperty(io.sentry.config.PropertiesProvider,java.lang.String,java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
io.sentry.android.core.AndroidLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Throwable)
io.sentry.android.replay.ScreenshotRecorderConfig: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setUpFlutterEngine()
io.sentry.android.core.SentryLogcatAdapter: int e(java.lang.String,java.lang.String,java.lang.Throwable)
io.sentry.MonitorConfig: java.lang.Long getRecoveryThreshold()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: LifecycleChannel$AppLifecycleState(java.lang.String,int)
io.sentry.NoOpTransactionPerformanceCollector: void onSpanFinished(io.sentry.ISpan)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.core.ContextUtils: java.lang.Boolean lambda$static$1()
io.sentry.JsonObjectDeserializer$TokenMap: java.lang.Object getValue()
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$flush$6(java.lang.Object,java.lang.Class)
io.flutter.embedding.engine.plugins.PluginRegistry: boolean has(java.lang.Class)
io.sentry.IHub: io.sentry.protocol.SentryId captureException(java.lang.Throwable)
io.sentry.protocol.OperatingSystem: java.lang.String access$002(io.sentry.protocol.OperatingSystem,java.lang.String)
io.sentry.util.Random: float nextFloat()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
io.sentry.SentryLevel: io.sentry.SentryLevel valueOf(java.lang.String)
io.sentry.android.core.Installation: Installation()
io.flutter.embedding.engine.FlutterEngineGroup$1: void onEngineWillDestroy()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.Span: io.sentry.SpanOptions getOptions()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.sentry.vendor.gson.stream.JsonReader: void skipUnquotedValue()
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
io.sentry.protocol.Mechanism: java.lang.Boolean getSynthetic()
io.sentry.flutter.SentryFlutter$updateOptions$24$1: void invoke(java.util.List)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter name(java.lang.String)
io.sentry.PerformanceCollectionData: PerformanceCollectionData()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
io.sentry.cache.tape.QueueFile: java.io.RandomAccessFile initializeFromFile(java.io.File)
io.sentry.android.core.NdkHandlerStrategy: io.sentry.android.core.NdkHandlerStrategy[] $values()
io.sentry.android.replay.util.FixedWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiDisplayed()
io.sentry.Hint: java.lang.Object get(java.lang.String)
io.sentry.Scope: java.util.Queue getBreadcrumbs()
io.sentry.hints.DiskFlushNotification: boolean isFlushable(io.sentry.protocol.SentryId)
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivityStopped(android.app.Activity)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: boolean isReleased()
io.sentry.protocol.DebugImage: java.lang.String getImageAddr()
io.sentry.SentryCrashLastRunState: io.sentry.SentryCrashLastRunState getInstance()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.embedding.android.FlutterFragmentActivity: void switchLaunchThemeForNormalTheme()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashDurationThresholdMillis()
io.sentry.CustomSamplingContext: java.lang.Object get(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.sentry.cache.PersistingScopeObserver: void setExtras(java.util.Map)
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.preference.UnPressableLinearLayout: UnPressableLinearLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void access$300(io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
io.sentry.NoOpReplayController: void setBreadcrumbConverter(io.sentry.ReplayBreadcrumbConverter)
io.sentry.android.core.InternalSentrySdk: void addTimeSpanToSerializedSpans(io.sentry.android.core.performance.TimeSpan,java.util.List)
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: void markEnqueued()
io.sentry.SentryOptions: void setServerName(java.lang.String)
io.sentry.profilemeasurements.ProfileMeasurementValue$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.util.MainLooperHandler: android.os.Handler getHandler()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
io.sentry.flutter.SentryFlutter$updateOptions$21: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.sentry.ExternalOptions: java.lang.Boolean isSendModules()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType access$202(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState,io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType)
io.sentry.protocol.Gpu: java.lang.String getVersion()
io.sentry.rrweb.RRWebMetaEvent: int hashCode()
io.sentry.Baggage: boolean isMutable()
io.sentry.android.ndk.NdkScopeObserver: void lambda$removeExtra$5(java.lang.String)
io.sentry.android.core.performance.AppStartMetrics: io.sentry.android.core.performance.AppStartMetrics$AppStartType getAppStartType()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: void runInBackground(kotlin.jvm.functions.Function0)
io.sentry.metrics.NoopMetricsAggregator: java.util.Map getDefaultTagsForMetrics()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$GenericViewHierarchyNode: ViewHierarchyNode$GenericViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect)
io.sentry.android.replay.util.ComposeTextLayout: float getPrimaryHorizontal(int,int)
io.sentry.android.core.AnrV2Integration: AnrV2Integration(android.content.Context,io.sentry.transport.ICurrentDateProvider)
io.sentry.metrics.Metric: io.sentry.metrics.MetricType getType()
io.sentry.MonitorConfig: void setTimezone(java.lang.String)
io.sentry.protocol.Gpu: Gpu()
io.sentry.util.thread.IMainThreadChecker: boolean isMainThread(java.lang.Thread)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: java.lang.String getTouchPathMessage(java.lang.Object)
io.sentry.ProfilingTransactionData: java.lang.Long access$602(io.sentry.ProfilingTransactionData,java.lang.Long)
io.sentry.SentryOptions$Cron: java.lang.Long getDefaultCheckinMargin()
io.sentry.instrumentation.file.SentryFileInputStream$Factory: java.io.FileInputStream create(java.io.FileInputStream,java.io.FileDescriptor)
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.ReplayCache getCache()
io.sentry.Sentry: void bindClient(io.sentry.ISentryClient)
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivityPaused(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
io.sentry.ObjectReader: void beginArray()
io.sentry.Hub: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: int lastIndexOf(android.view.View)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
io.sentry.android.core.internal.util.RootChecker: boolean checkSUExist()
io.sentry.protocol.Device: void setBatteryLevel(java.lang.Float)
io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType[] values()
io.sentry.android.core.AndroidTransactionProfiler: void bindTransaction(io.sentry.ITransaction)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String bluetoothStatusString(int)
io.sentry.protocol.Contexts: void setApp(io.sentry.protocol.App)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
io.sentry.android.ndk.INativeScope: void setExtra(java.lang.String,java.lang.String)
io.sentry.Breadcrumb$JsonKeys: Breadcrumb$JsonKeys()
io.sentry.SentryOptions$Proxy: SentryOptions$Proxy(java.lang.String,java.lang.String,java.net.Proxy$Type)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: SentryFrameMetricsCollector(android.content.Context,io.sentry.SentryOptions,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager)
io.sentry.vendor.gson.stream.JsonReader: int nextInt()
io.sentry.JsonObjectReader: java.util.TimeZone nextTimeZoneOrNull(io.sentry.ILogger)
io.sentry.android.core.LifecycleWatcher: void startSession()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.sentry.android.core.internal.gestures.SentryGestureListener: java.lang.String getGestureType(io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType)
io.sentry.protocol.Response: java.util.Map getUnknown()
io.sentry.SynchronizedCollection: boolean retainAll(java.util.Collection)
io.sentry.NoOpReplayController: void captureReplay(java.lang.Boolean)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void executeInBackground(java.lang.Runnable)
io.sentry.ExternalOptions: java.lang.Boolean isEnablePrettySerializationOutput()
io.sentry.android.core.SentryAndroidOptions: void setAttachAnrThreadDump(boolean)
io.flutter.plugin.common.BasicMessageChannel: void setWarnsOnChannelOverflow(boolean)
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet)
io.sentry.protocol.Device: void setFreeMemory(java.lang.Long)
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
io.sentry.rrweb.RRWebSpanEvent: java.lang.String access$202(io.sentry.rrweb.RRWebSpanEvent,java.lang.String)
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: boolean shouldMask(androidx.compose.ui.node.LayoutNode,boolean,io.sentry.SentryOptions)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.sentry.android.replay.ReplayIntegration: io.sentry.util.Random getRandom()
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.ReplayRecording component2()
io.sentry.protocol.Request$JsonKeys: Request$JsonKeys()
io.sentry.rrweb.RRWebInteractionEvent: io.sentry.rrweb.RRWebInteractionEvent$InteractionType access$002(io.sentry.rrweb.RRWebInteractionEvent,io.sentry.rrweb.RRWebInteractionEvent$InteractionType)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
io.sentry.SentryOptions: boolean isEnableBackpressureHandling()
io.sentry.flutter.SentryFlutterPlugin: void addBreadcrumb(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.DebugImage: java.lang.String getCodeFile()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallSuccess(java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$startTracing$2(io.sentry.ITransaction,io.sentry.IScope)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
io.sentry.SentryOptions: void addInAppExclude(java.lang.String)
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
io.sentry.IHub: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $values()
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String,int)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
io.sentry.JsonObjectDeserializer: java.lang.Object lambda$parse$3()
io.sentry.IScope: io.sentry.SentryOptions getOptions()
io.sentry.ISpan: io.sentry.TraceContext traceContext()
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.util.Set)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$000(int)
io.sentry.android.core.LifecycleWatcher: LifecycleWatcher(io.sentry.IHub,long,boolean,boolean,io.sentry.transport.ICurrentDateProvider)
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: int indexOfNonDigit(java.lang.String,int)
io.sentry.protocol.SentryThread: java.lang.Integer getPriority()
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
io.sentry.CircularFifoQueue: int size()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void setSize(int,int)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromUserFeedback$6(io.sentry.ISerializer,io.sentry.UserFeedback)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: android.view.View onCreatePanelView(int)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void cancelBackGesture()
io.sentry.android.core.cache.AndroidEnvelopeCache: java.io.File getDirectory()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
io.sentry.IScope: java.util.Queue getBreadcrumbs()
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmap$2: java.lang.Object invoke()
io.sentry.util.SentryRandom$SentryRandomThreadLocal: io.sentry.util.Random initialValue()
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.sentry.android.core.AnrIntegration$AnrHint: boolean ignoreCurrentThread()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
io.sentry.IHub: void flush(long)
io.sentry.android.core.CurrentActivityIntegration: void onActivityPaused(android.app.Activity)
io.sentry.IHub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.exception.InvalidSentryTraceHeaderException: InvalidSentryTraceHeaderException(java.lang.String)
io.sentry.rrweb.RRWebVideoEvent: void setHeight(int)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
io.sentry.SentryRuntimeEventProcessor: SentryRuntimeEventProcessor(java.lang.String,java.lang.String)
io.sentry.instrumentation.file.SentryFileOutputStream: io.sentry.instrumentation.file.FileOutputStreamInitData access$200(java.io.FileDescriptor,java.io.FileOutputStream,io.sentry.IHub)
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
io.sentry.android.replay.RootViewsSpy$listeners$1: int getSize()
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment createSegmentInternal(long,java.util.Date,io.sentry.protocol.SentryId,int,int,int,io.sentry.SentryReplayEvent$ReplayType,io.sentry.android.replay.ReplayCache,int,int,java.lang.String,java.util.List,java.util.Deque)
io.sentry.protocol.Device: java.lang.Boolean isSimulator()
io.sentry.protocol.Contexts: void withResponse(io.sentry.util.HintUtils$SentryConsumer)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
io.sentry.Hub: void lambda$close$0(io.sentry.IScope)
io.sentry.protocol.MetricSummary: java.util.Map getTags()
io.sentry.protocol.SentryStackFrame: java.lang.String getModule()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
io.sentry.SentryAppStartProfilingOptions: void setProfilingTracesHz(int)
io.sentry.ProfilingTraceData: java.lang.String access$402(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.core.NetworkBreadcrumbsIntegration: NetworkBreadcrumbsIntegration(android.content.Context,io.sentry.android.core.BuildInfoProvider,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToForeground()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
io.sentry.protocol.Device: java.lang.String getModel()
io.sentry.SentryEvent: void setModules(java.util.Map)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: float access$202(io.sentry.rrweb.RRWebInteractionMoveEvent$Position,float)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.sentry.android.core.SentryLogcatAdapter: int wtf(java.lang.String,java.lang.Throwable)
io.sentry.protocol.App: void setAppBuild(java.lang.String)
io.sentry.SentryBaseEvent: java.lang.Throwable getThrowable()
io.sentry.SynchronizedQueue: SynchronizedQueue(java.util.Queue)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: SentryFileOutputStream$Factory()
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
io.sentry.SentryTracer: io.sentry.ISpan startChild(java.lang.String,java.lang.String)
io.sentry.Breadcrumb: io.sentry.SentryLevel access$502(io.sentry.Breadcrumb,io.sentry.SentryLevel)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
androidx.preference.DropDownPreference: DropDownPreference(android.content.Context,android.util.AttributeSet)
io.sentry.ProfilingTransactionData: java.util.Map getUnknown()
io.flutter.plugin.platform.PlatformViewsController: void setSoftwareRendering(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: SettingsChannel$ConfigurationQueue()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.lang.Object getLifecycle()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: DartExecutor$DartCallback(android.content.res.AssetManager,java.lang.String,io.flutter.view.FlutterCallbackInformation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
io.sentry.android.core.ActivityLifecycleIntegration: void applyScope(io.sentry.IScope,io.sentry.ITransaction)
io.sentry.android.replay.util.FixedWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
io.sentry.android.core.LifecycleWatcher: void lambda$startSession$0(io.sentry.IScope)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter endObject()
io.sentry.android.replay.util.PersistableLinkedList: int size()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
io.sentry.MainEventProcessor: io.sentry.SentryReplayEvent process(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.rrweb.RRWebBreadcrumbEvent: void setCategory(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: SentryFlutterPlugin()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: java.lang.String calculateDirection(android.view.MotionEvent)
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayUnmask$1: ModifierExtensionsKt$sentryReplayUnmask$1()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
io.sentry.ISentryExecutorService: void close(long)
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableFramesTracking()
io.sentry.MainEventProcessor: MainEventProcessor(io.sentry.SentryOptions)
io.sentry.cache.tape.ObjectQueue: void remove()
io.sentry.CheckIn: java.lang.Double getDuration()
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.sentry.SentryEvent: java.util.Map getUnknown()
io.flutter.embedding.android.FlutterFragment: void onNewIntent(android.content.Intent)
io.sentry.SentryReplayEvent: void setReplayType(io.sentry.SentryReplayEvent$ReplayType)
io.sentry.android.core.internal.threaddump.Line: Line(int,java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.sentry.TraceContext$TraceContextUser: void setUnknown(java.util.Map)
io.sentry.DirectoryProcessor: boolean isRelevantFileName(java.lang.String)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void lambda$new$1(io.sentry.ILogger)
io.flutter.plugin.editing.SpellCheckPlugin: void performSpellCheck(java.lang.String,java.lang.String)
io.sentry.SynchronizedCollection: java.lang.Object[] toArray()
io.sentry.DiagnosticLogger: void log(io.sentry.SentryLevel,java.lang.Throwable,java.lang.String,java.lang.Object[])
io.sentry.SentryReplayEvent: void setReplayStartTimestamp(java.util.Date)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: int hashCode()
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
io.sentry.SentryOptions$BeforeBreadcrumbCallback: io.sentry.Breadcrumb execute(io.sentry.Breadcrumb,io.sentry.Hint)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$700(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.sentry.protocol.SentryStackFrame: java.util.List getPostContext()
io.sentry.android.core.NetworkBreadcrumbsIntegration: void close()
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
io.sentry.internal.modules.ManifestModulesLoader: ManifestModulesLoader(java.lang.ClassLoader,io.sentry.ILogger)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.ProfilingTraceData: java.lang.String getDeviceOsBuildNumber()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: ViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.EventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.protocol.MeasurementValue$JsonKeys: MeasurementValue$JsonKeys()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(java.lang.Number)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: io.sentry.protocol.SentryThread parseThread(io.sentry.android.core.internal.threaddump.Lines)
io.sentry.cache.tape.QueueFile$ElementIterator: byte[] next()
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
io.sentry.protocol.SdkVersion: java.util.Set getPackageSet()
io.sentry.android.core.AnrV2Integration$ParseResult: AnrV2Integration$ParseResult(io.sentry.android.core.AnrV2Integration$ParseResult$Type)
io.sentry.util.CheckInUtils: CheckInUtils()
io.sentry.protocol.SentryRuntime: java.lang.String access$102(io.sentry.protocol.SentryRuntime,java.lang.String)
io.sentry.SentryTracer: void lambda$finish$0(io.sentry.SpanFinishedCallback,java.util.concurrent.atomic.AtomicReference,io.sentry.Span)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long access$300(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
io.sentry.MonitorSchedule: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.SentryAndroidOptions: void setCollectAdditionalContext(boolean)
io.sentry.rrweb.RRWebMetaEvent$Deserializer: io.sentry.rrweb.RRWebMetaEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
io.sentry.protocol.SentryId$Deserializer: SentryId$Deserializer()
io.sentry.Scope: io.sentry.IScope clone()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
io.sentry.android.core.SentryAndroidOptions: void setBeforeViewHierarchyCaptureCallback(io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
io.sentry.android.core.AnrIntegration$AnrHint: java.lang.String mechanism()
io.sentry.transport.ReusableCountLatch: ReusableCountLatch(int)
io.flutter.plugin.platform.PlatformViewsController$1: void offset(int,double,double)
io.sentry.protocol.Request: java.util.Map getOthers()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
io.sentry.ISpan: void finish(io.sentry.SpanStatus,io.sentry.SentryDate)
io.sentry.android.replay.util.AndroidTextLayout: int getLineTop(int)
io.sentry.transport.RateLimiter: boolean isActiveForCategory(io.sentry.DataCategory)
io.sentry.SentryItemType$Deserializer: io.sentry.SentryItemType deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayMask$1: void invoke(androidx.compose.ui.semantics.SemanticsPropertyReceiver)
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
io.sentry.android.core.PerformanceAndroidEventProcessor: void attachAppStartSpans(io.sentry.android.core.performance.AppStartMetrics,io.sentry.protocol.SentryTransaction)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
io.sentry.Hint: void setViewHierarchy(io.sentry.Attachment)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
io.sentry.protocol.Device$DeviceOrientation$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.replay.ReplayIntegration: void checkCanRecord()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: android.os.Bundle createArgs()
io.sentry.MonitorConfig: io.sentry.MonitorSchedule getSchedule()
androidx.fragment.app.Fragment: void performDetach()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
io.sentry.rrweb.RRWebInteractionEvent$JsonKeys: RRWebInteractionEvent$JsonKeys()
io.sentry.flutter.SentryFlutter: void updateReplayOptions(io.sentry.android.core.SentryAndroidOptions,java.util.Map)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
io.sentry.ITransactionProfiler: void bindTransaction(io.sentry.ITransaction)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.sentry.android.core.util.AndroidLazyEvaluator: java.lang.Object getValue(android.content.Context)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
io.sentry.SentryTracer: void setMeasurement(java.lang.String,java.lang.Number)
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
io.sentry.rrweb.RRWebVideoEvent: void setFrameRate(int)
io.sentry.cache.tape.ObjectQueue: void add(java.lang.Object)
io.sentry.android.replay.util.NodesKt: float fastCoerceIn(float,float,float)
io.sentry.Sentry: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel,io.sentry.ScopeCallback)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
io.sentry.protocol.Device: java.util.Date getBootTime()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
io.sentry.transport.RateLimiter: long parseRetryAfterOrDefault(java.lang.String)
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.sentry.protocol.Geo: void setRegion(java.lang.String)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothAdapter access$200(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.UncaughtExceptionHandlerIntegration: UncaughtExceptionHandlerIntegration()
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onEngineWillDestroy()
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel,io.sentry.IScope)
io.sentry.protocol.Response: java.lang.Integer access$202(io.sentry.protocol.Response,java.lang.Integer)
io.sentry.android.replay.gestures.ReplayGestureConverter: java.util.List convert(android.view.MotionEvent,io.sentry.android.replay.ScreenshotRecorderConfig)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
io.sentry.util.Pair: java.lang.Object getSecond()
io.sentry.protocol.MeasurementValue$Deserializer: io.sentry.protocol.MeasurementValue deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.activity.ComponentActivity: void ensureViewModelStore()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
io.sentry.ExternalOptions: void addInAppInclude(java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getInitialRoute()
io.sentry.rrweb.RRWebSpanEvent: void setUnknown(java.util.Map)
io.sentry.SentryBaseEvent: void removeExtra(java.lang.String)
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(io.sentry.instrumentation.file.FileInputStreamInitData,java.io.FileDescriptor,io.sentry.instrumentation.file.SentryFileInputStream$1)
io.sentry.protocol.SentryTransaction: SentryTransaction(io.sentry.SentryTracer)
io.sentry.RequestDetails: java.util.Map getHeaders()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.sentry.flutter.SentryFlutter$updateOptions$2: java.lang.Object invoke(java.lang.Object)
io.sentry.protocol.Geo$Deserializer: io.sentry.protocol.Geo deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.vendor.Base64: byte[] encode(byte[],int,int,int)
io.sentry.Session: boolean update(io.sentry.Session$State,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
io.sentry.MainEventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
io.sentry.SentryTracer: io.sentry.ISpan startChild(io.sentry.SpanId,java.lang.String,java.lang.String)
io.flutter.app.FlutterApplication: FlutterApplication()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource access$002(io.sentry.rrweb.RRWebIncrementalSnapshotEvent,io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource)
io.flutter.embedding.engine.dart.DartMessenger: int getPendingChannelResponseCount()
io.sentry.util.DebugMetaPropertiesApplier: DebugMetaPropertiesApplier()
io.flutter.plugin.editing.InputConnectionAdaptor: byte[] readStreamFully(java.io.InputStream,int)
io.sentry.SentryEnvelopeHeader: io.sentry.protocol.SdkVersion getSdkVersion()
io.sentry.metrics.CounterMetric: void add(double)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.util.Random: long internalNextLong(long,long)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean,io.flutter.embedding.engine.FlutterEngineGroup)
io.sentry.ObjectReader: long nextLong()
io.sentry.Breadcrumb: Breadcrumb(io.sentry.Breadcrumb)
io.sentry.protocol.Device$DeviceOrientation$Deserializer: io.sentry.protocol.Device$DeviceOrientation deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.NoOpTransaction: java.lang.String getName()
io.sentry.DataCategory: io.sentry.DataCategory[] $values()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $values()
io.sentry.android.replay.util.AndroidTextLayout: AndroidTextLayout(android.text.Layout)
io.sentry.ExternalOptions: java.lang.Boolean getEnableTracing()
io.sentry.MonitorSchedule: io.sentry.MonitorSchedule interval(java.lang.Integer,io.sentry.MonitorScheduleUnit)
io.sentry.SentryTracer: void onDeadlineTimeoutReached()
io.sentry.NoOpReplayController: io.sentry.NoOpReplayController getInstance()
io.sentry.internal.modules.NoOpModulesLoader: java.util.Map getOrLoadModules()
io.sentry.android.replay.util.MainLooperHandler: MainLooperHandler(android.os.Looper,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SystemOutLogger: java.lang.String captureStackTrace(java.lang.Throwable)
io.sentry.cache.PersistingScopeObserver: void store(io.sentry.SentryOptions,java.lang.Object,java.lang.String)
io.sentry.IHub: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint,io.sentry.ScopeCallback)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.DeviceInfoUtil: java.lang.Boolean isCharging(android.content.Intent,io.sentry.SentryOptions)
io.sentry.Sentry: boolean isHealthy()
io.sentry.SentryExceptionFactory: java.util.List getSentryExceptionsFromThread(io.sentry.protocol.SentryThread,io.sentry.protocol.Mechanism,java.lang.Throwable)
io.sentry.clientreport.ClientReportRecorder: void recordLostEventInternal(java.lang.String,java.lang.String,java.lang.Long)
io.sentry.SentryTracer$2: SentryTracer$2(io.sentry.SentryTracer)
io.sentry.ProfilingTransactionData: ProfilingTransactionData(io.sentry.ITransaction,java.lang.Long,java.lang.Long)
io.sentry.android.replay.util.FixedWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
io.sentry.NoOpScope: java.lang.Object clone()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.sentry.HubAdapter: boolean isEnabled()
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: boolean isSuccess()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.FileProvider: FileProvider()
io.sentry.config.AbstractPropertiesProvider: java.lang.String getProperty(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setInitialRoute(java.lang.String)
io.sentry.protocol.Mechanism: java.lang.Boolean access$602(io.sentry.protocol.Mechanism,java.lang.Boolean)
io.sentry.util.HttpUtils: boolean containsSensitiveHeader(java.lang.String)
io.sentry.ReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convert(io.sentry.Breadcrumb)
io.flutter.embedding.android.FlutterFragment$1: FlutterFragment$1(io.flutter.embedding.android.FlutterFragment)
io.sentry.Baggage: io.sentry.Baggage fromHeader(java.lang.String)
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)
io.sentry.cache.tape.QueueFile$ElementIterator: java.lang.Object next()
io.sentry.protocol.SentryException$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager$-CC: void $default$addOnFrameMetricsAvailableListener(io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager,android.view.Window,android.view.Window$OnFrameMetricsAvailableListener,android.os.Handler)
io.sentry.NoOpScope: io.sentry.protocol.Request getRequest()
io.sentry.clientreport.NoOpClientReportRecorder: void recordLostEvent(io.sentry.clientreport.DiscardReason,io.sentry.DataCategory)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
io.sentry.protocol.User: java.lang.String access$402(io.sentry.protocol.User,java.lang.String)
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
io.sentry.protocol.Response: java.lang.Long getBodySize()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void lambda$dequeueImage$0()
io.sentry.protocol.Device: java.lang.String access$3002(io.sentry.protocol.Device,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
io.sentry.rrweb.RRWebInteractionEvent: void setX(float)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean contains(android.view.View)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.sentry.android.replay.ScreenshotRecorder: io.sentry.SentryOptions getOptions()
io.sentry.android.core.CurrentActivityHolder: android.app.Activity getActivity()
io.sentry.android.core.internal.util.FirstDrawDoneListener: void registerForNextDraw(android.view.View,java.lang.Runnable,io.sentry.android.core.BuildInfoProvider)
io.flutter.plugin.platform.PlatformViewsController: int toLogicalPixels(double)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager: void addOnFrameMetricsAvailableListener(android.view.Window,android.view.Window$OnFrameMetricsAvailableListener,android.os.Handler)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(java.lang.Boolean)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$2: java.lang.Object invoke()
io.sentry.android.replay.WindowRecorder$onRootViewsChanged$1$1: java.lang.Boolean invoke(java.lang.ref.WeakReference)
io.sentry.android.core.LoadClass: java.lang.Class loadClass(java.lang.String,io.sentry.ILogger)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
io.sentry.ExternalOptions: java.lang.String getServerName()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
io.sentry.android.replay.video.SimpleFrameMuxer: void release()
io.sentry.SentryBaseEvent: java.lang.String getDist()
io.sentry.JsonObjectReader: void endObject()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void onTrimMemory(int)
io.sentry.NoOpScope: void removeContexts(java.lang.String)
io.sentry.protocol.App: java.lang.String getAppIdentifier()
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState[] values()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
io.sentry.cache.tape.QueueFile: boolean isEmpty()
io.sentry.SentryOptions: void setDebug(boolean)
io.sentry.android.core.performance.AppStartMetrics: io.sentry.TracesSamplingDecision getAppStartSamplingDecision()
io.sentry.JsonObjectReader: java.util.Map nextMapOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.TraceContext$TraceContextUser: java.lang.String getSegment()
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
io.sentry.instrumentation.file.SentryFileInputStream: java.lang.Long lambda$skip$3(long)
io.sentry.protocol.SentryStackFrame: java.util.List getPreContext()
io.sentry.protocol.Contexts$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryClient: void close(boolean)
io.sentry.android.replay.ReplayCache$Companion$fromDisk$$inlined$sortBy$1: ReplayCache$Companion$fromDisk$$inlined$sortBy$1()
io.flutter.embedding.engine.systemchannels.KeyboardChannel: KeyboardChannel(io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
io.sentry.protocol.Device: java.lang.Integer getScreenWidthPixels()
io.sentry.SentryOptions: java.util.List getEventProcessors()
io.sentry.transport.NoOpTransportGate: NoOpTransportGate()
io.sentry.CircularFifoQueue: int access$000(io.sentry.CircularFifoQueue)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.lang.String[])
io.sentry.android.replay.capture.CaptureStrategy: void pause()
io.sentry.rrweb.RRWebVideoEvent: int access$1202(io.sentry.rrweb.RRWebVideoEvent,int)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
androidx.activity.ComponentActivity: void setContentView(int)
io.sentry.IScope: io.sentry.protocol.SentryId getReplayId()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter endArray()
io.sentry.JsonSerializer: io.sentry.SentryEnvelope deserializeEnvelope(java.io.InputStream)
io.sentry.SentryTracer: void forceFinish(io.sentry.SpanStatus,boolean,io.sentry.Hint)
io.sentry.android.core.SentryAndroidOptions: void setEnableAutoActivityLifecycleTracing(boolean)
io.sentry.android.core.AndroidTransactionProfiler: AndroidTransactionProfiler(android.content.Context,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.internal.util.SentryFrameMetricsCollector)
io.flutter.embedding.engine.renderer.FlutterRenderer: void scheduleEngineFrame()
io.sentry.Hub: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.sentry.android.core.ViewHierarchyEventProcessor: void lambda$snapshotViewHierarchy$0(java.util.concurrent.atomic.AtomicReference,android.view.View,java.util.List,java.util.concurrent.CountDownLatch,io.sentry.ILogger)
io.sentry.android.core.EmptySecureContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int getHeight()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.sentry.protocol.SdkInfo$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.util.ViewUtils: boolean lambda$hasChildViewOfType$1(java.lang.Class[],android.view.View)
io.flutter.util.ViewUtils: ViewUtils()
io.sentry.SentryEvent: java.util.Date access$002(io.sentry.SentryEvent,java.util.Date)
io.sentry.android.core.NdkIntegration: void disableNdkIntegration(io.sentry.android.core.SentryAndroidOptions)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$onMethodCall$1(io.flutter.plugin.common.MethodChannel$Result,boolean,java.lang.String)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
io.flutter.embedding.android.FlutterFragmentActivity: void onNewIntent(android.content.Intent)
io.sentry.flutter.SentryFlutterPlugin: void removeContexts$lambda$7(java.lang.String,io.flutter.plugin.common.MethodChannel$Result,io.sentry.IScope)
io.sentry.Attachment: Attachment(java.lang.String,java.lang.String,java.lang.String,boolean)
io.sentry.rrweb.RRWebSpanEvent: void setData(java.util.Map)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
io.sentry.vendor.gson.stream.JsonWriter: void setIndent(java.lang.String)
io.flutter.embedding.android.KeyboardMap$PressingGoal: KeyboardMap$PressingGoal(int,io.flutter.embedding.android.KeyboardMap$KeyPair[])
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1$1: BaseCaptureStrategy$special$$inlined$persistableAtomic$1$1(kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.sentry.IScope: void setRequest(io.sentry.protocol.Request)
io.sentry.JsonReflectionObjectSerializer: JsonReflectionObjectSerializer(int)
io.sentry.android.replay.ReplayIntegration$PreviousReplayHint: boolean shouldEnrich()
io.sentry.android.replay.ViewExtensionsKt: void sentryReplayUnmask(android.view.View)
io.flutter.embedding.android.FlutterView: void releaseImageView()
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
io.sentry.android.replay.util.TextAttributes: boolean getHasFillModifier()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
io.sentry.android.core.util.AndroidLazyEvaluator$AndroidEvaluator: java.lang.Object evaluate(android.content.Context)
io.sentry.clientreport.ClientReportRecorder: void recordLostEnvelope(io.sentry.clientreport.DiscardReason,io.sentry.SentryEnvelope)
io.sentry.protocol.DebugImage: void setImageSize(java.lang.Long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureEvent(io.sentry.IHub,io.sentry.SentryEvent,io.sentry.ScopeCallback)
io.sentry.MainEventProcessor: boolean isClosed()
io.sentry.ISentryClient: boolean isEnabled()
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
io.sentry.protocol.SentryPackage: boolean equals(java.lang.Object)
io.sentry.NoOpHub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel,io.sentry.ScopeCallback)
io.sentry.PropagationContext: void setTraceId(io.sentry.protocol.SentryId)
io.sentry.android.core.internal.util.AndroidCurrentDateProvider: io.sentry.transport.ICurrentDateProvider getInstance()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
io.sentry.util.SampleRateUtils: boolean isValidRate(java.lang.Double,boolean)
io.sentry.NoOpHub: void close()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
io.sentry.protocol.DebugImage: java.lang.String access$102(io.sentry.protocol.DebugImage,java.lang.String)
androidx.appcompat.widget.SearchView: int getImeOptions()
io.sentry.android.replay.capture.BaseCaptureStrategy: int getCurrentSegment()
io.sentry.util.SentryRandom$SentryRandomThreadLocal: java.lang.Object initialValue()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
io.sentry.Sentry: io.sentry.protocol.SentryId captureException(java.lang.Throwable)
io.sentry.protocol.App: java.util.Date access$102(io.sentry.protocol.App,java.util.Date)
io.sentry.MonitorConfig$Deserializer: io.sentry.MonitorConfig deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler: void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.protocol.SentryStackFrame: SentryStackFrame()
io.sentry.vendor.gson.stream.JsonScope: JsonScope()
io.sentry.SentryOptions: void setAttachThreads(boolean)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$onActivityCreated$6(java.lang.String,io.sentry.IScope)
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler: java.util.Map queryTextActions()
io.sentry.SentryBaseEvent: java.util.List access$1102(io.sentry.SentryBaseEvent,java.util.List)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: SendCachedEnvelopeFireAndForgetIntegration(io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory)
io.sentry.SentryReplayEvent$JsonKeys: SentryReplayEvent$JsonKeys()
io.sentry.protocol.User: io.sentry.protocol.Geo access$602(io.sentry.protocol.User,io.sentry.protocol.Geo)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.sentry.cache.PersistingScopeObserver: void setLevel(io.sentry.SentryLevel)
io.sentry.IEnvelopeReader: io.sentry.SentryEnvelope read(java.io.InputStream)
io.sentry.Breadcrumb: io.sentry.Breadcrumb fromMap(java.util.Map,io.sentry.SentryOptions)
io.flutter.plugin.platform.PlatformViewsController: void detach()
io.sentry.NoOpSpan: io.sentry.SentryDate getStartDate()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: boolean isTracingEnabled(io.sentry.IHub)
io.sentry.DateUtils: DateUtils()
io.sentry.android.core.CurrentActivityIntegration: void close()
io.sentry.protocol.SentryPackage: java.util.Map getUnknown()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
io.sentry.SentryOptions: boolean isEnableSpotlight()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized: void run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize)
io.sentry.ProfilingTraceData: java.lang.String access$1702(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.protocol.Gpu: boolean equals(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
io.sentry.protocol.Device: java.util.TimeZone getTimezone()
io.sentry.HubAdapter: void configureScope(io.sentry.ScopeCallback)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.android.core.ContextUtils$SideLoadedInfo: java.util.Map asTags()
io.sentry.CircularFifoQueue: int access$500(io.sentry.CircularFifoQueue)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
io.sentry.Breadcrumb: io.sentry.Breadcrumb query(java.lang.String)
io.sentry.android.ndk.NativeScope: void nativeRemoveUser()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue access$100()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder dartEntrypointArgs(java.util.List)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean)
io.sentry.Session: boolean isTerminated()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
io.flutter.embedding.android.KeyboardMap: io.flutter.embedding.android.KeyboardMap$TogglingGoal[] getTogglingGoals()
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: void startSystemEventsReceiver(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.sentry.Scope: java.util.Map getTags()
io.flutter.plugin.platform.SingleViewWindowManager: void removeViewImmediate(android.view.View)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(boolean)
io.sentry.NoOpConnectionStatusProvider: NoOpConnectionStatusProvider()
io.sentry.android.replay.capture.BaseCaptureStrategy: void setCurrentReplayId(io.sentry.protocol.SentryId)
io.sentry.protocol.MetricSummary: double getSum()
io.sentry.android.replay.video.MuxerConfig: int hashCode()
io.sentry.ProfilingTraceData: java.util.Map access$2400(io.sentry.ProfilingTraceData)
io.sentry.SentryLockReason: void setType(int)
io.sentry.SentryOptions: void setEnableUserInteractionBreadcrumbs(boolean)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: ImageReaderPlatformViewRenderTarget(io.flutter.view.TextureRegistry$ImageTextureEntry)
io.sentry.SpotlightIntegration: void close()
io.sentry.android.replay.OnRootViewsChangedListener: void onRootViewsChanged(android.view.View,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
io.sentry.ISentryExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)
io.sentry.protocol.Request: void setHeaders(java.util.Map)
io.sentry.android.core.Installation: java.lang.String id(android.content.Context)
io.sentry.protocol.Request: java.util.Map access$702(io.sentry.protocol.Request,java.util.Map)
io.sentry.clientreport.DiscardedEvent$JsonKeys: DiscardedEvent$JsonKeys()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
io.sentry.protocol.Request: void setUrl(java.lang.String)
io.sentry.util.HintUtils: void lambda$runIfHasType$2(java.lang.Object,java.lang.Class)
io.sentry.protocol.Device: io.sentry.protocol.Device$DeviceOrientation getOrientation()
io.sentry.android.replay.capture.BaseCaptureStrategy: void setReplayType(io.sentry.SentryReplayEvent$ReplayType)
io.sentry.android.core.AndroidProfiler$ProfileEndData: AndroidProfiler$ProfileEndData(long,long,boolean,java.io.File,java.util.Map)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode[] values()
io.sentry.util.UrlUtils: java.lang.String extractQuery(java.lang.String,int,int)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory$-CC: boolean $default$hasValidPath(io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory,java.lang.String,io.sentry.ILogger)
io.sentry.SentryBaseEvent: java.lang.String getServerName()
io.sentry.profilemeasurements.ProfileMeasurement: void setUnknown(java.util.Map)
io.sentry.util.LazyEvaluator: LazyEvaluator(io.sentry.util.LazyEvaluator$Evaluator)
io.sentry.SentryTracer: void finish(io.sentry.SpanStatus,io.sentry.SentryDate)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.sentry.NoOpScope: void setUser(io.sentry.protocol.User)
io.sentry.protocol.Request: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Paint getMaskingPaint()
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] $values()
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget create(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.plugin.editing.TextEditingDelta: int getNewComposingEnd()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
io.sentry.rrweb.RRWebBreadcrumbEvent: void setData(java.util.Map)
io.sentry.profilemeasurements.ProfileMeasurementValue$Deserializer: ProfileMeasurementValue$Deserializer()
io.sentry.JsonObjectReader: void endArray()
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
io.sentry.cache.PersistingScopeObserver: java.nio.charset.Charset access$000()
io.sentry.protocol.MetricSummary: java.util.Map access$002(io.sentry.protocol.MetricSummary,java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.sentry.Dsn: java.lang.String getPublicKey()
io.flutter.embedding.android.FlutterFragment: boolean stillAttachedForEvent(java.lang.String)
io.sentry.SentryOptions: boolean isEnableAutoSessionTracking()
io.sentry.flutter.SentryFlutterPlugin: void setupReplay(io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.ContextUtils: android.content.pm.PackageInfo lambda$static$3(android.content.Context)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
io.sentry.ObjectReader: boolean nextBoolean()
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureEvent(io.sentry.ISentryClient,io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.SentryClient: io.sentry.protocol.SentryId captureReplayEvent(io.sentry.SentryReplayEvent,io.sentry.IScope,io.sentry.Hint)
io.sentry.NoOpScope: io.sentry.NoOpScope getInstance()
io.sentry.MonitorSchedule: void setUnit(java.lang.String)
io.sentry.android.core.AndroidOptionsInitializer: void initializeIntegrationsAndProcessors(io.sentry.android.core.SentryAndroidOptions,android.content.Context,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.LoadClass,io.sentry.android.core.ActivityFramesTracker)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.preference.PreferenceScreen: PreferenceScreen(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.android.ndk.NativeScope: void setExtra(java.lang.String,java.lang.String)
io.sentry.SentryClient: void lambda$updateSessionData$1(io.sentry.SentryEvent,io.sentry.Hint,io.sentry.Session)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onFocus(int)
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.sentry.cache.tape.ObjectQueue: io.sentry.cache.tape.QueueFile file()
io.sentry.vendor.gson.stream.JsonWriter: void writeDeferredName()
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: long getId()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getCachedEngineGroupId()
io.flutter.plugin.common.BasicMessageChannel: java.nio.ByteBuffer packetFromEncodedMessage(java.nio.ByteBuffer)
io.sentry.protocol.TransactionInfo$JsonKeys: TransactionInfo$JsonKeys()
io.sentry.ProfilingTraceData: java.lang.String getSampledProfile()
io.sentry.SentryExecutorService$SentryExecutorServiceThreadFactory: SentryExecutorService$SentryExecutorServiceThreadFactory(io.sentry.SentryExecutorService$1)
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
io.sentry.android.replay.capture.BaseCaptureStrategy: java.lang.String getScreenAtStart()
io.sentry.SentryOptions: void setTraceOptionsRequests(boolean)
io.sentry.util.CheckInUtils: java.lang.Object withCheckIn(java.lang.String,io.sentry.MonitorConfig,java.util.concurrent.Callable)
io.sentry.android.core.internal.gestures.SentryWindowCallback: void stopTracking()
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
io.sentry.SentryOptions$Proxy: java.lang.String getPort()
io.flutter.util.Preconditions: Preconditions()
io.sentry.android.core.AnrV2Integration$AnrProcessor: AnrV2Integration$AnrProcessor(android.content.Context,io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions,io.sentry.transport.ICurrentDateProvider)
androidx.core.app.ComponentActivity: ComponentActivity()
io.sentry.Baggage$DSCKeys: Baggage$DSCKeys()
io.flutter.embedding.android.FlutterActivity: void onPostResume()
io.sentry.MonitorScheduleUnit: io.sentry.MonitorScheduleUnit[] values()
io.sentry.ExternalOptions: void addTracingOrigin(java.lang.String)
io.sentry.android.replay.util.PersistableLinkedList: boolean addAll(java.util.Collection)
io.sentry.transport.ReusableCountLatch$Sync: int tryAcquireShared(int)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3002(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
io.sentry.protocol.Device: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
io.flutter.embedding.android.FlutterFragment: java.lang.String getDartEntrypointFunctionName()
io.sentry.MetricsAggregator: void gauge(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.util.StringUtils: java.lang.String normalizeUUID(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$28$1: SentryFlutter$updateOptions$28$1(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions$Cron: java.lang.String getDefaultTimezone()
io.sentry.NoOpScope: void setReplayId(io.sentry.protocol.SentryId)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.SentryNanotimeDate: int compareTo(java.lang.Object)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode component2()
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: int getHeight()
io.sentry.ProfilingTransactionData: java.lang.String getName()
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.sentry.SentryOptions: boolean isTraceSampling()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel,io.sentry.ScopeCallback)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
io.sentry.MainEventProcessor: void ensureHostnameCache()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.sentry.flutter.SentryFlutter$updateOptions$9: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.internal.gestures.SentryGestureListener: void clearScope(io.sentry.IScope)
io.sentry.transport.AsyncHttpTransport$AsyncConnectionThreadFactory: AsyncHttpTransport$AsyncConnectionThreadFactory()
io.sentry.android.replay.util.ExecutorsKt: java.util.concurrent.ScheduledFuture scheduleAtFixedRateSafely(java.util.concurrent.ScheduledExecutorService,io.sentry.SentryOptions,java.lang.String,long,long,java.util.concurrent.TimeUnit,java.lang.Runnable)
io.sentry.NoOpTransactionPerformanceCollector: void start(io.sentry.ITransaction)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean isImportantForContentCapture()
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.systemchannels.ScribeChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
io.sentry.internal.modules.ResourcesModulesLoader: ResourcesModulesLoader(io.sentry.ILogger,java.lang.ClassLoader)
io.flutter.embedding.android.FlutterView: void access$500(io.flutter.embedding.android.FlutterView)
io.sentry.IScope: io.sentry.PropagationContext getPropagationContext()
io.sentry.Dsn: java.lang.String getPath()
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
io.sentry.flutter.SentryFlutterReplayRecorder: void pause()
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.ISentryClient,io.sentry.protocol.SentryTransaction,io.sentry.IScope,io.sentry.Hint)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
io.sentry.rrweb.RRWebInteractionEvent$Deserializer: RRWebInteractionEvent$Deserializer()
io.sentry.android.core.internal.util.BreadcrumbFactory: BreadcrumbFactory()
io.sentry.protocol.User: void setData(java.util.Map)
io.sentry.NoOpConnectionStatusProvider: void removeConnectionStatusObserver(io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
androidx.fragment.app.Fragment: boolean isResumed()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double access$502(io.sentry.protocol.ViewHierarchyNode,java.lang.Double)
io.sentry.protocol.Device: java.lang.Float access$2202(io.sentry.protocol.Device,java.lang.Float)
io.sentry.protocol.Request: java.lang.String access$002(io.sentry.protocol.Request,java.lang.String)
io.sentry.android.core.performance.TimeSpan: boolean hasNotStopped()
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPreStarted(android.app.Activity)
io.sentry.android.replay.ScreenshotRecorderConfig$Companion: io.sentry.android.replay.ScreenshotRecorderConfig from(android.content.Context,io.sentry.SentryReplayOptions)
io.sentry.SentryOptions: java.lang.String getDistinctId()
io.sentry.SpanId: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(io.sentry.ILogger,java.lang.Object)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
io.sentry.android.replay.capture.CaptureStrategy$DefaultImpls: void start$default(io.sentry.android.replay.capture.CaptureStrategy,io.sentry.android.replay.ScreenshotRecorderConfig,int,io.sentry.protocol.SentryId,io.sentry.SentryReplayEvent$ReplayType,int,java.lang.Object)
io.sentry.JsonReflectionObjectSerializer: java.util.List list(java.util.Collection,io.sentry.ILogger)
io.sentry.SentryRuntimeEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.android.replay.util.ViewsKt: java.util.List getVisibleRects(io.sentry.android.replay.util.TextLayout,android.graphics.Rect,int,int)
io.sentry.protocol.Contexts: io.sentry.protocol.SentryRuntime getRuntime()
androidx.fragment.app.Fragment: java.lang.Object getHost()
io.sentry.util.LazyEvaluator: java.lang.Object getValue()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.sentry.Hub: void close()
io.sentry.MonitorSchedule: void setValue(java.lang.Integer)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
io.sentry.NoOpSpan: io.sentry.SpanContext getSpanContext()
io.sentry.DiagnosticLogger: boolean isEnabled(io.sentry.SentryLevel)
io.sentry.NoOpScope: io.sentry.ITransaction getTransaction()
io.sentry.HubAdapter: void clearBreadcrumbs()
io.sentry.android.core.internal.util.FirstDrawDoneListener: boolean isAliveAndAttached(android.view.View)
io.sentry.android.core.performance.TimeSpan: int compareTo(java.lang.Object)
io.sentry.android.core.AnrV2Integration$AnrProcessor: void reportAsSentryEvent(android.app.ApplicationExitInfo,boolean)
io.sentry.SentryTracer: io.sentry.SpanStatus getStatus()
androidx.activity.ComponentActivity: ComponentActivity()
io.sentry.flutter.SentryFlutter$updateOptions$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
io.sentry.NoOpSerializer: void serialize(java.lang.Object,java.io.Writer)
io.sentry.rrweb.RRWebVideoEvent: int getFrameRate()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: io.flutter.view.TextureRegistry$ImageTextureEntry access$000(io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
io.sentry.rrweb.RRWebSpanEvent: java.lang.String getDescription()
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceProducer createSurfaceProducer()
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
io.sentry.NoOpConnectionStatusProvider: java.lang.String getConnectionType()
io.sentry.protocol.ViewHierarchy$JsonKeys: ViewHierarchy$JsonKeys()
io.sentry.SentryTracer: SentryTracer(io.sentry.TransactionContext,io.sentry.IHub,io.sentry.TransactionOptions,io.sentry.TransactionPerformanceCollector)
io.sentry.MonitorConfig: void setMaxRuntime(java.lang.Long)
io.flutter.embedding.android.KeyEmbedderResponder: void lambda$synchronizePressingKey$0(io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent)
io.sentry.util.Objects: boolean equals(java.lang.Object,java.lang.Object)
io.sentry.internal.modules.NoOpModulesLoader: io.sentry.internal.modules.NoOpModulesLoader getInstance()
io.sentry.ExternalOptions: void addIgnoredExceptionForType(java.lang.Class)
io.sentry.android.core.ANRWatchDog$ANRListener: void onAppNotResponding(io.sentry.android.core.ApplicationNotResponding)
io.sentry.android.replay.capture.CaptureStrategy$Companion: void createSegment$lambda$0(kotlin.jvm.internal.Ref$ObjectRef,io.sentry.IScope)
io.sentry.android.core.internal.gestures.SentryWindowCallback$1: SentryWindowCallback$1()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.sentry.cache.tape.QueueFile: void remove(int)
io.sentry.IScopeObserver: void setExtras(java.util.Map)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.WindowManagerHandler access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler)
io.sentry.SentryBaseEvent: java.util.Map getExtras()
io.sentry.SentryOptions: io.sentry.ISentryExecutorService getExecutorService()
io.sentry.rrweb.RRWebMetaEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.Baggage: void setValuesFromTransaction(io.sentry.ITransaction,io.sentry.protocol.User,io.sentry.protocol.SentryId,io.sentry.SentryOptions,io.sentry.TracesSamplingDecision)
androidx.fragment.app.Fragment: void initState()
io.sentry.protocol.SentryStackFrame: java.lang.Boolean isInApp()
io.sentry.metrics.DistributionMetric: java.lang.Iterable serialize()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
io.sentry.android.core.ApplicationNotResponding: ApplicationNotResponding(java.lang.String,java.lang.Thread)
io.sentry.UncaughtExceptionHandlerIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.protocol.Response$Deserializer: io.sentry.protocol.Response deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void lambda$installDeferredComponent$1(int,java.lang.String,java.lang.Exception)
io.sentry.instrumentation.file.FileIOSpanManager: FileIOSpanManager(io.sentry.ISpan,java.io.File,io.sentry.SentryOptions)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(io.sentry.ILogger,java.lang.Object)
io.sentry.SentryOptions: java.util.List getViewHierarchyExporters()
io.sentry.android.replay.util.SamplingKt: boolean sample(io.sentry.util.Random,java.lang.Double)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
io.sentry.protocol.SentryStackFrame: java.lang.String access$1202(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.transport.ReusableCountLatch$Sync: boolean tryReleaseShared(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment: CaptureStrategy$ReplaySegment()
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.Long getPhysicalKey(android.view.KeyEvent)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,java.lang.String[],boolean)
io.sentry.protocol.Mechanism: void setType(java.lang.String)
io.sentry.cache.EnvelopeCache: void store(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.rrweb.RRWebMetaEvent: java.util.Map getUnknown()
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
io.sentry.SentryValues$JsonKeys: SentryValues$JsonKeys()
io.sentry.HubAdapter: io.sentry.HubAdapter getInstance()
io.sentry.rrweb.RRWebVideoEvent: java.lang.String access$1002(io.sentry.rrweb.RRWebVideoEvent,java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
io.sentry.ObjectReader: java.lang.Integer nextIntegerOrNull()
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.ProfilingTraceData$JsonKeys: ProfilingTraceData$JsonKeys()
androidx.fragment.app.Fragment: void performPause()
io.sentry.android.replay.Recorder: void resume()
io.sentry.transport.TransportResult: io.sentry.transport.TransportResult success()
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: void unregisterNetworkCallback(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider,android.net.ConnectivityManager$NetworkCallback)
io.sentry.cache.PersistingScopeObserver: void setRequest(io.sentry.protocol.Request)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
io.sentry.android.replay.util.NodesKt: float fastMaxOf(float,float,float,float)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
io.sentry.ProfilingTransactionData$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
com.sanguinarypc.box_sensors.R$string: R$string()
io.sentry.android.replay.ScreenshotRecorderCallback: void onScreenshotRecorded(android.graphics.Bitmap)
io.sentry.ObjectReader: void beginObject()
io.sentry.IScope: void setTransaction(java.lang.String)
io.sentry.NoOpSpan: void setThrowable(java.lang.Throwable)
io.sentry.transport.CurrentDateProvider: CurrentDateProvider()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
io.sentry.util.DebugMetaPropertiesApplier: void applyProguardUuid(io.sentry.SentryOptions,java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
io.flutter.embedding.android.FlutterViewDelegate: void growViewportMetricsToCaptionBar(android.content.Context,io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
io.sentry.protocol.SentryPackage$Deserializer: SentryPackage$Deserializer()
io.sentry.android.replay.WindowManagerSpy: java.lang.Class access$getWindowManagerClass(io.sentry.android.replay.WindowManagerSpy)
io.sentry.protocol.App: java.lang.String getAppVersion()
io.sentry.android.core.internal.gestures.ViewUtils: java.lang.String getResourceId(android.view.View)
io.sentry.android.core.performance.AppStartMetrics$AppStartType: io.sentry.android.core.performance.AppStartMetrics$AppStartType[] values()
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToBackground()
io.sentry.SentryBaseEvent: void setRelease(java.lang.String)
io.sentry.UserFeedback: void setName(java.lang.String)
io.sentry.android.core.SpanFrameMetricsCollector: int lambda$new$0(io.sentry.ISpan,io.sentry.ISpan)
io.sentry.android.replay.capture.SessionCaptureStrategy$stop$1: java.lang.Object invoke(java.lang.Object)
io.sentry.Baggage: java.lang.Double getSampleRateDouble()
io.sentry.ExternalOptions: java.lang.Boolean getPrintUncaughtStackTrace()
io.sentry.TraceContext: java.lang.String getRelease()
io.sentry.util.CollectionUtils: java.util.List map(java.util.List,io.sentry.util.CollectionUtils$Mapper)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long getLastKnownFrameStartTimeNanos()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.sentry.config.AbstractPropertiesProvider: AbstractPropertiesProvider(java.lang.String,java.util.Properties)
io.sentry.protocol.SentryRuntime: java.lang.String getVersion()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3000(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.sentry.SentryOptions$Cron: void setDefaultRecoveryThreshold(java.lang.Long)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: float getX()
io.sentry.ProfilingTraceData: void setDeviceModel(java.lang.String)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromSession$2(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
io.sentry.clientreport.ClientReport: void setUnknown(java.util.Map)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: FlutterFragment$NewEngineInGroupFragmentBuilder(java.lang.Class,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
io.flutter.embedding.android.FlutterActivity: void cancelBackGesture()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadDartLibrary(int,java.lang.String)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: void lambda$onReceive$0(long,android.content.Intent,java.lang.String,boolean)
io.sentry.SentryEnvelopeItem: byte[] serializeToMsgpack(java.util.Map)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceCleanup(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.sentry.SentryEvent: void setUnknown(java.util.Map)
io.flutter.embedding.android.KeyboardMap$1: KeyboardMap$1()
io.sentry.ExternalOptions: java.util.List getTracingOrigins()
io.sentry.transport.RateLimiter$IRateLimitObserver: void onRateLimitChanged(io.sentry.transport.RateLimiter)
io.sentry.transport.HttpConnection: io.sentry.transport.TransportResult readAndLog(java.net.HttpURLConnection)
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.LastSegmentData copy$default(io.sentry.android.replay.LastSegmentData,io.sentry.android.replay.ScreenshotRecorderConfig,io.sentry.android.replay.ReplayCache,java.util.Date,int,long,io.sentry.SentryReplayEvent$ReplayType,java.lang.String,java.util.List,int,java.lang.Object)
io.sentry.Scope: io.sentry.Session withSession(io.sentry.Scope$IWithSession)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource: io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource[] values()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource$Deserializer: RRWebIncrementalSnapshotEvent$IncrementalSource$Deserializer()
io.sentry.protocol.SdkInfo: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.rrweb.RRWebInteractionEvent: float access$202(io.sentry.rrweb.RRWebInteractionEvent,float)
io.sentry.protocol.SentryThread: java.lang.Boolean isCrashed()
io.sentry.ShutdownHookIntegration: ShutdownHookIntegration()
io.sentry.Session: java.lang.Long getSequence()
io.sentry.protocol.User: void setUsername(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.sentry.ObjectReader: java.lang.Object nextOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.NoOpHub: void close(boolean)
io.sentry.protocol.User: java.lang.String access$002(io.sentry.protocol.User,java.lang.String)
io.sentry.android.replay.capture.BufferCaptureStrategy: void captureReplay$lambda$1(io.sentry.android.replay.capture.BufferCaptureStrategy,io.sentry.IScope)
io.sentry.android.core.UserInteractionIntegration: UserInteractionIntegration(android.app.Application,io.sentry.android.core.LoadClass)
io.sentry.SentryOptions: boolean containsIgnoredExceptionForType(java.lang.Throwable)
io.flutter.embedding.engine.loader.ResourceExtractor: void access$200(java.io.InputStream,java.io.OutputStream)
io.sentry.android.ndk.DebugImagesLoader: void clearDebugImages()
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
io.sentry.android.core.ContextUtils: android.content.pm.ApplicationInfo lambda$static$5(android.content.Context)
io.sentry.Sentry: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.flutter.SentryFlutterPlugin: void fetchNativeAppStart(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.MainLooperHandler: MainLooperHandler()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugin.platform.PlatformPlugin$2: void lambda$onSystemUiVisibilityChange$0(int)
io.sentry.protocol.SentrySpan: java.lang.String getOp()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.content.Context getContext()
io.sentry.MainEventProcessor: boolean isCachedHint(io.sentry.Hint)
io.sentry.SentryReplayEvent$ReplayType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.ContextUtils$SideLoadedInfo: boolean isSideLoaded()
io.sentry.exception.ExceptionMechanismException: io.sentry.protocol.Mechanism getExceptionMechanism()
io.sentry.android.replay.RootViewsSpy$listeners$1: int lastIndexOf(io.sentry.android.replay.OnRootViewsChangedListener)
io.sentry.android.ndk.NdkScopeObserver: void setTag(java.lang.String,java.lang.String)
io.sentry.SentryBaseEvent: io.sentry.protocol.SentryId access$002(io.sentry.SentryBaseEvent,io.sentry.protocol.SentryId)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$snakeToCamelCase$1: DefaultReplayBreadcrumbConverter$snakeToCamelCase$1()
io.sentry.android.core.NdkHandlerStrategy: io.sentry.android.core.NdkHandlerStrategy valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: FlutterRenderer$DisplayFeatureType(java.lang.String,int,int)
io.sentry.NoOpHub: void endSession()
io.sentry.android.core.ActivityLifecycleIntegration: void onFullFrameDrawn(io.sentry.ISpan)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.cache.tape.QueueFile: void clear()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$LogLevel: FlutterBluePlusPlugin$LogLevel(java.lang.String,int)
io.sentry.android.replay.util.PersistableLinkedList: boolean add(java.lang.Object)
io.sentry.ProfilingTraceData: java.lang.String access$502(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.protocol.DebugImage: void setDebugId(java.lang.String)
io.sentry.Attachment: Attachment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
io.sentry.MainEventProcessor: void mergeUser(io.sentry.SentryBaseEvent)
io.sentry.SentryAppStartProfilingOptions: java.lang.Double getTraceSampleRate()
io.sentry.util.Random: int next(int)
io.sentry.cache.CacheUtils: void delete(io.sentry.SentryOptions,java.lang.String,java.lang.String)
io.sentry.android.core.SentryLogcatAdapter: int e(java.lang.String,java.lang.String)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.embedding.engine.FlutterShellArgs: void add(java.lang.String)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$1000(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.android.core.AndroidOptionsInitializer: java.lang.String lambda$installDefaultIntegrations$2(io.sentry.android.core.SentryAndroidOptions)
io.sentry.NoOpLogger: NoOpLogger()
io.sentry.android.replay.util.PersistableLinkedList: void persistRecording()
io.sentry.protocol.OperatingSystem: java.lang.String access$402(io.sentry.protocol.OperatingSystem,java.lang.String)
io.sentry.NoOpSpan: void setStatus(io.sentry.SpanStatus)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppComponentBreadcrumbs()
io.sentry.protocol.SdkInfo: java.lang.Integer getVersionMinor()
io.sentry.SentryOptions: boolean isEnableUserInteractionTracing()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getDartEntrypointLibraryUri()
io.sentry.MonitorContexts: void setTrace(io.sentry.SpanContext)
io.sentry.protocol.SentryTransaction: java.util.List access$300(io.sentry.protocol.SentryTransaction)
io.sentry.CircularFifoQueue: boolean add(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
io.sentry.android.core.AnrV2Integration$ParseResult: AnrV2Integration$ParseResult(io.sentry.android.core.AnrV2Integration$ParseResult$Type,byte[])
io.sentry.android.core.performance.AppStartMetrics: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.android.replay.util.NodesKt: io.sentry.android.replay.util.TextAttributes findTextAttributes(androidx.compose.ui.node.LayoutNode)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.sentry.android.core.performance.TimeSpan: boolean hasNotStarted()
io.sentry.TracesSamplingDecision: java.lang.Double getSampleRate()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.MonitorScheduleType: io.sentry.MonitorScheduleType[] values()
io.sentry.Hub: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn)
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.sentry.android.core.SentryFrameMetrics: io.sentry.android.core.SentryFrameMetrics diffTo(io.sentry.android.core.SentryFrameMetrics)
io.sentry.ExternalOptions: void setProxy(io.sentry.SentryOptions$Proxy)
io.sentry.android.replay.util.FixedWindowCallback: FixedWindowCallback(android.view.Window$Callback)
io.sentry.backpressure.IBackpressureMonitor: int getDownsampleFactor()
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldHandleDeeplinking()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager,io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1)
io.sentry.Span: java.util.Map getData()
io.sentry.flutter.SentryFlutter$updateOptions$24: java.lang.Object invoke(java.lang.Object)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.sentry.cache.tape.QueueFile$ElementIterator: void checkForComodification()
io.sentry.Hint: io.sentry.Hint withAttachments(java.util.List)
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
io.sentry.android.replay.ReplayCache$Companion: java.io.File makeReplayCacheDir(io.sentry.SentryOptions,io.sentry.protocol.SentryId)
io.sentry.protocol.SentryException: SentryException()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.sentry.android.replay.capture.SessionCaptureStrategy$stop$1: SessionCaptureStrategy$stop$1(io.sentry.android.replay.capture.SessionCaptureStrategy,java.io.File)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: FlutterActivity$NewEngineIntentBuilder(java.lang.Class)
io.sentry.SentryTracer: java.lang.Boolean isSampled()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.protocol.SentrySpan$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.internal.debugmeta.ResourcesDebugMetaLoader: ResourcesDebugMetaLoader(io.sentry.ILogger)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
io.sentry.SentryTracer$1: void run()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
io.sentry.SentryLockReason$JsonKeys: SentryLockReason$JsonKeys()
io.sentry.SentryOptions: void setReadTimeoutMillis(int)
io.sentry.SentryOptions: void setReplayController(io.sentry.ReplayController)
io.sentry.Baggage: java.lang.String sampleRateToString(java.lang.Double)
io.sentry.IHub: io.sentry.SentryOptions getOptions()
io.flutter.plugin.common.BinaryMessenger$-CC: io.flutter.plugin.common.BinaryMessenger$TaskQueue $default$makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.android.replay.util.TextAttributes: androidx.compose.ui.graphics.Color getColor-QN2ZGVo()
io.sentry.SentryReplayEvent$Deserializer: io.sentry.SentryReplayEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.sentry.ReplayRecording: java.util.Map getUnknown()
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.sentry.MonitorScheduleUnit: MonitorScheduleUnit(java.lang.String,int)
io.sentry.TransactionContext: void setTransactionNameSource(io.sentry.protocol.TransactionNameSource)
io.sentry.android.replay.ReplayLifecycle: io.sentry.android.replay.ReplayState getCurrentState$sentry_android_replay_release()
io.sentry.vendor.gson.stream.JsonWriter: boolean getSerializeNulls()
io.sentry.protocol.SentryThread: java.lang.String access$302(io.sentry.protocol.SentryThread,java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivity()
io.sentry.android.core.internal.gestures.SentryGestureListener: void startTracing(io.sentry.internal.gestures.UiElement,io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
io.sentry.util.LazyEvaluator: void resetValue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.sentry.android.core.internal.gestures.SentryGestureListener: android.view.View ensureWindowDecorView(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
io.sentry.ReplayController: void setBreadcrumbConverter(io.sentry.ReplayBreadcrumbConverter)
io.sentry.HttpStatusCodeRange: boolean isInRange(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceCleanup()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.Map getUnknown()
io.sentry.flutter.SentryFlutterPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.InternalSentrySdk: void lambda$updateSession$2(io.sentry.Session$State,boolean,java.util.concurrent.atomic.AtomicReference,io.sentry.SentryOptions,io.sentry.IScope)
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1: BufferCaptureStrategy$rotate$1(long,io.sentry.android.replay.capture.BufferCaptureStrategy,kotlin.jvm.internal.Ref$BooleanRef)
io.sentry.protocol.SentryTransaction: io.sentry.SpanStatus getStatus()
io.sentry.config.PropertiesProvider$-CC: java.lang.Boolean $default$getBooleanProperty(io.sentry.config.PropertiesProvider,java.lang.String)
io.sentry.SentryAppStartProfilingOptions: void setProfileSampled(boolean)
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize valueOf(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$1: BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2$1(kotlin.jvm.functions.Function0)
io.sentry.rrweb.RRWebSpanEvent$Deserializer: RRWebSpanEvent$Deserializer()
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.android.core.ANRWatchDog: ANRWatchDog(long,boolean,io.sentry.android.core.ANRWatchDog$ANRListener,io.sentry.ILogger,android.content.Context)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.sentry.SentryEnvelopeItemHeader$Deserializer: io.sentry.SentryEnvelopeItemHeader deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.protocol.SentryTransaction process(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.vendor.gson.stream.JsonReader: boolean isLiteral(char)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
io.sentry.TransactionPerformanceCollector: void start(io.sentry.ITransaction)
io.sentry.SentryEvent: void setExceptions(java.util.List)
io.sentry.SpanId: java.lang.String toString()
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
io.sentry.IScope: void setExtra(java.lang.String,java.lang.String)
io.sentry.NoOpScope: io.sentry.IScope clone()
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
io.sentry.util.SentryRandom$SentryRandomThreadLocal: SentryRandom$SentryRandomThreadLocal()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: void resize(int,int)
io.sentry.NoOpTransaction: io.sentry.ISpan startChild(java.lang.String,java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.android.core.ActivityFramesTracker getActivityFramesTracker()
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
io.sentry.protocol.App: boolean equals(java.lang.Object)
io.sentry.android.core.ActivityFramesTracker: ActivityFramesTracker(io.sentry.android.core.LoadClass,io.sentry.android.core.SentryAndroidOptions)
io.sentry.ISerializer: io.sentry.SentryEnvelope deserializeEnvelope(java.io.InputStream)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
io.sentry.cache.tape.EmptyObjectQueue: java.lang.Object peek()
io.sentry.util.TracingUtils: io.sentry.util.TracingUtils$TracingHeaders traceIfAllowed(io.sentry.IHub,java.lang.String,java.util.List,io.sentry.ISpan)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.sentry.protocol.SentryStackFrame: void setPlatform(java.lang.String)
io.sentry.internal.modules.NoOpModulesLoader: NoOpModulesLoader()
io.sentry.android.core.AndroidMemoryCollector: void setup()
io.sentry.metrics.GaugeMetric: void add(double)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.sentry.vendor.gson.stream.JsonReader: JsonReader(java.io.Reader)
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
io.sentry.protocol.SentryThread: java.util.Map getHeldLocks()
io.sentry.protocol.OperatingSystem: java.lang.String access$202(io.sentry.protocol.OperatingSystem,java.lang.String)
io.sentry.util.Platform: boolean isAndroid()
io.sentry.SentryReplayEvent$Deserializer: SentryReplayEvent$Deserializer()
io.sentry.ExternalOptions: java.lang.Double getTracesSampleRate()
io.sentry.flutter.SentryFlutter$updateOptions$4: void invoke(java.lang.String)
io.sentry.ISpan: void finish(io.sentry.SpanStatus)
io.sentry.flutter.SentryFlutter$updateOptions$1: void invoke(java.lang.String)
io.sentry.NoOpSerializer: void serialize(io.sentry.SentryEnvelope,java.io.OutputStream)
io.sentry.metrics.MetricsApi: void set(java.lang.String,java.lang.String,io.sentry.MeasurementUnit)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void sendState(io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState,boolean)
io.sentry.ExternalOptions: void setSendModules(java.lang.Boolean)
io.sentry.protocol.Mechanism: java.lang.String access$102(io.sentry.protocol.Mechanism,java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void finishTransaction(io.sentry.ITransaction,io.sentry.ISpan,io.sentry.ISpan)
io.sentry.android.core.ManifestMetadataReader: java.util.List readList(android.os.Bundle,io.sentry.ILogger,java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
io.sentry.protocol.Message: void setUnknown(java.util.Map)
io.sentry.SentryOptions: io.sentry.internal.modules.IModulesLoader getModulesLoader()
io.sentry.android.core.AnrV2Integration$ParseResult$Type: AnrV2Integration$ParseResult$Type(java.lang.String,int)
io.sentry.OutboxSender: boolean waitFlush(io.sentry.Hint)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
io.sentry.util.HintUtils: boolean hasType(io.sentry.Hint,java.lang.Class)
io.flutter.embedding.android.KeyboardMap$KeyPair: KeyboardMap$KeyPair(long,long)
io.flutter.embedding.android.FlutterFragment: void onDestroyView()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
io.sentry.android.replay.WindowSpy$decorViewClass$2: WindowSpy$decorViewClass$2()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
io.sentry.cache.PersistingScopeObserver: io.sentry.cache.tape.ObjectQueue lambda$new$0()
io.sentry.android.core.SentryAndroidOptions: long getAnrTimeoutIntervalMillis()
io.sentry.rrweb.RRWebMetaEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
io.sentry.protocol.Browser: void setUnknown(java.util.Map)
io.sentry.android.core.internal.util.ClassUtil: java.lang.String getClassName(java.lang.Object)
io.sentry.android.replay.ScreenshotRecorderConfig: float component4()
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView)
io.sentry.protocol.Gpu: void setName(java.lang.String)
io.sentry.cache.tape.FileObjectQueue$QueueFileIterator: FileObjectQueue$QueueFileIterator(io.sentry.cache.tape.FileObjectQueue,java.util.Iterator)
io.sentry.transport.QueuedThreadPoolExecutor: boolean isSchedulingAllowed()
io.sentry.NoOpTransaction: void scheduleFinish()
io.sentry.SentryClient: io.sentry.protocol.SentryId sendEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.internal.viewhierarchy.ViewHierarchyExporter: boolean export(io.sentry.protocol.ViewHierarchyNode,java.lang.Object)
io.sentry.android.replay.ScreenshotRecorderConfig: int getRecordingHeight()
androidx.fragment.app.Fragment: boolean getPopDirection()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
io.flutter.plugin.editing.TextEditingDelta: int getDeltaStart()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$700(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.SentryClient: void addScopeAttachmentsToHint(io.sentry.IScope,io.sentry.Hint)
io.sentry.protocol.Gpu: java.lang.String getVendorId()
io.sentry.android.core.cache.AndroidEnvelopeCache: AndroidEnvelopeCache(io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$2: java.lang.Object invoke()
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
io.sentry.protocol.Message: Message()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void installDeferredComponent(int,java.lang.String)
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: void reset()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.sentry.HubAdapter: void setTag(java.lang.String,java.lang.String)
io.sentry.android.replay.ReplayIntegration$rootViewsSpy$2: java.lang.Object invoke()
io.sentry.Session$JsonKeys: Session$JsonKeys()
io.sentry.android.core.ActivityLifecycleIntegration: boolean isPerformanceEnabled(io.sentry.android.core.SentryAndroidOptions)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
io.sentry.protocol.Request: void setEnvs(java.util.Map)
io.sentry.android.core.AppLifecycleIntegration: void close()
io.sentry.ISpan: io.sentry.SentryDate getFinishDate()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
io.sentry.metrics.MetricsHelper: java.lang.String sanitizeUnit(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy: BaseCaptureStrategy(io.sentry.SentryOptions,io.sentry.IHub,io.sentry.transport.ICurrentDateProvider,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.transport.NoOpEnvelopeCache: NoOpEnvelopeCache()
io.sentry.cache.tape.FileObjectQueue: void remove()
io.sentry.protocol.Browser: int hashCode()
io.sentry.protocol.Device: java.lang.Long access$1402(io.sentry.protocol.Device,java.lang.Long)
io.sentry.flutter.SentryFlutter$updateOptions$20: SentryFlutter$updateOptions$20(io.sentry.android.core.SentryAndroidOptions)
io.sentry.protocol.SdkVersion: java.lang.String getVersion()
io.flutter.embedding.engine.FlutterEngineGroupCache: boolean contains(java.lang.String)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter beginObject()
io.sentry.Span: boolean isNoOp()
io.sentry.rrweb.RRWebOptionsEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebOptionsEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.SentryFrameMetrics: long getTotalDurationNanos()
io.sentry.android.core.ActivityFramesTracker: void lambda$stop$2()
io.sentry.DefaultTransactionPerformanceCollector: void onSpanStarted(io.sentry.ISpan)
io.sentry.SentryOptions: java.lang.String getProfilingTracesDirPath()
io.flutter.embedding.android.KeyData$DeviceType: long getValue()
io.sentry.protocol.DebugImage$JsonKeys: DebugImage$JsonKeys()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.sentry.instrumentation.file.FileIOSpanManager: void finishSpan()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
io.sentry.transport.RateLimiter: void addRateLimitObserver(io.sentry.transport.RateLimiter$IRateLimitObserver)
io.sentry.ProfilingTraceData: void setDeviceOsVersion(java.lang.String)
io.sentry.protocol.Mechanism: Mechanism()
io.sentry.SentryClient: void flush(long)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
io.sentry.SpanContext: void setStatus(io.sentry.SpanStatus)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
io.sentry.android.ndk.NdkScopeObserver: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.cache.PersistingScopeObserver: void setBreadcrumbs(java.util.Collection)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
io.sentry.SpanOptions: void setTrimStart(boolean)
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$4: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
io.sentry.android.replay.capture.SessionCaptureStrategy$onConfigurationChanged$1: SessionCaptureStrategy$onConfigurationChanged$1(io.sentry.android.replay.capture.SessionCaptureStrategy)
io.sentry.HubAdapter: void withScope(io.sentry.ScopeCallback)
io.sentry.android.core.ContextUtils: android.content.pm.PackageInfo getPackageInfo(android.content.Context,int,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.Scope: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$2: java.lang.Object invoke()
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
io.sentry.android.core.AnrV2EventProcessor: void setExceptions(io.sentry.SentryEvent,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToBackground()
io.sentry.ShutdownHookIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterView$2: boolean deliverSelfNotifications()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
io.sentry.SentryThreadFactory: java.util.List getCurrentThread()
io.sentry.IHub: io.sentry.ISpan getSpan()
io.sentry.util.Random: double internalNextDouble(double,double)
io.sentry.rrweb.RRWebMetaEvent$Deserializer: RRWebMetaEvent$Deserializer()
io.sentry.transport.RateLimiter: io.sentry.SentryEnvelope filter(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.android.core.performance.AppStartMetrics: boolean isAppLaunchedInForeground()
io.sentry.MeasurementUnit$Duration: java.lang.String apiName()
io.sentry.Scope: java.util.Map getExtras()
io.sentry.SentryTracer: void scheduleDeadlineTimeout()
io.sentry.android.ndk.NativeScope: void removeTag(java.lang.String)
io.sentry.android.ndk.NativeModuleListLoader: NativeModuleListLoader()
io.sentry.SentryItemType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.dart.DartMessenger: void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void startBackGesture(android.window.BackEvent)
com.baseflow.permissionhandler.PermissionHandlerPlugin: PermissionHandlerPlugin()
io.sentry.protocol.Geo$JsonKeys: Geo$JsonKeys()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabledInNative(boolean)
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.sentry.SentryTracer: io.sentry.protocol.Contexts getContexts()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
io.sentry.SentryOptions$BeforeSendTransactionCallback: io.sentry.protocol.SentryTransaction execute(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.cache.tape.QueueFile: void add(byte[])
io.sentry.android.core.AnrIntegration: void reportANR(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.ApplicationNotResponding)
io.sentry.SentryOptions: java.lang.String getDist()
io.sentry.android.replay.ReplayState: ReplayState(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
io.sentry.HostnameCache: java.net.InetAddress lambda$new$0()
androidx.fragment.app.Fragment: boolean isAdded()
io.sentry.SentryLockReason: java.lang.String access$102(io.sentry.SentryLockReason,java.lang.String)
io.sentry.SpanId: boolean equals(java.lang.Object)
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1: java.lang.Object invoke(java.lang.Object)
io.sentry.vendor.gson.stream.JsonReader: boolean skipTo(java.lang.String)
io.sentry.ProfilingTraceData: java.util.Map getUnknown()
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$500(io.flutter.view.AccessibilityBridge)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.sentry.rrweb.RRWebInteractionMoveEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.plugin.editing.ScribePlugin: void setView(android.view.View)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
io.sentry.SentryTracer$FinishStatus: io.sentry.SentryTracer$FinishStatus notFinished()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.sentry.NoOpScope: void setScreen(java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs: FlutterActivityLaunchConfigs()
io.sentry.protocol.ViewHierarchyNode: java.lang.String getRenderingSystem()
io.sentry.SentryWrapper: java.lang.Object lambda$wrapCallable$0(io.sentry.IHub,java.util.concurrent.Callable)
io.sentry.util.JsonSerializationUtils: JsonSerializationUtils()
io.sentry.protocol.Request: java.util.Map getUnknown()
io.sentry.rrweb.RRWebSpanEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebSpanEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.DefaultTransactionPerformanceCollector: java.util.List access$000(io.sentry.DefaultTransactionPerformanceCollector)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void updateSystemUiOverlays()
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.sentry.android.core.AppState: io.sentry.android.core.AppState getInstance()
io.sentry.rrweb.RRWebMetaEvent: RRWebMetaEvent()
io.sentry.protocol.TransactionNameSource: java.lang.String apiName()
io.flutter.plugin.platform.PlatformViewsController: void access$000(io.flutter.plugin.platform.PlatformViewsController,int)
io.sentry.ObjectWriter: io.sentry.ObjectWriter name(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(java.lang.Boolean)
io.flutter.embedding.engine.plugins.PluginRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
io.sentry.ITransaction: java.lang.String getName()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter jsonValue(java.lang.String)
io.sentry.TracesSampler: io.sentry.util.Random getRandom()
io.sentry.protocol.SentrySpan: java.util.Map getUnknown()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: android.graphics.Rect getVisibleRect()
io.flutter.embedding.android.FlutterActivity: void setFrameworkHandlesBack(boolean)
io.sentry.IHub: void removeExtra(java.lang.String)
io.sentry.MeasurementUnit$Custom: MeasurementUnit$Custom(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture: boolean isDone()
io.sentry.SentryStackTraceFactory: java.util.List getInAppCallStack()
io.sentry.android.replay.LastSegmentData: io.sentry.android.replay.ReplayCache component2()
io.sentry.android.replay.WindowSpy: android.view.Window pullWindow(android.view.View)
io.sentry.protocol.SentrySpan: void setData(java.util.Map)
io.sentry.util.JsonSerializationUtils: java.util.List atomicIntegerArrayToList(java.util.concurrent.atomic.AtomicIntegerArray)
io.sentry.rrweb.RRWebMetaEvent: void setUnknown(java.util.Map)
io.sentry.android.replay.WindowManagerSpy$windowManagerClass$2: java.lang.Object invoke()
io.sentry.NoOpSpan: void setTag(java.lang.String,java.lang.String)
io.sentry.cache.CacheStrategy: io.sentry.Session getFirstSession(io.sentry.SentryEnvelope)
io.sentry.SentryEvent: io.sentry.SentryValues access$302(io.sentry.SentryEvent,io.sentry.SentryValues)
io.sentry.protocol.Geo: void setUnknown(java.util.Map)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: java.util.concurrent.ConcurrentLinkedQueue access$200(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue)
io.flutter.plugin.platform.PlatformViewsController: boolean access$700(io.flutter.plugin.platform.PlatformViewsController)
io.sentry.clientreport.ClientReportKey: boolean equals(java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
io.sentry.ObjectWriter: io.sentry.ObjectWriter beginObject()
io.sentry.metrics.MetricsApi: void gauge(java.lang.String,double,io.sentry.MeasurementUnit)
io.sentry.protocol.Mechanism: java.lang.String getHelpLink()
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: boolean registerNetworkCallback(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider,android.net.ConnectivityManager$NetworkCallback)
io.sentry.SentryClient: boolean sample()
io.sentry.rrweb.RRWebVideoEvent: void setDurationMs(long)
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
io.sentry.MeasurementUnit$Fraction: java.lang.String apiName()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: java.util.Map getUnknown()
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.sentry.SentryTracer: void finish(io.sentry.SpanStatus)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
io.sentry.transport.ReusableCountLatch: void increment()
io.sentry.TransactionContext: void setName(java.lang.String)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
io.sentry.android.ndk.NdkScopeObserver: void lambda$setTag$2(java.lang.String,java.lang.String)
io.sentry.TransactionContext: io.sentry.TracesSamplingDecision getParentSamplingDecision()
io.sentry.protocol.DebugImage$Deserializer: DebugImage$Deserializer()
io.sentry.transport.AsyncHttpTransport: void lambda$markHintWhenSendingFailed$2(io.sentry.hints.SubmissionResult)
io.sentry.protocol.SentryId: boolean equals(java.lang.Object)
io.sentry.protocol.Device: void setBootTime(java.util.Date)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
io.sentry.rrweb.RRWebMetaEvent: int access$202(io.sentry.rrweb.RRWebMetaEvent,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
io.sentry.protocol.SentrySpan: boolean isFinished()
io.sentry.SamplingContext: io.sentry.CustomSamplingContext getCustomSamplingContext()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$2000(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
io.sentry.protocol.Contexts: java.lang.Object toContextType(java.lang.String,java.lang.Class)
io.sentry.ExternalOptions: io.sentry.ExternalOptions from(io.sentry.config.PropertiesProvider,io.sentry.ILogger)
io.sentry.MainEventProcessor: void setDist(io.sentry.SentryBaseEvent)
io.sentry.Scope: io.sentry.Scope$SessionPair startSession()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
io.sentry.TransactionContext: void setParentSampled(java.lang.Boolean,java.lang.Boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
io.sentry.SentryOptions: io.sentry.FullyDisplayedReporter getFullyDisplayedReporter()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: EventChannel$IncomingStreamRequestHandler(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler)
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler: boolean isStylusHandwritingAvailable()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.sentry.util.JsonSerializationUtils: java.util.Map calendarToMap(java.util.Calendar)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
io.sentry.SentryClient: void finalizeTransaction(io.sentry.IScope,io.sentry.Hint)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugin.common.PluginRegistry$ActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
io.sentry.Hub: void withScope(io.sentry.ScopeCallback)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
io.sentry.util.LazyEvaluator: void setValue(java.lang.Object)
com.sanguinarypc.box_sensors.R$drawable: R$drawable()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
io.sentry.internal.gestures.UiElement: java.lang.Object getView()
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
io.sentry.SentryBaseEvent: void addBreadcrumb(io.sentry.Breadcrumb)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.sentry.android.core.AnrV2EventProcessor: io.sentry.protocol.Device getDevice()
io.sentry.android.replay.video.SimpleVideoEncoder: io.sentry.SentryOptions getOptions()
io.sentry.CheckIn: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.rrweb.RRWebMetaEvent$JsonKeys: RRWebMetaEvent$JsonKeys()
io.sentry.IScope: void clearSession()
io.sentry.flutter.SentryFlutter$updateOptions$11: java.lang.Object invoke(java.lang.Object)
io.sentry.Scope: void setContexts(java.lang.String,java.util.Collection)
io.sentry.instrumentation.file.SentryFileInputStream: io.sentry.instrumentation.file.FileInputStreamInitData access$000(java.io.File,java.io.FileInputStream,io.sentry.IHub)
io.sentry.android.core.ActivityLifecycleIntegration: void cancelTtfdAutoClose()
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$600(io.flutter.view.AccessibilityBridge)
com.sanguinarypc.box_sensors.MainActivity: MainActivity()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$applyScope$3(io.sentry.IScope,io.sentry.ITransaction,io.sentry.ITransaction)
io.sentry.android.replay.ScreenshotRecorder$maskingPaint$2: android.graphics.Paint invoke()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
io.sentry.Sentry: boolean isEnabled()
io.sentry.rrweb.RRWebIncrementalSnapshotEvent: void setSource(io.sentry.rrweb.RRWebIncrementalSnapshotEvent$IncrementalSource)
io.flutter.embedding.android.KeyData$Type: long getValue()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
io.sentry.android.core.EmptySecureContentProvider: EmptySecureContentProvider()
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
io.sentry.MainEventProcessor: MainEventProcessor(io.sentry.SentryOptions,io.sentry.SentryThreadFactory,io.sentry.SentryExceptionFactory)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
io.sentry.android.core.EnvelopeFileObserverIntegration: EnvelopeFileObserverIntegration()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int bmBondStateEnum(int)
androidx.fragment.app.Fragment: void setNextTransition(int)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onAttachedToContentProvider(io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding)
io.sentry.android.core.performance.ActivityLifecycleCallbacksAdapter: ActivityLifecycleCallbacksAdapter()
io.sentry.SynchronizedCollection: SynchronizedCollection(java.util.Collection,java.lang.Object)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
io.sentry.android.replay.capture.SessionCaptureStrategy: void stop()
io.sentry.ReplayRecording$JsonKeys: ReplayRecording$JsonKeys()
io.sentry.protocol.Message: java.util.List access$202(io.sentry.protocol.Message,java.util.List)
io.sentry.clientreport.AtomicClientReportStorage: AtomicClientReportStorage()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String,java.util.List,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean)
io.sentry.protocol.MetricSummary: int getCount()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List getDisplayFeatures()
io.sentry.SpanOptions: boolean isIdle()
io.sentry.SynchronizedQueue: java.util.Queue decorated()
io.sentry.NoOpSentryClient: boolean isEnabled()
io.sentry.NoOpScope: void clearAttachments()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
io.sentry.android.core.AnrV2Integration$AnrV2Hint: boolean shouldEnrich()
io.sentry.android.replay.RootViewsSpy$Companion$install$1$1$1: RootViewsSpy$Companion$install$1$1$1(io.sentry.android.replay.RootViewsSpy)
io.sentry.protocol.Device: java.lang.String[] getArchs()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
io.sentry.protocol.Request: java.lang.String access$802(io.sentry.protocol.Request,java.lang.String)
io.sentry.SentryOptions$Cron: void setDefaultFailureIssueThreshold(java.lang.Long)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$4: void onScanResult(int,android.bluetooth.le.ScanResult)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.sentry.transport.TransportResult$SuccessTransportResult: TransportResult$SuccessTransportResult()
io.sentry.Dsn: java.lang.String getProjectId()
io.sentry.rrweb.RRWebEvent: io.sentry.rrweb.RRWebEventType access$000(io.sentry.rrweb.RRWebEvent)
io.sentry.android.core.DeviceInfoUtil: java.lang.String getDeviceId()
io.sentry.EnvelopeReader: EnvelopeReader(io.sentry.ISerializer)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback access$202(io.flutter.view.VsyncWaiter,io.flutter.view.VsyncWaiter$FrameCallback)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion: kotlin.text.Regex getSnakecasePattern()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
io.flutter.plugin.platform.PlatformPlugin: void access$1100(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
io.sentry.rrweb.RRWebSpanEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.DebugMeta$JsonKeys: DebugMeta$JsonKeys()
io.sentry.android.core.AnrV2EventProcessor: void setBreadcrumbs(io.sentry.SentryBaseEvent)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(double)
io.flutter.plugin.common.ActivityLifecycleListener: void onPostResume()
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceDestroyed()
io.sentry.protocol.Device: java.lang.Float getScreenDensity()
io.flutter.embedding.android.FlutterView: void init()
io.sentry.NoOpHub: boolean isEnabled()
io.sentry.Span: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
io.sentry.SentryOptions: void setEnableTracing(java.lang.Boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
io.sentry.rrweb.RRWebBreadcrumbEvent: void setTag(java.lang.String)
io.sentry.flutter.SentryFlutterKt: void access$getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
io.sentry.rrweb.RRWebVideoEvent: java.lang.String getContainer()
io.sentry.android.core.DefaultAndroidEventProcessor: io.sentry.protocol.User getDefaultUser(android.content.Context)
io.sentry.ObjectReader: void nextUnknown(io.sentry.ILogger,java.util.Map,java.lang.String)
io.sentry.SentryTraceHeader: SentryTraceHeader(java.lang.String)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory: boolean hasValidPath(java.lang.String,io.sentry.ILogger)
io.sentry.android.replay.util.FixedWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$000(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.sentry.SentryBaseEvent: void setUser(io.sentry.protocol.User)
io.sentry.ProfilingTransactionData: void setTraceId(java.lang.String)
io.sentry.util.thread.NoOpMainThreadChecker: boolean isMainThread(long)
io.sentry.protocol.MetricSummary: void setUnknown(java.util.Map)
io.sentry.android.replay.util.ExecutorsKt: void scheduleAtFixedRateSafely$lambda$3(java.lang.Runnable,io.sentry.SentryOptions,java.lang.String)
io.sentry.transport.ProxyAuthenticator: java.lang.String getPassword()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
io.sentry.protocol.Request: Request(io.sentry.protocol.Request)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
io.sentry.Instrumenter: io.sentry.Instrumenter[] values()
io.sentry.protocol.Browser: java.util.Map getUnknown()
io.sentry.android.core.SentryLogcatAdapter: int w(java.lang.String,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
io.sentry.flutter.SentryFlutter$updateOptions$26: void invoke(int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
io.sentry.metrics.Metric: java.lang.String getKey()
io.sentry.android.core.AnrIntegration$AnrHint: java.lang.Long timestamp()
io.sentry.android.core.DefaultAndroidEventProcessor: void setPackageInfo(io.sentry.SentryBaseEvent,io.sentry.protocol.App)
io.sentry.RequestDetails: java.net.URL getUrl()
io.sentry.MonitorSchedule: java.lang.String getValue()
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
io.sentry.android.replay.util.FixedWindowCallback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String getCategory()
io.sentry.profilemeasurements.ProfileMeasurementValue: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.ndk.INativeScope: void removeTag(java.lang.String)
io.sentry.android.replay.util.ContextKt: android.content.Context appContext(android.content.Context)
io.sentry.android.core.AnrV2EventProcessor: void backfillScope(io.sentry.SentryEvent,java.lang.Object)
io.sentry.protocol.SentryStackFrame: java.lang.String getPlatform()
io.sentry.ISentryClient$-CC: boolean $default$isHealthy(io.sentry.ISentryClient)
io.sentry.android.replay.ReplayCache: io.sentry.android.replay.GeneratedVideo createVideoOf(long,long,int,int,int,int,int,java.io.File)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: androidx.lifecycle.Lifecycle getLifecycle()
io.sentry.SynchronizedQueue: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterFragment: void onViewCreated(android.view.View,android.os.Bundle)
io.sentry.NoOpHub: void pushScope()
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromMetrics$13(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
io.sentry.SentryOptions$Cron: void setDefaultMaxRuntime(java.lang.Long)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
io.sentry.MonitorContexts: java.lang.Object toContextType(java.lang.String,java.lang.Class)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.sentry.transport.AsyncHttpTransport: void close()
io.sentry.android.replay.WindowRecorder$onRootViewsChanged$1$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterImageView)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.sentry.transport.RateLimiter: void lambda$markHintWhenSendingFailed$0(io.sentry.hints.SubmissionResult)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
io.sentry.vendor.gson.stream.JsonReader: void beginObject()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
io.sentry.Hub: void close(boolean)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.sentry.MonitorConfig: java.lang.Long getMaxRuntime()
io.sentry.Breadcrumb: void setLevel(io.sentry.SentryLevel)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
io.sentry.cache.EnvelopeCache: void discard(io.sentry.SentryEnvelope)
io.sentry.Hint: void remove(java.lang.String)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
io.sentry.protocol.SentryStackFrame: java.util.Map getUnknown()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
io.sentry.vendor.Base64$Coder: Base64$Coder()
io.flutter.view.VsyncWaiter: void reset()
io.sentry.instrumentation.file.FileInputStreamInitData: FileInputStreamInitData(java.io.File,io.sentry.ISpan,java.io.FileInputStream,io.sentry.SentryOptions)
io.sentry.instrumentation.file.SentryFileInputStream$Factory: java.io.FileInputStream create(java.io.FileInputStream,java.io.File,io.sentry.IHub)
io.flutter.embedding.android.FlutterFragmentActivity: android.content.Intent createDefaultIntent(android.content.Context)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.sentry.SentryOptions: void setEnableAppStartProfiling(boolean)
io.sentry.ProfilingTraceData: java.util.Date getTimestamp()
io.sentry.protocol.Gpu: java.lang.String access$002(io.sentry.protocol.Gpu,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector$FrameMetricsCollectorListener: void onFrameMetricCollected(long,long,long,long,boolean,boolean,float)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromMetrics$12(io.sentry.metrics.EncodedMetrics)
io.sentry.rrweb.RRWebVideoEvent: java.lang.String getEncoding()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void enableBufferingIncomingMessages()
io.sentry.protocol.MetricSummary: MetricSummary()
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: boolean isViewScrollable(android.view.View,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
io.sentry.android.core.SentryLogcatAdapter: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
io.sentry.SpanId: int hashCode()
io.sentry.Sentry: void init(io.sentry.SentryOptions,boolean)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: java.lang.Object invoke()
io.sentry.SentryInstantDate: SentryInstantDate()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void cancelBackGesture()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.sentry.vendor.gson.stream.JsonReader: int peekKeyword()
io.sentry.flutter.SentryFlutterPlugin$setupReplay$2: io.sentry.android.replay.Recorder invoke()
io.sentry.SentryEnvelopeItem: byte[] lambda$fromCheckIn$9(io.sentry.ISerializer,io.sentry.CheckIn)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
io.sentry.SentryLevel$Deserializer: SentryLevel$Deserializer()
io.sentry.protocol.Response: java.util.Map access$102(io.sentry.protocol.Response,java.util.Map)
io.sentry.instrumentation.file.SentryFileOutputStream: io.sentry.instrumentation.file.FileOutputStreamInitData init(java.io.File,boolean,java.io.FileOutputStream,io.sentry.IHub)
io.sentry.JsonObjectReader: boolean hasNext()
io.sentry.PropagationContext: PropagationContext(io.sentry.protocol.SentryId,io.sentry.SpanId,io.sentry.SpanId,io.sentry.Baggage,java.lang.Boolean)
io.sentry.protocol.Geo: java.lang.String getCity()
io.flutter.plugin.platform.PlatformViewRenderTarget: long getId()
io.sentry.rrweb.RRWebVideoEvent: long access$302(io.sentry.rrweb.RRWebVideoEvent,long)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.sanguinarypc.box_sensors.R$style: R$style()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: AsyncHttpTransport$EnvelopeSender(io.sentry.transport.AsyncHttpTransport,io.sentry.SentryEnvelope,io.sentry.Hint,io.sentry.cache.IEnvelopeCache)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
io.sentry.Baggage: java.lang.String getEnvironment()
io.sentry.protocol.App: void setInForeground(java.lang.Boolean)
io.sentry.protocol.Device: java.lang.Double getProcessorFrequency()
io.flutter.embedding.engine.dart.DartMessenger: void disableBufferingIncomingMessages()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void disableBufferingIncomingMessages()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.sentry.SentryLockReason$Deserializer: SentryLockReason$Deserializer()
io.sentry.android.core.EmptySecureContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
io.sentry.IHub: io.sentry.ITransaction getTransaction()
io.sentry.transport.HttpConnection: java.net.HttpURLConnection createConnection()
io.sentry.android.core.AndroidTransactionProfiler: AndroidTransactionProfiler(android.content.Context,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.internal.util.SentryFrameMetricsCollector,io.sentry.ILogger,java.lang.String,boolean,int,io.sentry.ISentryExecutorService)
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayMask$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.platform.SingleViewWindowManager: boolean isCrossWindowBlurEnabled()
io.sentry.android.core.SentryFrameMetrics: long getSlowFrameDelayNanos()
io.sentry.Baggage: void freeze()
io.sentry.cache.IEnvelopeCache: void discard(io.sentry.SentryEnvelope)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.flutter.embedding.android.FlutterFragment: boolean shouldDelayFirstAndroidViewDraw()
io.sentry.protocol.SentryStackFrame: java.lang.String access$1302(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.Attachment: Attachment(java.lang.String,java.lang.String)
io.flutter.plugin.platform.SingleViewWindowManager: void removeView(android.view.View)
io.sentry.profilemeasurements.ProfileMeasurement$JsonKeys: ProfileMeasurement$JsonKeys()
io.sentry.config.PropertiesProvider: java.lang.Boolean getBooleanProperty(java.lang.String)
io.sentry.android.core.internal.gestures.SentryGestureListener: void applyScope(io.sentry.IScope,io.sentry.ITransaction)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
io.sentry.cache.PersistingScopeObserver: void serializeToDisk(java.lang.Runnable)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder dartEntrypointArgs(java.util.List)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
io.sentry.android.replay.util.FixedWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.clientreport.DiscardedEvent$Deserializer: DiscardedEvent$Deserializer()
io.sentry.protocol.Browser$Deserializer: io.sentry.protocol.Browser deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$flush$5(io.sentry.hints.Retryable)
io.sentry.android.core.BuildInfoProvider: int getSdkInfoVersion()
io.sentry.NoOpScope: void setContexts(java.lang.String,java.lang.Boolean)
io.sentry.Breadcrumb: java.lang.String access$302(io.sentry.Breadcrumb,java.lang.String)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
io.sentry.android.core.internal.util.CpuInfoUtils: void clear()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.sentry.flutter.SentryFlutter$updateOptions$13: void invoke(int)
io.sentry.cache.PersistingOptionsObserver: void setProguardUuid(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
io.sentry.android.core.SentryLogcatAdapter: void addAsBreadcrumb(java.lang.String,io.sentry.SentryLevel,java.lang.Throwable)
io.sentry.android.replay.ScreenshotRecorderConfig: int hashCode()
io.sentry.transport.StdoutTransport: void flush(long)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
io.sentry.hints.BlockingFlushHint: boolean waitFlush()
io.sentry.rrweb.RRWebInteractionMoveEvent: void setUnknown(java.util.Map)
io.sentry.NoOpScope: java.util.List getFingerprint()
io.sentry.android.replay.GeneratedVideo: int hashCode()
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
io.sentry.PropagationContext: PropagationContext(io.sentry.PropagationContext)
io.sentry.IScope: void removeTag(java.lang.String)
io.sentry.cache.EnvelopeCache: void writeEnvelopeToDisk(java.io.File,io.sentry.SentryEnvelope)
io.sentry.flutter.SentryFlutter$updateOptions$4: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.DateUtils: java.util.Date nanosToDate(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel)
io.sentry.android.core.NetworkBreadcrumbsIntegration$1: NetworkBreadcrumbsIntegration$1(io.sentry.android.core.NetworkBreadcrumbsIntegration,io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.plugin.platform.PlatformView: void dispose()
io.sentry.NoOpTransactionProfiler: NoOpTransactionProfiler()
io.sentry.ISpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.sentry.internal.debugmeta.NoOpDebugMetaLoader: io.sentry.internal.debugmeta.NoOpDebugMetaLoader getInstance()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.sentry.rrweb.RRWebSpanEvent: void setPayloadUnknown(java.util.Map)
io.sentry.android.replay.util.TextLayout: int getLineStart(int)
io.sentry.android.core.AndroidProfiler: java.util.ArrayDeque access$100(io.sentry.android.core.AndroidProfiler)
io.sentry.protocol.SentryTransaction: void setMetricSummaries(java.util.Map)
io.sentry.NoOpSpan: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.sentry.CircularFifoQueue: int access$300(io.sentry.CircularFifoQueue,int)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean addAll(java.util.Collection)
io.sentry.JsonReflectionObjectSerializer: java.lang.Object serialize(java.lang.Object,io.sentry.ILogger)
io.sentry.rrweb.RRWebInteractionMoveEvent$Deserializer: io.sentry.rrweb.RRWebInteractionMoveEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.performance.AppStartMetrics: void onContentProviderCreate(android.content.ContentProvider)
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
io.sentry.android.replay.capture.BufferCaptureStrategy$pause$1: java.lang.Object invoke(java.lang.Object)
io.sentry.IHub: io.sentry.SentryTraceHeader traceHeaders()
io.sentry.SentryRuntimeEventProcessor: SentryRuntimeEventProcessor()
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String checkTimestamp(java.io.File,android.content.pm.PackageManager,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
io.sentry.SentryOptions: io.sentry.cache.PersistingScopeObserver findPersistingScopeObserver()
io.sentry.CircularFifoQueue: CircularFifoQueue(int)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
androidx.fragment.app.Fragment: boolean isDetached()
io.sentry.ProfilingTraceData: java.util.Map getMeasurementsMap()
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.flutter.SentryFlutter$updateOptions$14: void invoke(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
io.sentry.protocol.SentryThread: java.lang.Boolean access$702(io.sentry.protocol.SentryThread,java.lang.Boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$600(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void setDirection(int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2502(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
io.sentry.android.replay.LastSegmentData: java.util.List getEvents()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$GenericViewHierarchyNode: ViewHierarchyNode$GenericViewHierarchyNode(float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.ObjectReader: void endObject()
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.rrweb.RRWebVideoEvent: void setContainer(java.lang.String)
io.sentry.SentryItemType$Deserializer: SentryItemType$Deserializer()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1: BaseCaptureStrategy$persistableAtomicNullable$2$setValue$1(kotlin.jvm.functions.Function3,java.lang.String,java.lang.Object,java.lang.Object)
io.sentry.protocol.App: java.lang.String getDeviceAppHash()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
io.sentry.protocol.SdkInfo: void setSdkName(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
io.sentry.TraceContext: java.lang.String getUserId()
io.sentry.android.replay.ReplayCache: java.util.List getFrames$sentry_android_replay_release()
io.sentry.TraceContext$TraceContextUser: TraceContext$TraceContextUser(java.lang.String,java.lang.String)
io.sentry.internal.modules.CompositeModulesLoader: java.util.Map loadModules()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.sentry.android.core.performance.TimeSpan: long getStartTimestampMs()
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
io.sentry.SentryOptions: java.util.List getIgnoredCheckIns()
io.sentry.instrumentation.file.SentryFileOutputStream: java.lang.Integer lambda$write$0(int)
io.sentry.android.core.AnrV2EventProcessor: io.sentry.protocol.SentryThread findMainThread(java.util.List)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: FlutterBluePlusPlugin$5(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.Baggage: void setPublicKey(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback getBeforeScreenshotCaptureCallback()
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
io.sentry.CustomSamplingContext: CustomSamplingContext()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.protocol.SentryThread: io.sentry.protocol.SentryStackTrace access$802(io.sentry.protocol.SentryThread,io.sentry.protocol.SentryStackTrace)
io.sentry.android.replay.gestures.GestureRecorder: void stopGestureTracking(android.view.View)
io.flutter.embedding.engine.plugins.PluginRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
io.sentry.SentryOptions: void setSessionFlushTimeoutMillis(long)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $values()
io.sentry.android.replay.util.TextAttributes: io.sentry.android.replay.util.TextAttributes copy-fRWUv9g(androidx.compose.ui.graphics.Color,boolean)
io.sentry.instrumentation.file.SentryFileInputStream: java.io.FileDescriptor getFileDescriptor(java.io.FileInputStream)
io.sentry.SentryBaseEvent: io.sentry.protocol.Contexts access$100(io.sentry.SentryBaseEvent)
io.sentry.android.replay.ScreenshotRecorder: android.graphics.Paint access$getMaskingPaint(io.sentry.android.replay.ScreenshotRecorder)
io.sentry.CircularFifoQueue: java.lang.Object get(int)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
io.sentry.ScopeObserverAdapter: void setRequest(io.sentry.protocol.Request)
io.sentry.Hub: io.sentry.IMetricsAggregator getMetricsAggregator()
io.sentry.IScope: io.sentry.Scope$SessionPair startSession()
io.flutter.embedding.android.FlutterActivity: void onPause()
io.sentry.SentryTracer: io.sentry.ISpan createChild(io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.flutter.plugin.text.ProcessTextPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.sentry.CircularFifoQueue: CircularFifoQueue(java.util.Collection)
io.sentry.NoOpHub: void removeExtra(java.lang.String)
io.sentry.protocol.Request: java.lang.String getCookies()
androidx.fragment.app.FragmentActivity: void onPause()
io.sentry.android.replay.capture.CaptureStrategy: void setSegmentTimestamp(java.util.Date)
io.sentry.protocol.Device: void setFreeStorage(java.lang.Long)
io.sentry.rrweb.RRWebSpanEvent: void setEndTimestamp(double)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder withNewEngine()
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
io.sentry.android.replay.util.TextAttributes: java.lang.String toString()
io.sentry.Hub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel,io.sentry.ScopeCallback)
io.sentry.IScope: io.sentry.protocol.User getUser()
io.sentry.JsonObjectReader: java.lang.Float nextFloatOrNull()
io.sentry.SentryLevel: SentryLevel(java.lang.String,int)
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.SentryLevel)
io.sentry.android.replay.R$id: R$id()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.sentry.DataCategory: io.sentry.DataCategory valueOf(java.lang.String)
io.sentry.rrweb.RRWebEventType: io.sentry.rrweb.RRWebEventType valueOf(java.lang.String)
io.sentry.transport.TransportResult: TransportResult(io.sentry.transport.TransportResult$1)
io.sentry.internal.modules.ManifestModulesLoader$Module: ManifestModulesLoader$Module(java.lang.String,java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: io.sentry.ISpan getAppStartSpan()
io.sentry.rrweb.RRWebEvent: long access$102(io.sentry.rrweb.RRWebEvent,long)
io.sentry.protocol.SentrySpan$Deserializer: java.lang.Exception missingRequiredFieldException(java.lang.String,io.sentry.ILogger)
io.sentry.android.replay.ReplayIntegration$random$2: java.lang.Object invoke()
io.sentry.SentryReplayEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.fragment.app.Fragment: void performResume()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$runInBackground$1: void run()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
io.sentry.vendor.gson.stream.JsonReader: java.lang.String locationString()
io.sentry.android.core.SentryAndroidDateProvider: SentryAndroidDateProvider()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.sentry.MonitorConfig: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.internal.gestures.SentryWindowCallback: SentryWindowCallback(android.view.Window$Callback,androidx.core.view.GestureDetectorCompat,io.sentry.android.core.internal.gestures.SentryGestureListener,io.sentry.SentryOptions,io.sentry.android.core.internal.gestures.SentryWindowCallback$MotionEventObtainer)
io.sentry.Sentry: io.sentry.ITransaction startTransaction(java.lang.String,java.lang.String,io.sentry.TransactionOptions)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context)
io.sentry.util.UrlUtils: io.sentry.util.UrlUtils$UrlDetails parseNullable(java.lang.String)
io.sentry.android.core.SentryPerformanceProvider: java.lang.String getType(android.net.Uri)
io.sentry.instrumentation.file.FileIOSpanManager: io.sentry.ISpan startSpan(io.sentry.IHub,java.lang.String)
io.sentry.SentryOptions: long getSessionFlushTimeoutMillis()
io.sentry.Hub: io.sentry.ISpan startSpanForMetric(java.lang.String,java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap getTtidSpanMap()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
io.sentry.SpanStatus: io.sentry.SpanStatus valueOf(java.lang.String)
io.sentry.Scope: io.sentry.protocol.Contexts getContexts()
io.sentry.metrics.MetricsApi: void set(java.lang.String,int,io.sentry.MeasurementUnit)
io.sentry.SpanContext: void setSampled(java.lang.Boolean)
io.sentry.android.replay.GeneratedVideo: java.io.File getVideo()
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(io.flutter.embedding.engine.FlutterEngineGroup$Options)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onAttachedToWindow()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver: SystemEventsBreadcrumbsIntegration$SystemEventsBroadcastReceiver(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.sentry.android.core.internal.threaddump.ThreadDumpParser: io.sentry.protocol.SentryStackTrace parseStacktrace(io.sentry.android.core.internal.threaddump.Lines,io.sentry.protocol.SentryThread)
io.sentry.Breadcrumb: void setOrigin(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.sentry.android.ndk.NativeScope: void setTag(java.lang.String,java.lang.String)
io.sentry.IScope: void withTransaction(io.sentry.Scope$IWithTransaction)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToForeground()
io.flutter.view.AccessibilityBridge: void reset()
io.sentry.Span: io.sentry.ISpan startChild(java.lang.String,java.lang.String)
io.sentry.SentryLockReason: void setClassName(java.lang.String)
io.sentry.android.core.DefaultAndroidEventProcessor: void fixExceptionOrder(io.sentry.SentryEvent)
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: boolean isSuccess()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
io.sentry.protocol.SentryId: SentryId()
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.replay.ScreenshotRecorderConfig access$getReplayConfig$p(io.sentry.flutter.SentryFlutterPlugin)
io.sentry.Hub: io.sentry.IScope buildLocalScope(io.sentry.IScope,io.sentry.ScopeCallback)
io.sentry.android.core.LifecycleWatcher: void scheduleEndSession()
io.sentry.util.Random: Random(long)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
io.sentry.protocol.SentrySpan: io.sentry.protocol.SentryId getTraceId()
io.sentry.Sentry: void setTransaction(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
io.sentry.profilemeasurements.ProfileMeasurement: int hashCode()
io.sentry.SendFireAndForgetOutboxSender: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget create(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.rrweb.RRWebMetaEvent: void setDataUnknown(java.util.Map)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureEvent(io.sentry.IHub,io.sentry.SentryEvent)
io.sentry.android.core.performance.TimeSpan: boolean hasStarted()
io.sentry.MetricsAggregator: int getBucketWeight(java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $values()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.sentry.internal.modules.IModulesLoader: java.util.Map getOrLoadModules()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: io.sentry.android.core.performance.TimeSpan getOnCreate()
io.sentry.SentryBaseEvent: java.lang.String access$702(io.sentry.SentryBaseEvent,java.lang.String)
io.sentry.IMetricsAggregator: void gauge(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.Baggage: Baggage(io.sentry.Baggage)
io.sentry.SentryEvent: java.lang.String getTransaction()
io.sentry.android.replay.util.TextLayout: java.lang.Integer getDominantTextColor()
io.sentry.android.replay.SentryReplayModifiers: androidx.compose.ui.semantics.SemanticsPropertyKey getSentryPrivacy()
io.sentry.Scope: java.util.List getEventProcessors()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $values()
io.sentry.SentryOptions: java.lang.Double getTracesSampleRate()
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
io.sentry.IHub: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.ScopeCallback)
io.sentry.Session: int errorCount()
io.sentry.SentryTracer: io.sentry.SpanContext getSpanContext()
io.sentry.android.core.MainLooperHandler: java.lang.Thread getThread()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.sentry.cache.CacheStrategy: io.sentry.ISerializer lambda$new$0()
io.sentry.TraceContext$TraceContextUser$JsonKeys: TraceContext$TraceContextUser$JsonKeys()
io.sentry.NoOpSpan: NoOpSpan()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.sentry.util.StringUtils: int countOf(java.lang.String,char)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
io.sentry.transport.TransportResult$ErrorTransportResult: int getResponseCode()
io.sentry.android.core.internal.util.RootChecker: boolean checkRootPackages(io.sentry.ILogger)
io.sentry.MonitorConfig: void setUnknown(java.util.Map)
io.sentry.util.DebugMetaPropertiesApplier: void applyToOptions(io.sentry.SentryOptions,java.util.List)
io.sentry.protocol.SentryRuntime: void setUnknown(java.util.Map)
io.sentry.MonitorScheduleType: MonitorScheduleType(java.lang.String,int)
io.sentry.metrics.GaugeMetric: int getWeight()
io.sentry.flutter.SentryFlutter$updateOptions$6: SentryFlutter$updateOptions$6(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryItemType: io.sentry.SentryItemType[] values()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: io.sentry.android.core.internal.gestures.SentryGestureListener$GestureType access$200(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState)
io.sentry.NoOpScope: void setContexts(java.lang.String,java.util.Collection)
io.flutter.plugin.platform.SingleViewWindowManager: android.view.WindowMetrics getCurrentWindowMetrics()
io.sentry.cache.tape.QueueFile$Builder: io.sentry.cache.tape.QueueFile$Builder size(int)
io.sentry.android.replay.capture.CaptureStrategy: java.io.File getReplayCacheDir()
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: EnvelopeFileObserver$CachedEnvelopeHint(long,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformView$-CC: void $default$onInputConnectionUnlocked(io.flutter.plugin.platform.PlatformView)
io.sentry.UserFeedback$JsonKeys: UserFeedback$JsonKeys()
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
io.sentry.android.replay.RootViewsSpy$listeners$1: boolean remove(java.lang.Object)
io.sentry.NoOpHub: java.lang.Boolean isCrashedLastRun()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onSaveInstanceState(android.os.Bundle)
io.sentry.SentryCrashLastRunState: void reset()
io.flutter.embedding.engine.FlutterEngineGroup$1: void onPreEngineRestart()
io.sentry.util.JsonSerializationUtils: byte[] bytesFrom(io.sentry.ISerializer,io.sentry.ILogger,io.sentry.JsonSerializable)
io.sentry.android.core.ANRWatchDog: void run()
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: void dispatch(java.lang.Runnable)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setDisplayMetrics(android.util.DisplayMetrics)
io.sentry.protocol.User: java.lang.String getIpAddress()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void ensurePermissions(java.util.List,com.lib.flutter_blue_plus.FlutterBluePlusPlugin$OperationOnPermission)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: int compareTo(java.lang.Object)
io.flutter.embedding.android.KeyboardMap$2: KeyboardMap$2()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.ScopeObserverAdapter: void setFingerprint(java.util.Collection)
io.sentry.protocol.Contexts: void setBrowser(io.sentry.protocol.Browser)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
io.sentry.transport.TransportResult$SuccessTransportResult: int getResponseCode()
io.sentry.android.replay.video.MuxerConfig: void setRecordingHeight(int)
io.sentry.transport.AsyncHttpTransport: void flush(long)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
io.sentry.android.core.SentryLogcatAdapter: void addAsBreadcrumb(java.lang.String,io.sentry.SentryLevel,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.sentry.NoOpScope: io.sentry.Session endSession()
io.sentry.android.replay.ScreenshotRecorder: void capture$lambda$2$lambda$1$lambda$0(io.sentry.android.replay.ScreenshotRecorder,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.sentry.rrweb.RRWebBreadcrumbEvent$Deserializer: RRWebBreadcrumbEvent$Deserializer()
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
io.sentry.android.core.LifecycleWatcher: java.util.TimerTask getTimerTask()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
io.sentry.transport.AsyncHttpTransport: io.sentry.SentryOptions access$200(io.sentry.transport.AsyncHttpTransport)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
io.flutter.embedding.android.KeyEmbedderResponder: KeyEmbedderResponder(io.flutter.plugin.common.BinaryMessenger)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onWindowFocusChanged(boolean)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: float getX()
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
io.sentry.android.core.DefaultAndroidEventProcessor: void mergeUser(io.sentry.SentryBaseEvent)
io.sentry.ISpan: void setMeasurement(java.lang.String,java.lang.Number,io.sentry.MeasurementUnit)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $values()
io.sentry.TransactionOptions: void setCustomSamplingContext(io.sentry.CustomSamplingContext)
io.sentry.util.HintUtils: void runIfHasType(io.sentry.Hint,java.lang.Class,io.sentry.util.HintUtils$SentryConsumer,io.sentry.util.HintUtils$SentryHintFallback)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$1: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.sentry.SentryOptions: int getReadTimeoutMillis()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.sentry.Scope: void setReplayId(io.sentry.protocol.SentryId)
io.sentry.android.core.NetworkBreadcrumbsIntegration: io.sentry.ILogger access$400(io.sentry.android.core.NetworkBreadcrumbsIntegration)
io.sentry.ExternalOptions: void setIdleTimeout(java.lang.Long)
io.sentry.vendor.gson.stream.JsonWriter: void replaceTop(int)
io.sentry.protocol.SentryStackFrame: java.lang.String getPackage()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.sentry.SentryTraceHeader: io.sentry.SpanId getSpanId()
io.sentry.SentryOptions: void setEnableScreenTracking(boolean)
io.sentry.SynchronizedCollection: int size()
io.sentry.metrics.DistributionMetric: int getWeight()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.sentry.SpanContext: void setTag(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
io.sentry.SentryEvent: SentryEvent(io.sentry.protocol.SentryId,java.util.Date)
io.sentry.util.UrlUtils: UrlUtils()
io.sentry.flutter.SentryFlutter$updateOptions$9: SentryFlutter$updateOptions$9(io.sentry.android.core.SentryAndroidOptions)
io.sentry.IMetricsAggregator: void set(java.lang.String,int,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.android.replay.ReplayIntegration: void onScreenshotRecorded$lambda$0(kotlin.jvm.internal.Ref$ObjectRef,io.sentry.IScope)
io.sentry.transport.ICurrentDateProvider: long getCurrentTimeMillis()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder initialRoute(java.lang.String)
io.sentry.Sentry: io.sentry.protocol.SentryId captureMessage(java.lang.String,io.sentry.ScopeCallback)
io.sentry.SynchronizedCollection: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
io.sentry.SentryTracer: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate)
io.sentry.DateUtils: java.lang.String getTimestamp(java.util.Date)
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromUserFeedback(io.sentry.ISerializer,io.sentry.UserFeedback)
io.sentry.protocol.Device: java.lang.Long getFreeMemory()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.fragment.app.FragmentActivity: void onStart()
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
io.sentry.ISpan: void setTag(java.lang.String,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$300(io.flutter.embedding.engine.loader.FlutterLoader)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
io.sentry.android.replay.RootViewsSpy$listeners$1: int size()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
io.sentry.android.core.AnrIntegration: void close()
io.sentry.clientreport.DiscardedEvent: void setUnknown(java.util.Map)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
io.sentry.SentryExecutorService: SentryExecutorService(java.util.concurrent.ScheduledExecutorService)
io.sentry.android.core.AndroidProfiler$ProfileStartData: AndroidProfiler$ProfileStartData(long,long,java.util.Date)
io.sentry.ISerializer: java.lang.String serialize(java.util.Map)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $values()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
io.sentry.protocol.Device: io.sentry.protocol.Device$DeviceOrientation access$1002(io.sentry.protocol.Device,io.sentry.protocol.Device$DeviceOrientation)
io.sentry.android.core.AndroidCpuCollector: AndroidCpuCollector(io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.Sentry: void configureScope(io.sentry.ScopeCallback)
io.sentry.TraceContext: io.sentry.protocol.SentryId getReplayId()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.sentry.SentryEvent: SentryEvent(java.lang.Throwable)
io.sentry.util.thread.NoOpMainThreadChecker: boolean isMainThread(java.lang.Thread)
io.sentry.IHub: void addBreadcrumb(io.sentry.Breadcrumb)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder getClientReportRecorder()
io.sentry.instrumentation.file.SentryFileInputStream: long skip(long)
io.sentry.android.core.NetworkBreadcrumbsIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: boolean extractAPK(java.io.File)
io.sentry.protocol.App$Deserializer: io.sentry.protocol.App deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.Attachment: Attachment(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)
androidx.fragment.app.Fragment: void performDestroy()
io.sentry.JsonObjectReader: java.lang.String nextName()
io.sentry.android.replay.util.PersistableLinkedList: boolean contains(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.sentry.Hint: java.util.List getAttachments()
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.lang.Long getLong(java.util.regex.Matcher,int,java.lang.Long)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.sentry.cache.tape.FileObjectQueue: void remove(int)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: long getId()
io.sentry.rrweb.RRWebOptionsEvent: void setUnknown(java.util.Map)
io.sentry.Sentry: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.protocol.App: java.lang.String getAppName()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.sentry.profilemeasurements.ProfileMeasurement: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
io.sentry.ProfilingTransactionData: java.lang.Long access$402(io.sentry.ProfilingTransactionData,java.lang.Long)
io.sentry.SentryEvent: java.util.List getThreads()
io.sentry.DateUtils: long millisToNanos(long)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
io.sentry.protocol.ViewHierarchy: java.util.Map getUnknown()
io.sentry.protocol.Mechanism: java.lang.String getDescription()
io.sentry.SentryReplayOptions$SentryReplayQuality: java.lang.String serializedName()
io.sentry.IConnectionStatusProvider$ConnectionStatus: io.sentry.IConnectionStatusProvider$ConnectionStatus[] values()
io.sentry.android.core.SentryAndroidOptions: void setNativeSdkName(java.lang.String)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
io.sentry.ReplayRecording: boolean equals(java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.sentry.util.MapObjectReader: void setLenient(boolean)
io.sentry.android.core.DeviceInfoUtil: io.sentry.android.core.ContextUtils$SideLoadedInfo getSideLoadedInfo()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$1: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$1(kotlin.jvm.functions.Function0)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: android.net.ConnectivityManager getConnectivityManager(android.content.Context,io.sentry.ILogger)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
io.sentry.Sentry: void addBreadcrumb(java.lang.String,java.lang.String)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.concurrent.Semaphore access$1600(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent,android.content.Context)
io.sentry.cache.tape.FileObjectQueue: java.lang.String toString()
io.sentry.NoOpTransaction: io.sentry.Span getLatestActiveSpan()
io.sentry.Span: void setDescription(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler: boolean isFeatureAvailable()
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: android.view.View removeAt(int)
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
io.sentry.android.core.LifecycleWatcher$1: LifecycleWatcher$1(io.sentry.android.core.LifecycleWatcher)
io.flutter.embedding.android.FlutterFragment: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context,int,int,io.flutter.plugin.platform.AccessibilityEventsDelegate)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.sentry.IHub: void captureUserFeedback(io.sentry.UserFeedback)
io.flutter.embedding.android.FlutterActivity: void onStart()
io.sentry.TraceContext$TraceContextUser$Deserializer: TraceContext$TraceContextUser$Deserializer()
io.sentry.android.replay.ReplayState: io.sentry.android.replay.ReplayState[] $values()
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
io.sentry.SentryTracer: void lambda$createChild$3(io.sentry.Span)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldDestroyEngineWithHost()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int bmAdapterStateEnum(int)
io.sentry.DirectoryProcessor: DirectoryProcessor(io.sentry.IHub,io.sentry.ILogger,long,int)
io.sentry.android.replay.ReplayCache$ongoingSegmentFile$2: ReplayCache$ongoingSegmentFile$2(io.sentry.android.replay.ReplayCache)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
io.sentry.SentryEvent: void setMessage(io.sentry.protocol.Message)
io.sentry.CircularFifoQueue$1: CircularFifoQueue$1(io.sentry.CircularFifoQueue)
io.sentry.android.replay.capture.BufferCaptureStrategy$Companion: BufferCaptureStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.Baggage: io.sentry.Baggage fromHeader(java.util.List)
io.sentry.TransactionOptions: java.lang.Long getDeadlineTimeout()
io.sentry.vendor.gson.stream.JsonReader: void close()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
io.sentry.android.replay.ScreenshotRecorderConfig: int component1()
io.sentry.instrumentation.file.SentryFileReader: SentryFileReader(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$setupReplay$1: SentryFlutterPlugin$setupReplay$1()
io.sentry.ProfilingTraceData: void setTransactionId(java.lang.String)
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onPreEngineRestart()
io.sentry.util.SentryRandom: SentryRandom()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
io.sentry.SpanId$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet)
io.sentry.Span: java.lang.Boolean isSampled()
io.sentry.TraceContext: java.lang.String getEnvironment()
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
io.sentry.rrweb.RRWebVideoEvent: int access$102(io.sentry.rrweb.RRWebVideoEvent,int)
io.sentry.backpressure.NoOpBackpressureMonitor: NoOpBackpressureMonitor()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.ISentryClient,io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.IScope,io.sentry.Hint)
io.sentry.IScope: java.lang.String getTransactionName()
io.sentry.android.replay.capture.SessionCaptureStrategy: SessionCaptureStrategy(io.sentry.SentryOptions,io.sentry.IHub,io.sentry.transport.ICurrentDateProvider,java.util.concurrent.ScheduledExecutorService,kotlin.jvm.functions.Function1)
io.sentry.android.replay.ReplayIntegration: void setBreadcrumbConverter(io.sentry.ReplayBreadcrumbConverter)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean filterKeywords(java.util.List,java.lang.String)
io.sentry.JsonObjectDeserializer$TokenArray: java.lang.Object getValue()
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
io.sentry.transport.HttpConnection: io.sentry.transport.TransportResult send(io.sentry.SentryEnvelope)
io.sentry.NoOpSpan: io.sentry.TraceContext traceContext()
io.flutter.plugin.common.EventChannel$EventSink: void error(java.lang.String,java.lang.String,java.lang.Object)
io.sentry.SentryClient: java.util.List filterForTransaction(java.util.List)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterEngineGroupCache: io.flutter.embedding.engine.FlutterEngineGroupCache getInstance()
io.sentry.NoOpHub: io.sentry.protocol.SentryId getLastEventId()
io.sentry.IHub: void pushScope()
io.sentry.ISpan: io.sentry.BaggageHeader toBaggageHeader(java.util.List)
io.sentry.protocol.SentryException: void setType(java.lang.String)
io.sentry.SentryOptions: void setTransportGate(io.sentry.transport.ITransportGate)
io.sentry.ProfilingTraceData: java.lang.String access$2102(io.sentry.ProfilingTraceData,java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
io.sentry.UncaughtExceptionHandler$Adapter: io.sentry.UncaughtExceptionHandler getInstance()
io.sentry.TransactionOptions: boolean isBindToScope()
io.flutter.plugin.platform.PlatformViewRenderTarget: void scheduleFrame()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$3$1: void run()
io.sentry.transport.ReusableCountLatch: void decrement()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
io.sentry.android.replay.capture.BufferCaptureStrategy$onConfigurationChanged$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
io.sentry.Breadcrumb: java.util.Map getData()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.sentry.cache.CacheUtils: java.io.File ensureCacheDir(io.sentry.SentryOptions,java.lang.String)
io.sentry.util.Random: long seedUniquifier()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.sentry.protocol.SentryRuntime: java.lang.String getRawDescription()
io.sentry.rrweb.RRWebVideoEvent: int access$702(io.sentry.rrweb.RRWebVideoEvent,int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
io.sentry.android.core.internal.util.BreadcrumbFactory: io.sentry.Breadcrumb forSession(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: void runInBackground(kotlin.jvm.functions.Function0)
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(java.io.FileDescriptor,io.sentry.IHub)
io.sentry.android.core.performance.AppStartMetrics: void onApplicationCreate(android.app.Application)
io.sentry.util.CollectionUtils: java.util.List newArrayList(java.util.List)
io.sentry.profilemeasurements.ProfileMeasurement: void setUnit(java.lang.String)
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: AndroidViewGestureTargetLocator(boolean)
io.sentry.cache.PersistingScopeObserver: void setReplayId(io.sentry.protocol.SentryId)
io.sentry.SentryReplayOptions: void setQuality(io.sentry.SentryReplayOptions$SentryReplayQuality)
io.sentry.ProfilingTraceData: java.lang.String access$2602(io.sentry.ProfilingTraceData,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $values()
io.sentry.android.replay.capture.BufferCaptureStrategy: java.util.List access$getBufferedSegments$p(io.sentry.android.replay.capture.BufferCaptureStrategy)
io.sentry.cache.tape.QueueFile: java.lang.String toString()
io.flutter.embedding.android.KeyEmbedderResponder: boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.sentry.android.core.AnrIntegration: io.sentry.android.core.ANRWatchDog getANRWatchDog()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.sentry.ILogger: void log(io.sentry.SentryLevel,java.lang.Throwable,java.lang.String,java.lang.Object[])
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
io.sentry.transport.NoOpEnvelopeCache: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
io.sentry.protocol.SentryThread: void setState(java.lang.String)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.sentry.protocol.Response: Response(io.sentry.protocol.Response)
io.sentry.android.core.internal.util.FirstDrawDoneListener: FirstDrawDoneListener(android.view.View,java.lang.Runnable)
io.sentry.IScope: void setContexts(java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.sentry.NoOpSpan: io.sentry.SentryTraceHeader toSentryTrace()
io.sentry.JsonObjectReader: java.lang.String nextStringOrNull()
io.sentry.instrumentation.file.SentryFileWriter: SentryFileWriter(java.io.File,boolean)
io.sentry.SentryBaseEvent: void addBreadcrumb(java.lang.String)
io.sentry.SystemOutLogger: void log(io.sentry.SentryLevel,java.lang.Throwable,java.lang.String,java.lang.Object[])
io.sentry.NoOpHub: io.sentry.SentryOptions getOptions()
io.sentry.ShutdownHookIntegration: void lambda$register$0(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldRestoreAndSaveState()
io.flutter.plugin.common.JSONUtil: JSONUtil()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$7: SentryFlutter$updateOptions$7(io.sentry.android.core.SentryAndroidOptions)
io.sentry.ObjectReader: void setLenient(boolean)
io.sentry.ObjectReader: void skipValue()
io.sentry.DirectoryProcessor: void processDirectory(java.io.File)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
io.sentry.CheckInStatus: io.sentry.CheckInStatus[] $values()
io.sentry.android.replay.GeneratedVideo: long component3()
io.sentry.Sentry: void addBreadcrumb(io.sentry.Breadcrumb)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryReplayEvent: io.sentry.protocol.SentryId getReplayId()
io.sentry.metrics.MetricsApi: void timing(java.lang.String,java.lang.Runnable,io.sentry.MeasurementUnit$Duration)
io.sentry.JsonObjectReader: java.util.Map nextMapOfListOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode getOtherNodeSubtree()
io.sentry.android.core.performance.TimeSpan: java.lang.String getDescription()
io.sentry.android.replay.gestures.GestureRecorder: void stop()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.sentry.cache.PersistingScopeObserver: void store(java.lang.Object,java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureMessage(io.sentry.ISentryClient,java.lang.String,io.sentry.SentryLevel)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
io.sentry.SentryDate: long laterDateNanosTimestampByDiff(io.sentry.SentryDate)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$flush$1(io.sentry.hints.DiskFlushNotification)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion$snakecasePattern$2: java.lang.Object invoke()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: io.sentry.internal.gestures.UiElement locate(java.lang.Object,float,float,io.sentry.internal.gestures.UiElement$Type)
io.sentry.android.replay.ScreenshotRecorderConfig: float component3()
io.sentry.HubAdapter: void setTransaction(java.lang.String)
io.sentry.android.replay.capture.CaptureStrategy: void captureReplay(boolean,kotlin.jvm.functions.Function1)
io.sentry.protocol.MetricSummary: void setSum(double)
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
io.sentry.MainEventProcessor: void setDebugMeta(io.sentry.SentryBaseEvent)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2: BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$2(java.lang.String,java.lang.Object,java.lang.Object,io.sentry.android.replay.capture.BaseCaptureStrategy)
io.sentry.SentryOptions: io.sentry.backpressure.IBackpressureMonitor getBackpressureMonitor()
io.sentry.android.replay.util.MainLooperHandler: MainLooperHandler()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.NoOpSpan: java.lang.String getOperation()
io.sentry.android.core.UserInteractionIntegration: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.android.replay.ReplayIntegration: java.io.File getReplayCacheDir()
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
io.sentry.android.replay.capture.SessionCaptureStrategy$pause$1: void invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment)
io.sentry.Sentry: void addBreadcrumb(java.lang.String)
io.sentry.SentryBaseEvent: void setDist(java.lang.String)
io.sentry.Baggage: void setEnvironment(java.lang.String)
io.sentry.NoOpHub: io.sentry.NoOpHub getInstance()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
io.sentry.SentryThreadFactory: java.util.List getCurrentThreads(java.util.List)
io.sentry.transport.CurrentDateProvider: long getCurrentTimeMillis()
io.sentry.metrics.MetricsApi: void set(java.lang.String,java.lang.String)
io.sentry.protocol.User: void setGeo(io.sentry.protocol.Geo)
io.sentry.Scope: io.sentry.protocol.SentryId getReplayId()
io.sentry.ProfilingTraceData: void setUnknown(java.util.Map)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: SentryFrameMetricsCollector(android.content.Context,io.sentry.SentryOptions,io.sentry.android.core.BuildInfoProvider)
io.sentry.android.core.internal.util.ScreenshotUtils: byte[] takeScreenshot(android.app.Activity,io.sentry.util.thread.IMainThreadChecker,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
io.sentry.protocol.ViewHierarchyNode: java.lang.Double getY()
io.sentry.config.PropertiesProvider: java.util.Map getMap(java.lang.String)
io.sentry.rrweb.RRWebInteractionEvent$InteractionType$Deserializer: io.sentry.rrweb.RRWebInteractionEvent$InteractionType deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1)
io.sentry.DisabledQueue$1: void remove()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
io.sentry.flutter.SentryFlutter$updateOptions$9: void invoke(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$2: SentryFlutter$updateOptions$2(io.sentry.android.core.SentryAndroidOptions)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.preference.SwitchPreferenceCompat: SwitchPreferenceCompat(android.content.Context,android.util.AttributeSet)
io.sentry.Span: java.lang.String getDescription()
io.sentry.protocol.SentryStackFrame: java.lang.String getContextLine()
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.android.core.DefaultAndroidEventProcessor: void setAppExtras(io.sentry.protocol.App,io.sentry.Hint)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void lambda$flush$1()
io.sentry.android.core.performance.TimeSpan: TimeSpan()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
io.sentry.SentryOptions$Proxy: void setHost(java.lang.String)
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
io.sentry.ProfilingTraceData: java.lang.String getProfileId()
io.sentry.clientreport.IClientReportRecorder: void recordLostEnvelope(io.sentry.clientreport.DiscardReason,io.sentry.SentryEnvelope)
io.sentry.ProfilingTraceData: java.lang.String getTransactionId()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
io.sentry.CheckIn: java.lang.String getEnvironment()
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: void reset()
io.sentry.SentryEvent: SentryEvent()
io.sentry.protocol.App: java.util.Map getPermissions()
io.sentry.protocol.DebugImage: void setImageSize(long)
io.sentry.SentryReplayOptions: void setSessionSampleRate(java.lang.Double)
io.sentry.android.replay.ReplayIntegration$ReplayExecutorServiceThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.sentry.protocol.SentryStackTrace: SentryStackTrace()
io.sentry.IScopeObserver: void setTags(java.util.Map)
io.sentry.JsonObjectWriter: void setLenient(boolean)
io.sentry.Span: io.sentry.protocol.SentryId getTraceId()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
io.sentry.Span: void finish(io.sentry.SpanStatus)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter value(java.lang.String)
io.sentry.Hint: io.sentry.ReplayRecording getReplayRecording()
io.sentry.cache.tape.QueueFile: void readInitialData()
io.sentry.ReplayRecording$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.protocol.User: void setName(java.lang.String)
io.sentry.android.core.ContextUtils: ContextUtils()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.sentry.HubAdapter: void addBreadcrumb(io.sentry.Breadcrumb)
io.flutter.plugin.common.EventChannel: java.lang.String access$200(io.flutter.plugin.common.EventChannel)
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.sentry.util.LazyEvaluator$Evaluator: java.lang.Object evaluate()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String connectionStateString(int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTooltip(java.lang.String)
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.protocol.ViewHierarchy snapshotViewHierarchy(android.view.View,java.util.List)
io.sentry.transport.StdoutTransport: io.sentry.transport.RateLimiter getRateLimiter()
io.sentry.SentryOptions: void setTracePropagationTargets(java.util.List)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView)
io.sentry.android.core.internal.gestures.SentryGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
io.sentry.android.replay.capture.CaptureStrategy$Companion: void rotateEvents$sentry_android_replay_release(java.util.Deque,long,kotlin.jvm.functions.Function1)
io.sentry.protocol.SentryStackFrame: void setRawFunction(java.lang.String)
io.sentry.SentryOptions: java.lang.String getEnvironment()
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.ITransaction: io.sentry.TracesSamplingDecision getSamplingDecision()
io.sentry.Attachment: java.lang.String getContentType()
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean getWaitForRestorationData()
io.flutter.embedding.android.FlutterActivity$1: void onBackStarted(android.window.BackEvent)
io.sentry.HostnameCache$HostnameCacheThreadFactory: HostnameCache$HostnameCacheThreadFactory(io.sentry.HostnameCache$1)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.sentry.SentryOptions: void setEnableTimeToFullDisplayTracing(boolean)
io.sentry.android.core.DefaultAndroidEventProcessor: void setThreads(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.Hub: io.sentry.protocol.SentryId captureReplay(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.cache.tape.FileObjectQueue: void close()
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] $values()
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.sentry.SentryReplayEvent: SentryReplayEvent()
io.sentry.android.core.SentryInitProvider: boolean onCreate()
io.sentry.Breadcrumb: java.util.Map access$202(io.sentry.Breadcrumb,java.util.Map)
io.sentry.protocol.App: App()
io.sentry.Baggage: void setUserSegment(java.lang.String)
io.sentry.android.core.AndroidTransactionProfiler: int getTransactionsCounter()
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1400(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngineGroup getEngineGroup()
io.sentry.android.core.ContextUtils: void setAppPackageInfo(android.content.pm.PackageInfo,io.sentry.android.core.BuildInfoProvider,io.sentry.protocol.App)
io.sentry.protocol.SentryId: SentryId(java.util.UUID)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(io.sentry.instrumentation.file.FileInputStreamInitData,io.sentry.instrumentation.file.SentryFileInputStream$1)
io.sentry.protocol.Geo: io.sentry.protocol.Geo fromMap(java.util.Map)
io.flutter.view.VsyncWaiter$DisplayListener: void register()
io.sentry.util.MapObjectReader: java.lang.Object nextValueOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
io.sentry.ISpan: void setMeasurement(java.lang.String,java.lang.Number)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.sentry.android.replay.ReplayIntegration$random$2: io.sentry.util.Random invoke()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
io.sentry.ExternalOptions: void setEnableBackpressureHandling(java.lang.Boolean)
io.sentry.rrweb.RRWebInteractionEvent: int access$502(io.sentry.rrweb.RRWebInteractionEvent,int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
io.sentry.SentryOptions: void setAttachServerName(boolean)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.plugin.common.BasicMessageChannel)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean onSearchRequested(android.view.SearchEvent)
io.sentry.transport.NoOpTransport: io.sentry.transport.NoOpTransport getInstance()
io.sentry.android.replay.WindowManagerSpy$windowManagerInstance$2: WindowManagerSpy$windowManagerInstance$2()
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: java.io.FileOutputStream create(java.io.FileOutputStream,java.io.File,boolean)
io.sentry.android.core.performance.AppStartMetrics: void onAppStartSpansSent()
io.sentry.MonitorContexts: io.sentry.SpanContext getTrace()
io.sentry.SentryAppStartProfilingOptions: void setTraceSampleRate(java.lang.Double)
io.sentry.Session: java.lang.String getUserAgent()
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void hide()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction valueOf(java.lang.String)
io.sentry.android.core.SentryFrameMetrics: boolean containsValidData()
io.sentry.NoOpTransaction: io.sentry.SpanContext getSpanContext()
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
io.sentry.IScopeObserver: void setFingerprint(java.util.Collection)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter value(java.lang.Number)
io.sentry.protocol.DebugImage: java.lang.String getDebugFile()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.sentry.util.HttpUtils: HttpUtils()
io.sentry.protocol.Message: java.lang.String getMessage()
io.flutter.embedding.android.FlutterActivity: boolean shouldDispatchAppLifecycleState()
io.flutter.plugin.platform.PlatformPlugin: void setFrameworkHandlesBack(boolean)
io.sentry.SentryOptions: void setEnableSpotlight(boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
io.sentry.instrumentation.file.SentryFileInputStream: void close()
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$1500(io.flutter.plugin.platform.PlatformViewsController)
io.sentry.android.core.EnvelopeFileObserverIntegration: void startOutboxSender(io.sentry.IHub,io.sentry.SentryOptions,java.lang.String)
io.sentry.flutter.SentryFlutter$updateOptions$18: void invoke(java.lang.String)
io.sentry.SentryOptions: void setSessionReplay(io.sentry.SentryReplayOptions)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistingExecutor$2: java.util.concurrent.ScheduledExecutorService invoke()
io.sentry.HostnameCache: boolean isClosed()
io.sentry.ScopeObserverAdapter: void setReplayId(io.sentry.protocol.SentryId)
io.sentry.ExternalOptions: void addInAppExclude(java.lang.String)
io.sentry.hints.BlockingFlushHint: void markFlushed()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: io.sentry.SentryEnvelope access$600(io.sentry.transport.AsyncHttpTransport$EnvelopeSender)
io.sentry.SentryDateProvider: io.sentry.SentryDate now()
io.sentry.JsonObjectDeserializer$TokenMap: JsonObjectDeserializer$TokenMap()
io.sentry.android.core.ContextUtils: io.sentry.android.core.ContextUtils$SideLoadedInfo retrieveSideLoadedInfo(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.sentry.protocol.SentryException$Deserializer: io.sentry.protocol.SentryException deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterImageView)
io.sentry.ITransaction: void setContext(java.lang.String,java.lang.Object)
io.sentry.android.core.internal.util.RootChecker: RootChecker(android.content.Context,io.sentry.android.core.BuildInfoProvider,io.sentry.ILogger)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Object doInBackground(java.lang.Object[])
io.sentry.NoOpTransactionProfiler: boolean isRunning()
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
io.sentry.android.core.internal.gestures.NoOpWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
io.sentry.android.replay.SessionReplayOptionsKt: boolean getMaskAllImages(io.sentry.SentryReplayOptions)
io.sentry.protocol.DebugMeta: java.util.Map getUnknown()
io.sentry.rrweb.RRWebSpanEvent: java.lang.String getOp()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
io.sentry.SentryClient: io.sentry.SentryBaseEvent applyScope(io.sentry.SentryBaseEvent,io.sentry.IScope)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.preference.internal.PreferenceImageView: int getMaxHeight()
io.sentry.util.TracingUtils: io.sentry.PropagationContext maybeUpdateBaggage(io.sentry.IScope,io.sentry.SentryOptions)
io.sentry.android.core.internal.util.ScreenshotUtils: void lambda$takeScreenshot$1(android.view.View,android.graphics.Canvas,io.sentry.ILogger,java.util.concurrent.CountDownLatch)
io.sentry.instrumentation.file.SentryFileInputStream$Factory: SentryFileInputStream$Factory()
io.sentry.IHub: void reportFullyDisplayed()
io.sentry.IHub: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
io.sentry.JsonObjectSerializer: void serializeTimeZone(io.sentry.ObjectWriter,io.sentry.ILogger,java.util.TimeZone)
io.sentry.SentryAutoDateProvider: SentryAutoDateProvider()
io.sentry.protocol.TransactionNameSource: TransactionNameSource(java.lang.String,int)
io.sentry.Breadcrumb$Deserializer: Breadcrumb$Deserializer()
io.sentry.protocol.DebugMeta: DebugMeta()
io.sentry.SpanStatus: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.video.SimpleVideoEncoder: boolean getHasExynosCodec()
io.sentry.UncaughtExceptionHandler: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
io.sentry.android.core.performance.AppStartMetrics: void setAppStartSamplingDecision(io.sentry.TracesSamplingDecision)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void synchronizeToNativeViewHierarchy(boolean)
io.sentry.Span: io.sentry.SentryDate getStartDate()
io.sentry.util.thread.MainThreadChecker: boolean isMainThread(java.lang.Thread)
io.sentry.android.core.UserInteractionIntegration: void close()
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: java.io.FileOutputStream create(java.io.FileOutputStream,java.io.FileDescriptor)
io.sentry.cache.tape.QueueFile: void setLength(long)
io.sentry.SentryOptions: long getShutdownTimeout()
io.sentry.Span: io.sentry.ISpan startChild(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
io.sentry.SentryDate: long nanoTimestamp()
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter beginArray()
io.sentry.HubAdapter: void popScope()
io.flutter.plugin.common.MethodChannel: void resizeChannelBuffer(int)
io.sentry.android.core.internal.gestures.SentryGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.sentry.metrics.EncodedMetrics: byte[] encodeToStatsd()
io.sentry.android.core.CurrentActivityIntegration: CurrentActivityIntegration(android.app.Application)
io.sentry.rrweb.RRWebInteractionEvent: int access$102(io.sentry.rrweb.RRWebInteractionEvent,int)
io.sentry.protocol.SentryStackFrame: java.lang.Boolean isNative()
io.sentry.SentryEnvelopeItem$CachedItem: SentryEnvelopeItem$CachedItem(java.util.concurrent.Callable)
io.sentry.SentryOptions: void setTag(java.lang.String,java.lang.String)
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: void access$400(io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel)
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
io.sentry.SentryAppStartProfilingOptions: int getProfilingTracesHz()
io.sentry.transport.NoOpTransport: void close(boolean)
io.sentry.protocol.Contexts: void setResponse(io.sentry.protocol.Response)
io.sentry.SentryOptions: io.sentry.Dsn retrieveParsedDsn()
io.flutter.view.AccessibilityBridge: int getHoveredObjectId()
io.sentry.android.replay.gestures.GestureRecorder$onRootViewsChanged$1$1: GestureRecorder$onRootViewsChanged$1$1(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
io.sentry.SentryAppStartProfilingOptions: void setTraceSampled(boolean)
io.sentry.SentryOptions: void setConnectionTimeoutMillis(int)
io.sentry.protocol.SdkVersion$JsonKeys: SdkVersion$JsonKeys()
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.performance.AppStartMetrics: long getClassLoadedUptimeMs()
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
io.sentry.android.core.SentryFrameMetrics: io.sentry.android.core.SentryFrameMetrics duplicate()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValue()
io.sentry.protocol.Response: void setBodySize(java.lang.Long)
io.sentry.protocol.MetricSummary$JsonKeys: MetricSummary$JsonKeys()
io.sentry.IPerformanceSnapshotCollector: void collect(io.sentry.PerformanceCollectionData)
io.sentry.android.replay.RootViewsSpy$listeners$1: int indexOf(io.sentry.android.replay.OnRootViewsChangedListener)
io.flutter.plugin.platform.PlatformView$-CC: void $default$onInputConnectionLocked(io.flutter.plugin.platform.PlatformView)
io.flutter.embedding.engine.FlutterEngineGroup$Options: android.content.Context getContext()
io.sentry.android.core.performance.TimeSpan: double getStartTimestampSecs()
io.sentry.SentryLongDate: long nanoTimestamp()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.preference.internal.PreferenceImageView: void setMaxHeight(int)
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy getProxy()
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.Deque getCurrentEvents()
io.sentry.MainEventProcessor: void setExceptions(io.sentry.SentryEvent)
io.sentry.TransactionOptions: boolean isWaitForChildren()
io.sentry.SpanContext$Deserializer: io.sentry.SpanContext deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.EnvelopeFileObserver: EnvelopeFileObserver(java.lang.String,io.sentry.IEnvelopeSender,io.sentry.ILogger,long)
io.sentry.protocol.SentryStackFrame: java.lang.String getSymbolAddr()
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
io.sentry.cache.PersistingScopeObserver: void setFingerprint(java.util.Collection)
io.sentry.Attachment: Attachment(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
io.sentry.android.core.SentryAndroidOptions: void setEnableFramesTracking(boolean)
io.sentry.SentryOptions: void merge(io.sentry.ExternalOptions)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$1000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
io.sentry.HubAdapter: io.sentry.metrics.MetricsApi metrics()
io.sentry.android.core.SentryInitProvider: SentryInitProvider()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
io.sentry.protocol.SentryStackFrame: java.lang.Integer access$402(io.sentry.protocol.SentryStackFrame,java.lang.Integer)
io.sentry.NoOpSpan: void finish(io.sentry.SpanStatus)
io.sentry.cache.tape.EmptyObjectQueue: void remove(int)
io.flutter.plugin.common.EventChannel$StreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.sentry.instrumentation.file.SentryFileInputStream: java.lang.Integer lambda$read$0(java.util.concurrent.atomic.AtomicInteger)
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap getActivityLifecycleMap()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$TextViewHierarchyNode: ViewHierarchyNode$TextViewHierarchyNode(io.sentry.android.replay.util.TextLayout,java.lang.Integer,int,int,float,float,int,int,float,int,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,boolean,boolean,boolean,android.graphics.Rect)
io.sentry.android.core.SentryAndroidOptions: boolean isCollectAdditionalContext()
io.sentry.android.core.ANRWatchDog: long lambda$new$0()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
io.sentry.protocol.TransactionInfo$Deserializer: io.sentry.protocol.TransactionInfo deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$20: void invoke(java.lang.String)
io.sentry.ReplayController: void start()
io.sentry.SentryTracer: boolean isFinished()
io.sentry.SentryOptions: int getMaxDepth()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
io.sentry.util.MapObjectWriter: void postValue(java.lang.Object)
io.sentry.SpotlightIntegration: java.lang.String getSpotlightConnectionUrl()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
io.sentry.NoOpHub: void setTransaction(java.lang.String)
io.sentry.protocol.Device: java.lang.Boolean access$1502(io.sentry.protocol.Device,java.lang.Boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.sentry.android.core.ActivityLifecycleIntegration: void stopPreviousTransactions()
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.atomic.AtomicLong getReplayStartTimestamp()
io.sentry.SentryInstantDateProvider: io.sentry.SentryDate now()
io.sentry.android.core.internal.gestures.SentryGestureListener$ScrollState: void setTarget(io.sentry.internal.gestures.UiElement)
io.sentry.protocol.Response: Response()
io.flutter.plugin.platform.PlatformViewsController: float access$1200(io.flutter.plugin.platform.PlatformViewsController)
io.sentry.android.replay.capture.BufferCaptureStrategy: void stop()
io.sentry.protocol.Device: void setManufacturer(java.lang.String)
io.sentry.CircularFifoQueue: int increment(int)
io.sentry.cache.tape.QueueFile: void writeLong(byte[],int,long)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
io.sentry.android.replay.WindowRecorder$capturer$2: WindowRecorder$capturer$2()
io.sentry.rrweb.RRWebOptionsEvent: RRWebOptionsEvent(io.sentry.SentryOptions)
io.sentry.util.thread.NoOpMainThreadChecker: io.sentry.util.thread.NoOpMainThreadChecker getInstance()
io.sentry.android.replay.util.ComposeTextLayout: int getLineVisibleEnd(int)
io.sentry.android.replay.video.MuxerConfig: java.lang.String getMimeType()
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
io.sentry.android.replay.RootViewsSpy: java.util.concurrent.atomic.AtomicBoolean access$isClosed$p(io.sentry.android.replay.RootViewsSpy)
io.flutter.embedding.android.FlutterFragment: boolean shouldDestroyEngineWithHost()
io.flutter.embedding.engine.renderer.FlutterRenderer: void onTrimMemory(int)
io.sentry.android.core.performance.AppStartMetrics: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.sentry.NoOpTransaction: boolean updateEndDate(io.sentry.SentryDate)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.sentry.android.core.internal.util.AndroidMainThreadChecker: AndroidMainThreadChecker()
io.sentry.android.replay.capture.BaseCaptureStrategy: void onTouchEvent(android.view.MotionEvent)
io.sentry.android.replay.util.ComposeTextLayout: androidx.compose.ui.text.TextLayoutResult getLayout$sentry_android_replay_release()
io.flutter.plugin.platform.VirtualDisplayController$1: void onResumed()
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: void runInBackground(kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ScribeChannel)
io.sentry.ScopeObserverAdapter: void setTag(java.lang.String,java.lang.String)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: void release()
io.sentry.android.replay.ScreenshotRecorder$singlePixelBitmap$2: android.graphics.Bitmap invoke()
io.sentry.android.core.SentryAndroid: void init(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.sentry.NoOpLogger: void log(io.sentry.SentryLevel,java.lang.Throwable,java.lang.String,java.lang.Object[])
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
io.flutter.plugin.common.EventChannel: void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler)
io.sentry.android.replay.ModifierExtensionsKt: androidx.compose.ui.Modifier sentryReplayMask(androidx.compose.ui.Modifier)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.JsonObjectReader: double nextDouble()
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: boolean getShouldMask()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $values()
io.sentry.cache.tape.QueueFile: void writeInt(byte[],int,int)
io.sentry.transport.AsyncHttpTransport: void send(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.rrweb.RRWebOptionsEvent$Deserializer: io.sentry.rrweb.RRWebOptionsEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.AndroidMemoryCollector: void collect(io.sentry.PerformanceCollectionData)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: int compareTo(java.lang.Object)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: AppComponentsBreadcrumbsIntegration(android.content.Context)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.ScheduledExecutorService access$getPersistingExecutor(io.sentry.android.replay.capture.BaseCaptureStrategy)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(long)
io.sentry.protocol.SentryRuntime: void setName(java.lang.String)
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(io.sentry.instrumentation.file.FileOutputStreamInitData)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureTransaction(io.sentry.ISentryClient,io.sentry.protocol.SentryTransaction,io.sentry.TraceContext)
io.sentry.SentryIntegrationPackageStorage: io.sentry.SentryIntegrationPackageStorage getInstance()
io.sentry.protocol.Browser: java.lang.String getVersion()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.IScope,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.android.replay.ReplayIntegration: ReplayIntegration(android.content.Context,io.sentry.transport.ICurrentDateProvider,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
io.sentry.cache.tape.EmptyObjectQueue: java.util.Iterator iterator()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
io.sentry.NoOpTransaction: java.lang.String getTag(java.lang.String)
io.sentry.transport.AsyncHttpTransport: void lambda$send$0(io.sentry.hints.Enqueable)
io.sentry.HubAdapter: void setLevel(io.sentry.SentryLevel)
io.sentry.cache.PersistingScopeObserver$1: io.sentry.Breadcrumb from(byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
io.flutter.embedding.android.KeyEmbedderResponder: java.util.Map getPressedState()
io.sentry.protocol.Gpu: java.lang.String access$502(io.sentry.protocol.Gpu,java.lang.String)
io.sentry.SentryOptions: void setLogger(io.sentry.ILogger)
io.sentry.Hint: io.sentry.Attachment getViewHierarchy()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.sentry.instrumentation.file.SentryFileOutputStream: io.sentry.instrumentation.file.FileOutputStreamInitData access$000(java.io.File,boolean,java.io.FileOutputStream,io.sentry.IHub)
io.sentry.SentryReplayEvent: java.lang.String getType()
io.flutter.embedding.android.FlutterFragment: FlutterFragment()
io.sentry.SentryThreadFactory: java.util.List getCurrentThreads(java.util.Map,java.util.List,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: int size()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder(java.lang.Class)
io.flutter.plugin.platform.PlatformViewsController: boolean access$1702(io.flutter.plugin.platform.PlatformViewsController,boolean)
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: io.sentry.android.replay.viewhierarchy.ViewHierarchyNode fromComposeNode(androidx.compose.ui.node.LayoutNode,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,int,boolean,io.sentry.SentryOptions)
io.sentry.protocol.Request$Deserializer: io.sentry.protocol.Request deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.NoOpTransaction: java.lang.Throwable getThrowable()
io.sentry.Breadcrumb: io.sentry.Breadcrumb user(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.Breadcrumb: io.sentry.Breadcrumb graphqlDataFetcher(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
io.sentry.SentryIntegrationPackageStorage: java.util.Set getPackages()
io.sentry.util.CollectionUtils$Mapper: java.lang.Object map(java.lang.Object)
io.sentry.SentryClient: io.sentry.SentryReplayEvent executeBeforeSendReplay(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.sentry.TransactionOptions: void setTransactionFinishedCallback(io.sentry.TransactionFinishedCallback)
io.sentry.SentryOptions: void addEventProcessor(io.sentry.EventProcessor)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
io.flutter.plugin.text.ProcessTextPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.protocol.SentryPackage: java.lang.String getVersion()
io.sentry.rrweb.RRWebEvent: void setType(io.sentry.rrweb.RRWebEventType)
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
io.sentry.cache.CacheStrategy: void rotateCacheIfNeeded(java.io.File[])
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$onMethodCall$3(io.flutter.plugin.common.MethodChannel$Result,int,boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.HashMap,boolean,java.lang.String)
io.sentry.SentryEvent: java.lang.String access$202(io.sentry.SentryEvent,java.lang.String)
io.sentry.protocol.SdkVersion: boolean equals(java.lang.Object)
io.flutter.view.VsyncWaiter$FrameCallback: void doFrame(long)
io.sentry.ObjectWriter: io.sentry.ObjectWriter nullValue()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
io.sentry.android.ndk.NativeScope: void nativeRemoveExtra(java.lang.String)
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForPanZoom(int)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
io.sentry.IScope: void setContexts(java.lang.String,java.util.Collection)
io.sentry.CircularFifoQueue: boolean access$100(io.sentry.CircularFifoQueue)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$1: BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$1(kotlin.jvm.functions.Function0)
io.flutter.view.VsyncWaiter$DisplayListener: VsyncWaiter$DisplayListener(io.flutter.view.VsyncWaiter,android.hardware.display.DisplayManager)
io.sentry.protocol.App: void setStartType(java.lang.String)
io.sentry.ExternalOptions: java.lang.Boolean isEnabled()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
io.sentry.ISentryClient: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.IScope,io.sentry.Hint)
io.sentry.protocol.MeasurementValue$Deserializer: MeasurementValue$Deserializer()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
io.sentry.Sentry: void popScope()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.sentry.cache.EnvelopeCache: java.io.File[] allEnvelopeFiles()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.sentry.internal.gestures.UiElement: java.lang.String getClassName()
io.sentry.SentryOptions: java.util.List getScopeObservers()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
io.sentry.Span: Span(io.sentry.protocol.SentryId,io.sentry.SpanId,io.sentry.SentryTracer,java.lang.String,io.sentry.IHub)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter endArray()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.sentry.SentryOptions: void setEnableExternalConfiguration(boolean)
io.sentry.android.replay.ReplayIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterFragment: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
io.sentry.HubAdapter: java.lang.Boolean isCrashedLastRun()
io.sentry.android.core.SentryAndroidOptions: boolean isEnablePerformanceV2()
io.flutter.plugin.platform.PlatformViewsController: boolean access$1600(int)
io.sentry.CircularFifoQueue: java.lang.Object element()
io.sentry.SpanContext: java.util.Map getTags()
io.sentry.protocol.OperatingSystem: java.lang.Boolean isRooted()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
io.sentry.cache.tape.ObjectQueue: boolean isEmpty()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: java.util.List getDefaultActions()
io.sentry.MonitorSchedule$Deserializer: MonitorSchedule$Deserializer()
io.sentry.metrics.SetMetric: SetMetric(java.lang.String,io.sentry.MeasurementUnit,java.util.Map)
io.flutter.embedding.android.KeyEmbedderResponder: void lambda$synchronizePressingKey$1(io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent)
io.sentry.android.ndk.SentryNdk: void init(io.sentry.android.core.SentryAndroidOptions)
io.sentry.protocol.SentryThread$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.sentry.SentryOptions: void addPackageInfo()
io.sentry.SentryEvent: java.lang.String getModule(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $values()
io.sentry.transport.RateLimiter: void lambda$markHintWhenSendingFailed$1(boolean,io.sentry.hints.Retryable)
io.sentry.android.replay.WindowRecorder: void start(io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.protocol.User: User()
io.sentry.android.replay.capture.BufferCaptureStrategy: io.sentry.android.replay.capture.CaptureStrategy convert()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothGattCharacteristic getCharacteristicFromArray(java.lang.String,java.util.List)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.sentry.TransactionContext: TransactionContext(java.lang.String,io.sentry.protocol.TransactionNameSource,java.lang.String)
io.sentry.SentryNanotimeDate: SentryNanotimeDate()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
io.sentry.android.core.AndroidProfiler: java.util.ArrayDeque access$300(io.sentry.android.core.AndroidProfiler)
io.flutter.plugin.platform.VirtualDisplayController$2: void onViewAttachedToWindow(android.view.View)
io.sentry.SentryEvent$Deserializer: SentryEvent$Deserializer()
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter name(java.lang.String)
io.sentry.SentryDate: boolean isBefore(io.sentry.SentryDate)
io.sentry.MonitorContexts: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(io.sentry.ILogger,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
io.sentry.SentryAppStartProfilingOptions$Deserializer: io.sentry.SentryAppStartProfilingOptions deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
io.flutter.plugin.platform.PlatformViewsController: void access$200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.sentry.protocol.SentryThread: SentryThread()
io.flutter.plugin.editing.TextInputPlugin$MinMax: void inspect(double,double)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPostStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] values()
io.sentry.android.replay.util.FixedWindowCallback: boolean dispatchTrackballEvent(android.view.MotionEvent)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: void scheduleFrame()
io.flutter.embedding.engine.dart.DartExecutor: void disableBufferingIncomingMessages()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
io.sentry.TransactionOptions: java.lang.Long getIdleTimeout()
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void detachFromService()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.SentryTracer: void setName(java.lang.String,io.sentry.protocol.TransactionNameSource)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
io.sentry.protocol.MeasurementValue: java.util.Map getUnknown()
io.flutter.plugin.editing.TextEditingDelta: int getNewSelectionStart()
io.sentry.NoOpScope: io.sentry.PropagationContext withPropagationContext(io.sentry.Scope$IWithPropagationContext)
io.sentry.internal.gestures.UiElement: UiElement(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.sentry.rrweb.RRWebMetaEvent: boolean equals(java.lang.Object)
io.sentry.UserFeedback: java.lang.String getName()
io.sentry.android.core.internal.gestures.SentryWindowCallback: android.view.Window$Callback getDelegate()
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
io.sentry.rrweb.RRWebMetaEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
io.sentry.android.replay.ScreenshotRecorderConfig$Companion: int adjustToBlockSize(int)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.sentry.android.replay.capture.CaptureStrategy: void resume()
io.sentry.android.core.internal.gestures.NoOpWindowCallback: android.view.View onCreatePanelView(int)
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence getDeltaText()
io.sentry.protocol.Request: java.util.Map getHeaders()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: void setCurrentWindow(android.view.Window)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
io.sentry.android.core.AnrV2EventProcessor: void setEnvironment(io.sentry.SentryBaseEvent)
io.sentry.SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])
io.sentry.flutter.BeforeSendCallbackImpl: io.sentry.SentryEvent execute(io.sentry.SentryEvent,io.sentry.Hint)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
io.sentry.ExternalOptions: java.util.List getIgnoredCheckIns()
io.flutter.view.TextureRegistry$TextureEntry: long id()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.sentry.SentryEvent: java.util.Map access$802(io.sentry.SentryEvent,java.util.Map)
io.sentry.rrweb.RRWebSpanEvent: void setTag(java.lang.String)
io.sentry.protocol.Message: java.lang.String access$002(io.sentry.protocol.Message,java.lang.String)
io.sentry.protocol.SentryStackFrame: java.lang.String access$1102(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.protocol.ViewHierarchyNode: void setUnknown(java.util.Map)
io.sentry.NoOpHub: java.lang.Object clone()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long getFrameStartTimestamp(android.view.FrameMetrics)
io.sentry.android.ndk.NativeModuleListLoader: void clearModuleList()
io.sentry.flutter.SentryFlutter$updateOptions$5: SentryFlutter$updateOptions$5(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryClient$SortBreadcrumbsByDate: int compare(io.sentry.Breadcrumb,io.sentry.Breadcrumb)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
io.sentry.android.replay.ReplayIntegration$rootViewsSpy$2: ReplayIntegration$rootViewsSpy$2()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: void setTimeOffset(long)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: void onWindowFocusChanged(boolean)
io.sentry.flutter.SentryFlutter$updateOptions$25: SentryFlutter$updateOptions$25(io.sentry.android.core.SentryAndroidOptions)
io.sentry.protocol.App: void setUnknown(java.util.Map)
io.sentry.protocol.SdkVersion: void setVersion(java.lang.String)
io.sentry.SentryBaseEvent: java.util.Map access$1300(io.sentry.SentryBaseEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.sentry.util.Random: long initialScramble(long)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created copy$default(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created,io.sentry.SentryReplayEvent,io.sentry.ReplayRecording,int,java.lang.Object)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.sentry.protocol.User: void setOthers(java.util.Map)
io.sentry.android.core.ScreenshotEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface,boolean)
io.sentry.SentryEnvelopeHeader: SentryEnvelopeHeader(io.sentry.protocol.SentryId,io.sentry.protocol.SdkVersion,io.sentry.TraceContext)
io.flutter.plugin.platform.PlatformViewRenderTarget: int getWidth()
io.sentry.config.ClasspathPropertiesLoader: ClasspathPropertiesLoader(io.sentry.ILogger)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.sentry.ObjectReader: java.lang.Boolean nextBooleanOrNull()
io.sentry.android.core.NdkIntegration: NdkIntegration(java.lang.Class)
io.sentry.NoOpHub: void setExtra(java.lang.String,java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.sentry.SentryTracer: void setDescription(java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy: void onScreenChanged(java.lang.String)
io.sentry.metrics.Metric: Metric(io.sentry.metrics.MetricType,java.lang.String,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: java.io.FileOutputStream create(java.io.FileOutputStream,java.lang.String,boolean)
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: void setRetry(boolean)
io.sentry.SentryEnvelopeHeader: SentryEnvelopeHeader()
io.sentry.util.HintUtils: void runIfHasTypeLogIfNot(io.sentry.Hint,java.lang.Class,io.sentry.ILogger,io.sentry.util.HintUtils$SentryConsumer)
io.sentry.android.core.SystemEventsBreadcrumbsIntegration: SystemEventsBreadcrumbsIntegration(android.content.Context)
io.sentry.android.core.DeviceInfoUtil: DeviceInfoUtil(android.content.Context,io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView,android.os.Handler)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
io.sentry.protocol.Device: void setModelId(java.lang.String)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromSession$1(io.sentry.SentryEnvelopeItem$CachedItem)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
io.sentry.PropagationContext: io.sentry.SpanId getParentSpanId()
io.sentry.android.replay.util.TextLayout: int getEllipsisCount(int)
io.flutter.embedding.android.FlutterFragment: void onAttach(android.content.Context)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void lambda$onLowMemory$1(long)
io.sentry.metrics.MetricsHelper: java.lang.String sanitizeTagValue(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomic$1: void invoke(java.lang.String,java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterFragment: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.sentry.SynchronizedCollection: java.util.Collection decorated()
io.sentry.protocol.Request: java.lang.String getMethod()
io.sentry.ProfilingTraceData: void setDurationNs(java.lang.String)
io.sentry.ReplayRecording: void setUnknown(java.util.Map)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void lambda$onMethodCall$0(io.flutter.plugin.common.MethodChannel$Result,boolean,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel getDeferredComponentChannel()
io.sentry.rrweb.RRWebInteractionEvent: void setInteractionType(io.sentry.rrweb.RRWebInteractionEvent$InteractionType)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
io.sentry.ISpan: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SpanOptions)
io.sentry.SentryClient: io.sentry.protocol.SentryId captureTransaction(io.sentry.protocol.SentryTransaction,io.sentry.TraceContext,io.sentry.IScope,io.sentry.Hint,io.sentry.ProfilingTraceData)
io.sentry.NoOpTransaction: void setMeasurement(java.lang.String,java.lang.Number)
io.sentry.SentryReplayEvent$ReplayType: io.sentry.SentryReplayEvent$ReplayType[] $values()
io.sentry.cache.PersistingOptionsObserver: void setRelease(java.lang.String)
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: boolean waitFlush()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int getAppearanceFromScanRecord(android.bluetooth.le.ScanRecord)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiNoLongerDisplayed()
io.flutter.embedding.android.FlutterEngineConfigurator: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
io.sentry.ExternalOptions: java.lang.Boolean getEnableUncaughtExceptionHandler()
io.sentry.ISpan: void setStatus(io.sentry.SpanStatus)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.sentry.android.core.AppState: java.lang.Boolean isInBackground()
com.sanguinarypc.box_sensors.R: R()
io.sentry.IScope: io.sentry.IScope clone()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
io.flutter.embedding.engine.FlutterEngineGroup$Options: FlutterEngineGroup$Options(android.content.Context)
io.sentry.NoOpSentryClient: io.sentry.protocol.SentryId captureCheckIn(io.sentry.CheckIn,io.sentry.IScope,io.sentry.Hint)
io.sentry.ReplayController: io.sentry.ReplayBreadcrumbConverter getBreadcrumbConverter()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
io.sentry.cache.PersistingOptionsObserver: void setTags(java.util.Map)
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
io.sentry.android.core.util.AndroidLazyEvaluator: void resetValue()
io.flutter.plugin.text.ProcessTextPlugin: ProcessTextPlugin(io.flutter.embedding.engine.systemchannels.ProcessTextChannel)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
io.sentry.protocol.MetricSummary: java.util.Map getUnknown()
io.sentry.transport.RateLimiter: boolean isRetryAfter(java.lang.String)
io.sentry.cache.EnvelopeCache: io.sentry.cache.IEnvelopeCache create(io.sentry.SentryOptions)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate createDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
io.sentry.SentryOptions: void setProguardUuid(java.lang.String)
io.sentry.android.core.internal.util.ScreenshotUtils: void lambda$takeScreenshot$0(java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.CountDownLatch,int)
io.sentry.JsonObjectDeserializer: JsonObjectDeserializer()
io.sentry.android.replay.ReplayIntegration$replayExecutor$2: java.lang.Object invoke()
io.sentry.protocol.SentryException: java.lang.Long access$302(io.sentry.protocol.SentryException,java.lang.Long)
io.sentry.protocol.SentryStackTrace: java.util.Map getUnknown()
io.sentry.android.core.ActivityFramesTracker: java.util.Map takeMetrics(io.sentry.protocol.SentryId)
io.sentry.NoOpTransaction: java.util.List getSpans()
io.sentry.NoOpTransportFactory: NoOpTransportFactory()
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.sentry.android.replay.ScreenshotRecorder$capture$1$1$1$1: java.lang.Object invoke(java.lang.Object)
io.sentry.ObjectReader: void nextNull()
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
io.sentry.config.AbstractPropertiesProvider: java.util.Map getMap(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.sentry.SentryEnvelope: java.lang.Iterable getItems()
io.sentry.IMemoryCollector: io.sentry.MemoryCollectionData collect()
io.sentry.Span: void setOperation(java.lang.String)
io.sentry.android.core.ActivityFramesTracker$FrameCounts: int access$300(io.sentry.android.core.ActivityFramesTracker$FrameCounts)
io.sentry.cache.PersistingScopeObserver: void resetCache()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
io.sentry.ProfilingTraceData$Deserializer: ProfilingTraceData$Deserializer()
io.sentry.flutter.SentryFlutterReplayRecorder: SentryFlutterReplayRecorder(io.flutter.plugin.common.MethodChannel,io.sentry.android.replay.ReplayIntegration)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.sentry.CircularFifoQueue$1: boolean hasNext()
io.sentry.SentryTracer: boolean hasAllChildrenFinished()
io.sentry.util.MapObjectReader: java.lang.Boolean nextBooleanOrNull()
io.sentry.Scope: io.sentry.PropagationContext withPropagationContext(io.sentry.Scope$IWithPropagationContext)
io.sentry.SentryClient$SortBreadcrumbsByDate: int compare(java.lang.Object,java.lang.Object)
io.sentry.android.replay.capture.BaseCaptureStrategy: kotlin.properties.ReadWriteProperty persistableAtomic(kotlin.jvm.functions.Function3)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.sentry.cache.CacheStrategy: void moveInitFlagIfNecessary(java.io.File,java.io.File[])
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback getBeforeBreadcrumb()
io.sentry.protocol.Device: java.lang.String access$402(io.sentry.protocol.Device,java.lang.String)
io.sentry.android.replay.ModifierExtensionsKt$sentryReplayUnmask$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SpellCheckChannel getSpellCheckChannel()
io.sentry.SentryOptions$Cron: java.lang.Long getDefaultMaxRuntime()
io.sentry.android.ndk.SentryNdkUtil: void addPackage(io.sentry.protocol.SdkVersion)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
io.sentry.android.replay.WindowRecorder: java.util.concurrent.ScheduledExecutorService getCapturer()
io.sentry.android.core.internal.gestures.SentryGestureListener: void onShowPress(android.view.MotionEvent)
io.sentry.flutter.SentryFlutter$updateOptions$3: void invoke(java.lang.String)
io.sentry.Breadcrumb: io.sentry.Breadcrumb userInteraction(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io.sentry.protocol.Mechanism: java.util.Map getMeta()
io.sentry.SentryBaseEvent: io.sentry.protocol.SdkVersion access$200(io.sentry.SentryBaseEvent)
io.sentry.ISentryClient: void close(boolean)
io.flutter.plugin.text.ProcessTextPlugin: void destroy()
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
io.sentry.Attachment: io.sentry.Attachment fromScreenshot(byte[])
io.sentry.UserFeedback$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$3: java.lang.Object invoke(java.lang.Object)
io.sentry.transport.TransportResult: int getResponseCode()
io.sentry.protocol.SentryStackFrame: java.lang.String getImageAddr()
io.flutter.embedding.android.FlutterFragment: boolean shouldAttachEngineToActivity()
io.sentry.protocol.ViewHierarchyNode: java.lang.Double access$602(io.sentry.protocol.ViewHierarchyNode,java.lang.Double)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityResumed(android.app.Activity)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: java.lang.String startCollection(io.sentry.android.core.internal.util.SentryFrameMetricsCollector$FrameMetricsCollectorListener)
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener: void onAccessibilityChanged(boolean,boolean)
io.flutter.plugin.common.BinaryMessenger$-CC: void $default$enableBufferingIncomingMessages(io.flutter.plugin.common.BinaryMessenger)
io.sentry.NoOpScope: io.sentry.Session getSession()
io.sentry.JsonObjectDeserializer$NextValue: java.lang.Object nextValue()
io.sentry.ISpan: java.lang.String getOperation()
io.sentry.SentryReplayEvent: java.util.List getTraceIds()
io.sentry.ITransaction: io.sentry.Span getLatestActiveSpan()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void dispose(int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
io.sentry.Sentry: void setUser(io.sentry.protocol.User)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.view.AccessibilityBridge$1: void onFocus(int)
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.atomic.AtomicBoolean isTerminating()
io.flutter.plugin.common.ErrorLogResult: void error(java.lang.String,java.lang.String,java.lang.Object)
io.sentry.rrweb.RRWebInteractionMoveEvent: java.util.Map getDataUnknown()
io.sentry.NoOpSpan: void setDescription(java.lang.String)
io.sentry.android.replay.ScreenshotRecorder$capture$1$1$1$1: ScreenshotRecorder$capture$1$1$1$1(io.sentry.android.replay.ScreenshotRecorder,android.graphics.Canvas)
io.sentry.cache.tape.QueueFile$ElementIterator: void remove()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host,io.flutter.embedding.engine.FlutterEngineGroup)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
io.sentry.protocol.SentryStackFrame: io.sentry.SentryLockReason getLock()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.sentry.SentryEnvelopeItem$CachedItem: byte[] orEmptyArray(byte[])
io.sentry.SentryTracer: void access$200(io.sentry.SentryTracer)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.vendor.gson.stream.JsonReader: java.lang.String nextString()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
io.sentry.NoOpTransportFactory: io.sentry.transport.ITransport create(io.sentry.SentryOptions,io.sentry.RequestDetails)
io.sentry.android.replay.LastSegmentData: long getDuration()
io.sentry.vendor.gson.stream.JsonReader: java.lang.String nextUnquotedValue()
io.sentry.rrweb.RRWebSpanEvent: void serializeData(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.transport.ITransport: void close(boolean)
io.sentry.android.replay.ReplayCache: void addFrame$sentry_android_replay_release(android.graphics.Bitmap,long,java.lang.String)
io.sentry.android.replay.LastSegmentData: int hashCode()
androidx.lifecycle.ReportFragment: ReportFragment()
io.sentry.ObjectReader: java.lang.String nextStringOrNull()
io.sentry.util.ExceptionUtils: ExceptionUtils()
io.sentry.TraceContext: java.lang.String getSampled()
io.sentry.rrweb.RRWebVideoEvent$Deserializer: io.sentry.rrweb.RRWebVideoEvent deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.sentry.rrweb.RRWebVideoEvent: int hashCode()
io.sentry.rrweb.RRWebInteractionMoveEvent$Deserializer: RRWebInteractionMoveEvent$Deserializer()
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getCachedEngineId()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: com.lib.flutter_blue_plus.FlutterBluePlusPlugin$ChrFound locateCharacteristic(android.bluetooth.BluetoothGatt,java.lang.String,java.lang.String,java.lang.String)
io.sentry.android.core.AnrV2EventProcessor: void setStaticValues(io.sentry.SentryEvent)
io.sentry.ExternalOptions: void setServerName(java.lang.String)
io.sentry.vendor.gson.stream.JsonReader: java.lang.String toString()
io.sentry.HostnameCache: void updateCache()
io.sentry.IScope: io.sentry.Session withSession(io.sentry.Scope$IWithSession)
io.sentry.TransactionContext: io.sentry.protocol.TransactionNameSource getTransactionNameSource()
io.sentry.vendor.gson.stream.JsonWriter: void push(int)
io.sentry.SentryValues: SentryValues(java.util.List)
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter nullValue()
io.sentry.ExternalOptions: void addContextTag(java.lang.String)
io.sentry.RequestDetailsResolver: RequestDetailsResolver(io.sentry.SentryOptions)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
io.sentry.SentryOptions: io.sentry.IEnvelopeReader lambda$new$2()
io.sentry.protocol.SentryStackFrame$Deserializer: SentryStackFrame$Deserializer()
io.sentry.NoOpScope: void setPropagationContext(io.sentry.PropagationContext)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry getTextureRegistry()
io.sentry.ProfilingTraceData: void setDeviceIsEmulator(boolean)
io.sentry.SpanContext: io.sentry.SpanStatus getStatus()
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
io.sentry.android.core.internal.gestures.SentryGestureListener: void lambda$startTracing$0(io.sentry.ITransaction,io.sentry.IScope)
io.sentry.android.core.AnrIntegration: void lambda$startAnrWatchdog$1(io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.ApplicationNotResponding)
io.sentry.cache.tape.QueueFile$Element: QueueFile$Element(long,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setFrameworkHandlesBack(boolean)
io.sentry.config.EnvironmentVariablePropertiesProvider: java.lang.String getProperty(java.lang.String)
io.sentry.Span: io.sentry.SpanFinishedCallback getSpanFinishedCallback()
io.flutter.embedding.engine.loader.ResourceExtractor: ResourceExtractor(java.lang.String,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
io.sentry.util.SampleRateUtils: SampleRateUtils()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
io.sentry.protocol.SentryException: java.lang.String getModule()
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
io.sentry.protocol.SdkInfo: void setVersionPatchlevel(java.lang.Integer)
io.sentry.android.core.SentryAndroidOptions: boolean isAnrReportInDebug()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryClient: io.sentry.CheckIn applyScope(io.sentry.CheckIn,io.sentry.IScope)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.protocol.Device: java.lang.Integer access$2002(io.sentry.protocol.Device,java.lang.Integer)
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture: java.lang.Object get()
io.sentry.protocol.SdkInfo: void setVersionMinor(java.lang.Integer)
io.sentry.android.core.AnrV2Integration: AnrV2Integration(android.content.Context)
io.sentry.vendor.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean,java.util.TimeZone)
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.sentry.TracesSampler: boolean sample(java.lang.Double)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration getConfiguration(int)
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(java.lang.Boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.sentry.transport.AsyncHttpTransport: void lambda$initExecutor$1(io.sentry.cache.IEnvelopeCache,io.sentry.ILogger,java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.sentry.SentryEnvelopeItem: io.sentry.SentryEnvelopeItem fromEvent(io.sentry.ISerializer,io.sentry.SentryBaseEvent)
io.sentry.android.core.UserInteractionIntegration: void onActivityResumed(android.app.Activity)
io.flutter.plugin.platform.PlatformViewRenderTarget: boolean isReleased()
io.sentry.ProfilingTransactionData: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
io.sentry.cache.tape.QueueFile: java.io.RandomAccessFile open(java.io.File)
io.sentry.util.CollectionUtils: java.util.Map newConcurrentHashMap(java.util.Map)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.replay.video.MuxerConfig: int component2()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformViewsController: void maybeInvokeOnFlutterViewAttached(io.flutter.plugin.platform.PlatformView)
io.sentry.android.replay.gestures.GestureRecorder$SentryReplayGestureRecorder: GestureRecorder$SentryReplayGestureRecorder(io.sentry.SentryOptions,io.sentry.android.replay.gestures.TouchRecorderCallback,android.view.Window$Callback)
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: void onDetachedFromWindow()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ProcessTextChannel getProcessTextChannel()
io.sentry.android.core.internal.util.FirstDrawDoneListener: void lambda$registerForNextDraw$0(android.view.Window,android.view.Window$Callback,java.lang.Runnable,io.sentry.android.core.BuildInfoProvider)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
io.sentry.rrweb.RRWebBreadcrumbEvent: java.lang.String getMessage()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap bmBluetoothCharacteristic(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothGatt)
io.sentry.protocol.Device: java.lang.Long getStorageSize()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformView createPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,boolean)
io.flutter.plugin.platform.PlatformViewWrapper: void unsetOnDescendantFocusChangeListener()
io.sentry.internal.modules.ResourcesModulesLoader: ResourcesModulesLoader(io.sentry.ILogger)
io.sentry.HubAdapter: io.sentry.SentryOptions getOptions()
io.sentry.SentryTracer: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.sentry.IScope: java.util.Map getExtras()
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void detachAccessibilityBridge()
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
io.sentry.ExternalOptions: void setEnablePrettySerializationOutput(java.lang.Boolean)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI)
io.sentry.UserFeedback: void setComments(java.lang.String)
io.sentry.Sentry: void setTag(java.lang.String,java.lang.String)
io.sentry.metrics.NoopMetricsAggregator: io.sentry.metrics.NoopMetricsAggregator getInstance()
io.sentry.protocol.SentryPackage$Deserializer: io.sentry.protocol.SentryPackage deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.AndroidOptionsInitializer: void initializeIntegrationsAndProcessors(io.sentry.android.core.SentryAndroidOptions,android.content.Context,io.sentry.android.core.LoadClass,io.sentry.android.core.ActivityFramesTracker)
io.sentry.SentryLevel$Deserializer: io.sentry.SentryLevel deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.JavaMemoryCollector: void setup()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.sentry.MonitorContexts$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.sentry.metrics.Metric: io.sentry.MeasurementUnit getUnit()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.sentry.Session: boolean update(io.sentry.Session$State,java.lang.String,boolean,java.lang.String)
io.sentry.vendor.gson.stream.JsonReader: char readEscapeCharacter()
io.sentry.protocol.Device: int hashCode()
io.sentry.TraceContext: java.lang.String getPublicKey()
io.sentry.android.core.SentryAndroidOptions$BeforeCaptureCallback: boolean execute(io.sentry.SentryEvent,io.sentry.Hint,boolean)
io.sentry.Scope: void clearAttachments()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
io.sentry.Session: void setInitAsTrue()
io.flutter.embedding.engine.systemchannels.KeyboardChannel: void setKeyboardMethodHandler(io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler)
io.sentry.clientreport.NoOpClientReportRecorder: void recordLostEnvelopeItem(io.sentry.clientreport.DiscardReason,io.sentry.SentryEnvelopeItem)
io.sentry.Sentry: io.sentry.ISpan getSpan()
io.sentry.android.replay.ReplayFrame: java.io.File getScreenshot()
io.sentry.cache.PersistingScopeObserver: void setTrace(io.sentry.SpanContext,io.sentry.IScope)
io.sentry.cache.tape.FileObjectQueue: int size()
io.sentry.rrweb.RRWebVideoEvent: int access$902(io.sentry.rrweb.RRWebVideoEvent,int)
io.sentry.protocol.Device: java.lang.Long access$1902(io.sentry.protocol.Device,java.lang.Long)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
io.sentry.android.core.ManifestMetadataReader: java.lang.String readString(android.os.Bundle,io.sentry.ILogger,java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$ImageTextureEntry createImageTexture()
io.sentry.android.replay.video.SimpleMp4FrameMuxer: long getVideoTime()
io.flutter.plugin.platform.PlatformViewWrapper: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.sentry.CheckIn: void setRelease(java.lang.String)
io.sentry.android.replay.util.ComposeTextLayout: int getLineCount()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: SentryFrameMetricsCollector(android.content.Context,io.sentry.ILogger,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.internal.util.SentryFrameMetricsCollector$WindowFrameMetricsManager)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeaturesInNative(int)
io.sentry.rrweb.RRWebVideoEvent: void setPayloadUnknown(java.util.Map)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: boolean isUnmaskContainer(android.view.ViewParent,io.sentry.SentryOptions)
io.sentry.SentrySpanStorage: void store(java.lang.String,io.sentry.ISpan)
io.sentry.android.core.LifecycleWatcher: void onStart(androidx.lifecycle.LifecycleOwner)
io.sentry.android.core.AppLifecycleIntegration: AppLifecycleIntegration(io.sentry.android.core.MainLooperHandler)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean dispatchTouchEvent(android.view.MotionEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
io.sentry.android.replay.ReplayIntegration: io.sentry.ReplayBreadcrumbConverter getBreadcrumbConverter()
io.sentry.protocol.SdkInfo$Deserializer: io.sentry.protocol.SdkInfo deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.android.core.SentryPerformanceProvider: SentryPerformanceProvider()
io.sentry.rrweb.RRWebSpanEvent: double getStartTimestamp()
io.sentry.NoOpHub: void popScope()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
io.sentry.SentryOptions: void setAttachStacktrace(boolean)
io.sentry.protocol.SentryStackTrace$Deserializer: SentryStackTrace$Deserializer()
io.sentry.cache.EnvelopeCache: java.io.File getEnvelopeFile(io.sentry.SentryEnvelope)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
io.sentry.util.CollectionUtils: CollectionUtils()
io.sentry.ExternalOptions: void setEnvironment(java.lang.String)
io.sentry.SentryOptions: io.sentry.ITransportFactory getTransportFactory()
io.sentry.cache.tape.FileObjectQueue: boolean isEmpty()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
io.sentry.android.replay.util.TextAttributes: io.sentry.android.replay.util.TextAttributes copy-fRWUv9g$default(io.sentry.android.replay.util.TextAttributes,androidx.compose.ui.graphics.Color,boolean,int,java.lang.Object)
io.sentry.IpAddressUtils: boolean isDefault(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,double,double,int,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode,java.nio.ByteBuffer)
io.sentry.android.replay.DefaultReplayBreadcrumbConverter$Companion: DefaultReplayBreadcrumbConverter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate: boolean popSystemNavigator()
io.sentry.JsonObjectWriter: io.sentry.JsonObjectWriter value(java.lang.Number)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
io.sentry.protocol.SentryThread: void setId(java.lang.Long)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
io.sentry.SentryEvent: java.util.Date getTimestamp()
io.sentry.Session: java.lang.Boolean getInit()
io.sentry.DeduplicateMultithreadedEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.Sentry: void lambda$init$1(java.lang.String,io.sentry.SentryOptions)
io.sentry.android.replay.WindowRecorder$RecorderExecutorServiceThreadFactory: WindowRecorder$RecorderExecutorServiceThreadFactory()
io.sentry.DefaultTransactionPerformanceCollector: long access$102(io.sentry.DefaultTransactionPerformanceCollector,long)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI)
io.sentry.config.SimplePropertiesProvider: SimplePropertiesProvider(java.util.Properties)
androidx.fragment.app.Fragment: int getPopExitAnim()
io.sentry.android.ndk.DebugImagesLoader: java.util.List getCachedDebugImages()
io.sentry.android.core.EnvelopeFileObserverIntegration: void close()
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
io.sentry.protocol.MetricSummary$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.SentryEnvelopeHeader: java.util.Date getSentAt()
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.PlatformViewRenderTarget,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.sentry.SentryTracer: void cancelIdleTimer()
io.sentry.protocol.Response: java.util.Map getHeaders()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets,io.flutter.embedding.engine.FlutterEngineGroup)
io.sentry.android.core.internal.util.FirstDrawDoneListener$1: void onViewDetachedFromWindow(android.view.View)
io.sentry.android.core.AndroidTransactionProfiler: void start()
io.sentry.android.core.AnrV2EventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet)
io.sentry.cache.PersistingScopeObserver: void lambda$setReplayId$12(io.sentry.protocol.SentryId)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
io.sentry.android.replay.capture.BufferCaptureStrategy: void pause()
io.sentry.android.core.performance.AppStartMetrics: void addActivityLifecycleTimeSpans(io.sentry.android.core.performance.ActivityLifecycleTimeSpan)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void lambda$resize$0(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $values()
io.sentry.ProfilingTraceData: boolean access$802(io.sentry.ProfilingTraceData,boolean)
io.sentry.metrics.NoopMetricsAggregator: void gauge(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$2200(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.android.replay.ScreenshotRecorder$RecorderExecutorServiceThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.sentry.CircularFifoQueue: boolean access$102(io.sentry.CircularFifoQueue,boolean)
io.sentry.vendor.gson.stream.JsonReader: boolean hasNext()
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
io.sentry.SentryItemType: io.sentry.SentryItemType valueOf(java.lang.String)
io.sentry.Span: boolean isFinished()
io.sentry.android.core.EmptySecureContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
io.sentry.DsnUtil: boolean urlContainsDsnHost(io.sentry.SentryOptions,java.lang.String)
io.sentry.protocol.Device: java.lang.String access$302(io.sentry.protocol.Device,java.lang.String)
io.sentry.android.replay.capture.BaseCaptureStrategy: java.util.concurrent.ScheduledExecutorService getReplayExecutor()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int scanCountIncrement(java.lang.String)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
io.sentry.util.CheckInUtils: boolean isIgnored(java.util.List,java.lang.String)
io.sentry.rrweb.RRWebSpanEvent: void setDescription(java.lang.String)
io.sentry.NoOpReplayController: NoOpReplayController()
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
io.flutter.plugin.editing.ScribePlugin: void startStylusHandwriting()
io.sentry.PropagationContext: io.sentry.SpanContext toSpanContext()
io.sentry.android.core.performance.TimeSpan: int compareTo(io.sentry.android.core.performance.TimeSpan)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
io.sentry.rrweb.RRWebInteractionEvent: float getY()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.util.List getDartEntrypointArgs()
io.sentry.android.replay.capture.BaseCaptureStrategy$persistableAtomicNullable$2$runInBackground$1: BaseCaptureStrategy$persistableAtomicNullable$2$runInBackground$1(kotlin.jvm.functions.Function0)
io.sentry.ObjectReader: double nextDouble()
io.sentry.Hub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.SentryTracer: java.util.Map getData()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getAppBundlePath()
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
io.sentry.SentryTracer: io.sentry.TraceContext traceContext()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.sentry.Session: java.util.Map getUnknown()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
androidx.fragment.app.Fragment: int getId()
io.sentry.SentryOptions: void setTransactionPerformanceCollector(io.sentry.TransactionPerformanceCollector)
io.sentry.NoOpTransaction: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.sentry.android.replay.video.SimpleVideoEncoder: void release()
io.sentry.flutter.SentryFlutterReplayRecorder: void stop()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.sentry.android.replay.capture.BaseCaptureStrategy: void onConfigurationChanged(io.sentry.android.replay.ScreenshotRecorderConfig)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
io.sentry.JsonObjectReader: void setLenient(boolean)
io.sentry.DisabledQueue: java.lang.Object peek()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
io.sentry.android.core.SpanFrameMetricsCollector$Frame: long access$200(io.sentry.android.core.SpanFrameMetricsCollector$Frame)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken(io.flutter.embedding.engine.dart.DartMessenger$1)
io.sentry.ITransaction: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate)
io.sentry.SentryOptions: void addOptionsObserver(io.sentry.IOptionsObserver)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromEvent$5(io.sentry.SentryEnvelopeItem$CachedItem)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
io.sentry.SpanContext: java.lang.Boolean getProfileSampled()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
io.sentry.Baggage: void setUserId(java.lang.String)
io.sentry.Span: io.sentry.TracesSamplingDecision getSamplingDecision()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int getHeight()
io.sentry.Span: io.sentry.metrics.LocalMetricsAggregator getLocalMetricsAggregator()
io.sentry.vendor.gson.stream.JsonWriter: void setHtmlSafe(boolean)
io.sentry.rrweb.RRWebInteractionEvent$InteractionType: RRWebInteractionEvent$InteractionType(java.lang.String,int)
io.sentry.Sentry: void setExtra(java.lang.String,java.lang.String)
io.sentry.protocol.SdkVersion: java.util.Map getUnknown()
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: android.view.Surface getSurface()
io.sentry.instrumentation.file.SentryFileWriter: SentryFileWriter(java.lang.String,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.JsonSerializer: java.lang.String serializeToString(java.lang.Object,boolean)
io.sentry.SentryOptions$Proxy: SentryOptions$Proxy(java.lang.String,java.lang.String,java.net.Proxy$Type,java.lang.String,java.lang.String)
io.sentry.transport.AsyncHttpTransport: AsyncHttpTransport(io.sentry.SentryOptions,io.sentry.transport.RateLimiter,io.sentry.transport.ITransportGate,io.sentry.RequestDetails)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context)
io.sentry.android.replay.gestures.GestureRecorder: void onRootViewsChanged(android.view.View,boolean)
io.sentry.vendor.gson.stream.JsonReader: io.sentry.vendor.gson.stream.JsonToken peek()
io.sentry.SentryBaseEvent$Serializer: void serialize(io.sentry.SentryBaseEvent,io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$24$2: void invoke(java.util.List)
io.sentry.metrics.NoopMetricsAggregator: void set(java.lang.String,java.lang.String,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
io.sentry.protocol.Geo: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.protocol.App: java.lang.String access$402(io.sentry.protocol.App,java.lang.String)
io.sentry.SentryBaseEvent$Deserializer: boolean deserializeValue(io.sentry.SentryBaseEvent,java.lang.String,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.flutter.SentryFlutter$updateOptions$22: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryTracer: boolean updateEndDate(io.sentry.SentryDate)
io.sentry.Sentry: void finalizePreviousSession(io.sentry.SentryOptions,io.sentry.IHub)
io.sentry.profilemeasurements.ProfileMeasurementValue: ProfileMeasurementValue(java.lang.Long,java.lang.Number)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
io.sentry.IScope: void setReplayId(io.sentry.protocol.SentryId)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher access$100(androidx.activity.ComponentActivity)
io.sentry.android.core.PerformanceAndroidEventProcessor: void setContributingFlags(io.sentry.protocol.SentryTransaction)
io.sentry.rrweb.RRWebInteractionEvent: java.util.Map getDataUnknown()
io.sentry.cache.tape.QueueFile$ElementIterator: QueueFile$ElementIterator(io.sentry.cache.tape.QueueFile)
io.flutter.embedding.android.FlutterFragment$1: void onWindowFocusChanged(boolean)
io.sentry.protocol.SentryStackFrame: java.util.List getFramesOmitted()
io.sentry.hints.DiskFlushNotification: void setFlushable(io.sentry.protocol.SentryId)
io.sentry.instrumentation.file.SentryFileReader: SentryFileReader(java.io.FileDescriptor)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
io.sentry.exception.SentryEnvelopeException: SentryEnvelopeException(java.lang.String)
io.sentry.rrweb.RRWebVideoEvent: java.util.Map getPayloadUnknown()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter endArray()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
io.sentry.rrweb.RRWebEvent: long access$100(io.sentry.rrweb.RRWebEvent)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: double doubleTimestamp(long)
io.sentry.protocol.Request: java.lang.String getFragment()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.sentry.protocol.SdkVersion$Deserializer: SdkVersion$Deserializer()
io.sentry.protocol.SentryThread: java.lang.Boolean access$502(io.sentry.protocol.SentryThread,java.lang.Boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.sentry.Baggage: void setRelease(java.lang.String)
io.flutter.plugin.platform.PlatformOverlayView: boolean onHoverEvent(android.view.MotionEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: void setX(float)
io.sentry.transport.RateLimiter: void removeRateLimitObserver(io.sentry.transport.RateLimiter$IRateLimitObserver)
io.sentry.protocol.SentrySpan: java.util.Map getTags()
io.sentry.JsonObjectDeserializer: io.sentry.JsonObjectDeserializer$Token getCurrentToken()
io.sentry.Hub: boolean isHealthy()
io.sentry.IHub: void reportFullDisplayed()
io.sentry.cache.tape.ObjectQueue: void remove(int)
io.sentry.android.replay.capture.BaseCaptureStrategy: void setCache(io.sentry.android.replay.ReplayCache)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onLongPress(int)
io.sentry.android.replay.ReplayCache: ReplayCache(io.sentry.SentryOptions,io.sentry.protocol.SentryId)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
io.sentry.SentryEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.ActivityLifecycleIntegration: void clear()
io.sentry.profilemeasurements.ProfileMeasurementValue$Deserializer: io.sentry.profilemeasurements.ProfileMeasurementValue deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.loader.FlutterLoader: boolean isLeakVM(android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$400(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
io.sentry.ProfilingTraceData: java.util.List getDeviceCpuFrequencies()
io.sentry.SentryEvent: void setFingerprints(java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
io.flutter.plugin.platform.PlatformViewsController: void access$1800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.sentry.UserFeedback: java.lang.String getComments()
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onRestoreInstanceState(android.os.Bundle)
io.sentry.SentryOptions$Proxy: void setType(java.net.Proxy$Type)
io.sentry.Integration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.vendor.Base64$Decoder: boolean process(byte[],int,int,boolean)
io.sentry.SentryReplayOptions: void setMaskAllImages(boolean)
io.sentry.ProfilingTraceData: void setTransactionName(java.lang.String)
io.sentry.android.ndk.NativeScope: void nativeRemoveTag(java.lang.String)
io.sentry.metrics.CounterMetric: int getWeight()
io.sentry.android.replay.ReplayIntegration: java.util.concurrent.ScheduledExecutorService getReplayExecutor()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.OptionsContainer: io.sentry.OptionsContainer create(java.lang.Class)
io.sentry.android.replay.ModifierExtensionsKt: androidx.compose.ui.Modifier sentryReplayUnmask(androidx.compose.ui.Modifier)
io.sentry.android.core.internal.util.AndroidMainThreadChecker: boolean isMainThread(io.sentry.protocol.SentryThread)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
io.sentry.clientreport.ClientReportRecorder: io.sentry.DataCategory categoryFromItemType(io.sentry.SentryItemType)
io.sentry.android.replay.ReplayFrame: java.lang.String getScreen()
io.sentry.DiagnosticLogger: DiagnosticLogger(io.sentry.SentryOptions,io.sentry.ILogger)
io.sentry.SentryExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.Map access$2300(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.android.core.BuildInfoProvider: java.lang.Boolean isEmulator()
io.sentry.IScope: void clear()
io.sentry.protocol.Browser: java.lang.String access$102(io.sentry.protocol.Browser,java.lang.String)
io.sentry.internal.gestures.UiElement: java.lang.String getResourceName()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: void setSpellCheckMethodHandler(io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler)
io.sentry.ScopeObserverAdapter: void setExtras(java.util.Map)
io.sentry.ProfilingTraceData: void setDeviceCpuFrequencies(java.util.List)
io.sentry.ProfilingTraceData: java.util.List access$1002(io.sentry.ProfilingTraceData,java.util.List)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.sentry.protocol.Request: void setFragment(java.lang.String)
io.sentry.Session: void setUnknown(java.util.Map)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
io.sentry.Scope: void setScreen(java.lang.String)
io.sentry.protocol.Message: java.lang.String access$102(io.sentry.protocol.Message,java.lang.String)
io.sentry.protocol.MetricSummary: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.internal.gestures.AndroidViewGestureTargetLocator: io.sentry.internal.gestures.UiElement createUiElement(android.view.View)
io.sentry.ProfilingTraceData: java.lang.String getDevicePhysicalMemoryBytes()
io.sentry.rrweb.RRWebInteractionMoveEvent: RRWebInteractionMoveEvent()
io.sentry.android.core.ActivityFramesTracker$FrameCounts: ActivityFramesTracker$FrameCounts(int,int,int)
io.sentry.flutter.SentryFlutter$updateOptions$10: java.lang.Object invoke(java.lang.Object)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: boolean addConnectionStatusObserver(io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void flush()
io.sentry.vendor.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
io.sentry.ReplayRecording$Deserializer: ReplayRecording$Deserializer()
io.sentry.Attachment: io.sentry.JsonSerializable getSerializable()
io.sentry.HubAdapter: io.sentry.protocol.SentryId getLastEventId()
io.sentry.Hub: io.sentry.protocol.SentryId getLastEventId()
io.flutter.plugin.common.MethodChannel$MethodCallHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
io.sentry.protocol.SentryRuntime$Deserializer: io.sentry.protocol.SentryRuntime deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.instrumentation.file.SentryFileInputStream: java.lang.Integer lambda$read$2(byte[],int,int)
io.sentry.protocol.DebugImage: java.lang.Long getImageSize()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
io.sentry.MonitorScheduleType: io.sentry.MonitorScheduleType valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
io.sentry.NoOpTransaction: void setData(java.lang.String,java.lang.Object)
io.sentry.android.replay.util.ComposeTextLayout: java.lang.Integer getDominantTextColor()
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter value(java.lang.Boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
io.sentry.protocol.App: void setAppStartTime(java.util.Date)
io.sentry.cache.PersistingOptionsObserver: java.lang.Object read(io.sentry.SentryOptions,java.lang.String,java.lang.Class,io.sentry.JsonDeserializer)
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
io.sentry.SentryAppStartProfilingOptions: boolean isTraceSampled()
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
io.sentry.android.core.SentryPerformanceProvider: boolean onCreate()
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.protocol.SentryId getCurrentReplayId()
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: int getWidth()
io.sentry.android.core.DefaultAndroidEventProcessor: void setDevice(io.sentry.SentryBaseEvent,boolean,boolean)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.android.replay.capture.BaseCaptureStrategy: io.sentry.android.replay.ScreenshotRecorderConfig getRecorderConfig()
io.sentry.hints.Flushable: boolean waitFlush()
io.sentry.android.replay.SessionReplayOptionsKt: boolean getMaskAllText(io.sentry.SentryReplayOptions)
io.sentry.util.MapObjectReader: java.lang.Object nextObjectOrNull()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service getService()
io.sentry.SentryEnvelopeItem: io.sentry.SentryEvent getEvent(io.sentry.ISerializer)
io.sentry.rrweb.RRWebBreadcrumbEvent: void serializePayload(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage queueImage(android.media.Image)
io.sentry.protocol.OperatingSystem: void setVersion(java.lang.String)
io.sentry.ISpan: java.lang.String getTag(java.lang.String)
io.sentry.Hub: void reportFullyDisplayed()
io.sentry.Scope: void setTransaction(io.sentry.ITransaction)
io.sentry.flutter.SentryFlutter$updateOptions$27: java.lang.Object invoke(java.lang.Object)
io.sentry.rrweb.RRWebSpanEvent: void setStartTimestamp(double)
io.sentry.android.core.CurrentActivityHolder: void setActivity(android.app.Activity)
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion getSdkVersion()
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
io.sentry.SentryOptions: java.util.List getOptionsObservers()
io.sentry.IHub: io.sentry.protocol.SentryId captureEnvelope(io.sentry.SentryEnvelope,io.sentry.Hint)
io.sentry.android.core.AndroidLogger: AndroidLogger()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.sentry.android.replay.util.MainLooperHandler: MainLooperHandler(android.os.Looper)
io.flutter.plugin.common.BinaryMessenger$-CC: void $default$setMessageHandler(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
io.sentry.rrweb.RRWebInteractionMoveEvent$Position$Deserializer: io.sentry.rrweb.RRWebInteractionMoveEvent$Position deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.Hub: void startSession()
io.flutter.plugin.text.ProcessTextPlugin: java.util.Map queryTextActions()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
io.sentry.MetricsAggregator: void increment(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,long,io.sentry.metrics.LocalMetricsAggregator)
io.sentry.protocol.OperatingSystem: java.lang.Boolean access$502(io.sentry.protocol.OperatingSystem,java.lang.Boolean)
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
io.sentry.vendor.Base64: byte[] decode(java.lang.String,int)
io.sentry.SentryOptions$BeforeSendCallback: io.sentry.SentryEvent execute(io.sentry.SentryEvent,io.sentry.Hint)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
io.sentry.vendor.gson.stream.JsonReader: void push(int)
io.sentry.Baggage: java.lang.String getTraceId()
io.sentry.Sentry: void close()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
io.sentry.transport.HttpConnection: boolean isSuccessfulResponseCode(int)
io.flutter.embedding.android.KeyboardMap: KeyboardMap()
io.sentry.util.HintUtils: void setIsFromHybridSdk(io.sentry.Hint,java.lang.String)
io.sentry.SentryTracer: void finish(io.sentry.SpanStatus,io.sentry.SentryDate,boolean,io.sentry.Hint)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder handleDeeplinking(boolean)
io.sentry.transport.HttpConnection: java.lang.String getErrorMessageFromStream(java.net.HttpURLConnection)
io.sentry.TraceContext: java.lang.String getUserSegment()
io.sentry.ProfilingTransactionData: ProfilingTransactionData()
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: android.view.View getPlatformViewById(int)
io.sentry.clientreport.IClientReportStorage: void addCount(io.sentry.clientreport.ClientReportKey,java.lang.Long)
io.sentry.protocol.ViewHierarchyNode: ViewHierarchyNode()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
io.sentry.ProfilingTraceData: java.lang.String getRelease()
io.sentry.protocol.SentryStackTrace: SentryStackTrace(java.util.List)
io.sentry.SentryReplayEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
io.sentry.protocol.Response: java.lang.Integer getStatusCode()
io.sentry.instrumentation.file.SentryFileOutputStream$Factory: java.io.FileOutputStream create(java.io.FileOutputStream,java.io.File)
io.sentry.Attachment: io.sentry.Attachment fromThreadDump(byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
io.sentry.android.core.NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback: NetworkBreadcrumbsIntegration$NetworkBreadcrumbsNetworkCallback(io.sentry.IHub,io.sentry.android.core.BuildInfoProvider,io.sentry.SentryDateProvider)
io.sentry.SentryOptions$Cron: java.lang.Long getDefaultFailureIssueThreshold()
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean add(android.view.View)
io.sentry.UncaughtExceptionHandler$Adapter: UncaughtExceptionHandler$Adapter()
io.sentry.config.PropertiesLoader: java.util.Properties load()
io.sentry.protocol.DebugImage: void setType(java.lang.String)
io.sentry.metrics.MetricsHelper: java.lang.String getTagsKey(java.util.Map)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResources(java.util.Collection)
io.sentry.cache.tape.QueueFile: void remove()
io.flutter.plugin.editing.SpellCheckPlugin: void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryReplayEvent: void setErrorIds(java.util.List)
io.flutter.embedding.android.KeyData$Type: KeyData$Type(java.lang.String,int,long)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void offset(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.replay.capture.BaseCaptureStrategy: void resume()
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(java.lang.Boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)
io.sentry.protocol.Geo: Geo()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.ISentryExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)
io.sentry.android.core.ActivityFramesTracker: void snapshotFrameCountsAtStart(android.app.Activity)
io.sentry.protocol.Device: java.lang.Boolean isCharging()
io.sentry.android.core.ActivityLifecycleIntegration: void finishExceededTtfdSpan(io.sentry.ISpan,io.sentry.ISpan)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $values()
io.sentry.transport.StdoutTransport: void close(boolean)
io.sentry.MeasurementUnit: java.lang.String apiName()
io.sentry.transport.QueuedThreadPoolExecutor: boolean didRejectRecently()
io.sentry.NoOpEnvelopeReader: io.sentry.SentryEnvelope read(java.io.InputStream)
io.sentry.JsonSerializer: JsonSerializer(io.sentry.SentryOptions)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: java.util.ArrayDeque access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader)
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: boolean isFrozen(long)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void updateBackGestureProgress(android.window.BackEvent)
io.sentry.android.core.internal.util.AndroidMainThreadChecker: io.sentry.android.core.internal.util.AndroidMainThreadChecker getInstance()
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.sentry.protocol.User: void setEmail(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
io.sentry.android.core.AndroidLogger: void log(io.sentry.SentryLevel,java.lang.Throwable,java.lang.String,java.lang.Object[])
io.sentry.android.ndk.DebugImagesLoader: DebugImagesLoader(io.sentry.android.core.SentryAndroidOptions,io.sentry.android.ndk.NativeModuleListLoader)
io.sentry.vendor.Base64$Decoder: Base64$Decoder(int,byte[])
io.flutter.plugin.common.BinaryMessenger$-CC: void $default$disableBufferingIncomingMessages(io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: DartMessenger$BufferedMessageInfo(java.nio.ByteBuffer,int,long)
io.sentry.flutter.SentryFlutter$updateOptions$17: void invoke(boolean)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode: void setImportantForCaptureToAncestors(boolean)
io.sentry.util.HintUtils: void setTypeCheckHint(io.sentry.Hint,java.lang.Object)
io.sentry.protocol.App: java.util.List getViewNames()
io.sentry.metrics.MetricsHelper: void setFlushShiftMs(long)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
io.sentry.cache.PersistingOptionsObserver: void delete(java.lang.String)
io.sentry.protocol.Gpu: void setVendorId(java.lang.String)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
io.sentry.vendor.gson.stream.JsonReader: boolean fillBuffer(int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$1: void setFrameworkHandlesBack(boolean)
io.sentry.android.replay.RootViewsSpy$delegatingViewList$1: boolean remove(java.lang.Object)
io.sentry.SentryBaseEvent$Serializer: SentryBaseEvent$Serializer()
io.sentry.SpanOptions: void setIdle(boolean)
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
io.sentry.android.core.AndroidProfiler: java.util.ArrayDeque access$200(io.sentry.android.core.AndroidProfiler)
io.sentry.vendor.gson.stream.JsonWriter: void beforeName()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
io.sentry.android.core.internal.debugmeta.AssetsDebugMetaLoader: AssetsDebugMetaLoader(android.content.Context,io.sentry.ILogger)
io.sentry.android.ndk.INativeScope: void setTag(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterFragment: boolean access$000(io.flutter.embedding.android.FlutterFragment,java.lang.String)
io.sentry.protocol.SentryThread: java.lang.String getName()
io.sentry.protocol.Device: void setExternalFreeStorage(java.lang.Long)
io.flutter.plugin.common.MethodChannel$Result: void success(java.lang.Object)
io.sentry.ProfilingTraceData: java.lang.String access$1602(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.replay.ReplayFrame: io.sentry.android.replay.ReplayFrame copy$default(io.sentry.android.replay.ReplayFrame,java.io.File,long,java.lang.String,int,java.lang.Object)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: GeneratedPluginRegister()
io.sentry.util.thread.MainThreadChecker: MainThreadChecker()
io.sentry.android.core.internal.util.AndroidMainThreadChecker: boolean isMainThread(long)
io.sentry.SentryInstantDateProvider: SentryInstantDateProvider()
io.sentry.EventProcessor$-CC: io.sentry.protocol.SentryTransaction $default$process(io.sentry.EventProcessor,io.sentry.protocol.SentryTransaction,io.sentry.Hint)
io.sentry.instrumentation.file.SentryFileInputStream: java.lang.Integer lambda$read$1(byte[])
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.sentry.SynchronizedQueue: java.lang.Object peek()
io.sentry.protocol.SdkVersion: void setUnknown(java.util.Map)
io.sentry.DuplicateEventDetectionEventProcessor: boolean containsAnyKey(java.util.Map,java.util.List)
io.sentry.NoOpSentryExecutorService: java.util.concurrent.Future schedule(java.lang.Runnable,long)
io.sentry.transport.ProxyAuthenticator: ProxyAuthenticator(java.lang.String,java.lang.String)
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.QueuedThreadPoolExecutor initExecutor(int,io.sentry.cache.IEnvelopeCache,io.sentry.ILogger,io.sentry.SentryDateProvider)
io.sentry.IHub: boolean isHealthy()
io.sentry.protocol.SentryStackFrame$Deserializer: io.sentry.protocol.SentryStackFrame deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
io.flutter.view.AccessibilityBridge: boolean lambda$shouldSetCollectionInfo$0(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.clientreport.NoOpClientReportRecorder: void recordLostEnvelope(io.sentry.clientreport.DiscardReason,io.sentry.SentryEnvelope)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
io.sentry.SentryClient: boolean shouldSendSessionUpdateForDroppedEvent(io.sentry.Session,io.sentry.Session)
io.sentry.flutter.SentryFlutterPlugin: io.flutter.plugin.common.MethodChannel access$getChannel$p(io.sentry.flutter.SentryFlutterPlugin)
io.sentry.ObjectReader: void endArray()
io.sentry.SentryOptions: void setEnablePrettySerializationOutput(boolean)
io.flutter.plugin.editing.SpellCheckPlugin: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])
io.sentry.SentryReplayOptions$SentryReplayQuality: io.sentry.SentryReplayOptions$SentryReplayQuality[] $values()
io.sentry.DefaultTransactionPerformanceCollector: long access$100(io.sentry.DefaultTransactionPerformanceCollector)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setWaitForRestorationData(boolean)
io.sentry.instrumentation.file.SentryFileInputStream: SentryFileInputStream(java.io.File)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureReplay(io.sentry.SentryReplayEvent,io.sentry.Hint)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
io.sentry.NoOpEnvelopeReader: NoOpEnvelopeReader()
io.sentry.android.core.ActivityFramesTracker: io.sentry.android.core.ActivityFramesTracker$FrameCounts calculateCurrentFrameCounts()
io.sentry.util.Random: boolean nextBoolean()
io.sentry.SentryEnvelope: SentryEnvelope(io.sentry.protocol.SentryId,io.sentry.protocol.SdkVersion,java.lang.Iterable)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
io.sentry.SentryEvent: void setLogger(java.lang.String)
io.sentry.SentrySpanStorage: io.sentry.ISpan removeAndGet(java.lang.String)
io.sentry.android.replay.video.SimpleFrameMuxer: boolean isStarted()
io.sentry.util.HintUtils: io.sentry.Hint createWithTypeCheckHint(java.lang.Object)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromEvent$3(io.sentry.ISerializer,io.sentry.SentryBaseEvent)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
io.sentry.android.core.cache.AndroidEnvelopeCache: void writeLastReportedAnrMarker(java.lang.Long)
io.sentry.NoOpReplayController: io.sentry.protocol.SentryId getReplayId()
io.sentry.rrweb.RRWebVideoEvent: int getFrameCount()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.sentry.ITransaction: void forceFinish(io.sentry.SpanStatus,boolean,io.sentry.Hint)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: ProcessTextChannel(io.flutter.embedding.engine.dart.DartExecutor,android.content.pm.PackageManager)
io.sentry.SentryItemType$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
io.sentry.SentryLockReason: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
io.sentry.android.core.DeviceInfoUtil: void setDeviceIO(io.sentry.protocol.Device,boolean)
io.sentry.internal.modules.ManifestModulesLoader: java.lang.String extractDependencyNameFromUrl(java.net.URL)
io.sentry.android.core.ActivityLifecycleIntegration: void finishSpan(io.sentry.ISpan)
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
io.sentry.protocol.ViewHierarchyNode: java.lang.String getIdentifier()
io.sentry.NoOpTransaction: java.lang.Object getData(java.lang.String)
io.sentry.SentryClient: SentryClient(io.sentry.SentryOptions)
io.sentry.ITransaction: void setName(java.lang.String,io.sentry.protocol.TransactionNameSource)
io.sentry.android.core.DeviceInfoUtil: android.content.Intent getBatteryIntent()
io.sentry.JsonUnknown: void setUnknown(java.util.Map)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
io.sentry.ObjectReader: java.util.Map nextMapOrNull(io.sentry.ILogger,io.sentry.JsonDeserializer)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(java.util.Set)
io.sentry.android.replay.util.NodesKt: float fastMinOf(float,float,float,float)
io.sentry.SentryClient: io.sentry.SentryEnvelope buildEnvelope(io.sentry.UserFeedback)
androidx.appcompat.widget.SearchView: int getMaxWidth()
io.flutter.plugin.editing.TextEditingDelta: int getNewSelectionEnd()
io.sentry.util.UrlUtils: java.lang.String extractBaseUrl(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.sentry.rrweb.RRWebVideoEvent: java.lang.String access$402(io.sentry.rrweb.RRWebVideoEvent,java.lang.String)
io.sentry.Session: java.lang.String getEnvironment()
io.sentry.TransactionContext: io.sentry.Baggage getBaggage()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
io.sentry.android.core.internal.util.DeviceOrientations: DeviceOrientations()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.sentry.util.HintUtils: boolean shouldApplyScopeData(io.sentry.Hint)
io.sentry.MonitorSchedule: java.lang.String getType()
io.sentry.android.replay.video.SimpleMp4FrameMuxer: void start(android.media.MediaFormat)
io.sentry.android.core.performance.AppStartMetrics: void setAppLaunchedInForeground(boolean)
io.sentry.util.PropagationTargetsUtils: boolean contain(java.util.List,java.net.URI)
io.sentry.Sentry: io.sentry.SentryTraceHeader getTraceparent()
io.sentry.android.core.SpanFrameMetricsCollector: void onSpanStarted(io.sentry.ISpan)
io.sentry.SentryOptions: boolean isEnableMetrics()
io.sentry.rrweb.RRWebSpanEvent: java.util.Map getPayloadUnknown()
io.sentry.android.core.ActivityLifecycleIntegration: java.util.WeakHashMap getTtfdSpanMap()
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
io.sentry.NoOpSerializer: java.lang.Object deserialize(java.io.Reader,java.lang.Class)
io.sentry.SentryOptions: boolean isSendDefaultPii()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
io.sentry.SpanContext$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
io.sentry.UserFeedback: io.sentry.protocol.SentryId getEventId()
io.sentry.DefaultTransactionPerformanceCollector: void lambda$start$0(io.sentry.ITransaction)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.flutter.view.AccessibilityBridge: void access$300(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
io.sentry.Attachment: Attachment(byte[],java.lang.String,java.lang.String)
io.sentry.instrumentation.file.SentryFileInputStream: io.sentry.instrumentation.file.FileInputStreamInitData init(java.io.File,java.io.FileInputStream,io.sentry.IHub)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
io.sentry.SentryOptions: java.lang.Long getIdleTimeout()
io.sentry.android.core.internal.threaddump.Lines: void rewind()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.RenderMode getRenderMode()
io.sentry.SentryEnvelopeItemHeader: SentryEnvelopeItemHeader(io.sentry.SentryItemType,java.util.concurrent.Callable,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
io.flutter.embedding.android.KeyEmbedderResponder: void lambda$sendKeyEvent$2(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewWrapper: PlatformViewWrapper(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
io.sentry.android.core.AndroidLogger: boolean isEnabled(io.sentry.SentryLevel)
io.sentry.SentryEvent: java.util.List access$702(io.sentry.SentryEvent,java.util.List)
io.sentry.SentryReplayEvent: void setUrls(java.util.List)
io.flutter.embedding.engine.FlutterEngineGroup$1: FlutterEngineGroup$1(io.flutter.embedding.engine.FlutterEngineGroup,io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String)
io.sentry.android.core.util.AndroidLazyEvaluator: AndroidLazyEvaluator(io.sentry.android.core.util.AndroidLazyEvaluator$AndroidEvaluator)
io.sentry.transport.AsyncHttpTransport$AsyncConnectionThreadFactory: AsyncHttpTransport$AsyncConnectionThreadFactory(io.sentry.transport.AsyncHttpTransport$1)
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.util.MapObjectReader: boolean nextBoolean()
io.sentry.internal.modules.ManifestModulesLoader: java.util.Map loadModules()
io.sentry.SentryTracer: io.sentry.ISpan startChild(java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter,io.sentry.SpanOptions)
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1: void onImageAvailable(android.media.ImageReader)
io.sentry.android.core.AndroidCpuCollector: void setup()
io.sentry.util.MapObjectReader: java.util.Date nextDateOrNull(io.sentry.ILogger)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.sentry.flutter.SentryFlutter$updateOptions$24: void invoke(java.util.Map)
io.flutter.embedding.android.FlutterEngineProvider: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.sentry.vendor.gson.stream.JsonWriter: io.sentry.vendor.gson.stream.JsonWriter name(java.lang.String)
io.sentry.util.thread.IMainThreadChecker: boolean isMainThread(io.sentry.protocol.SentryThread)
io.sentry.SentryBaseEvent: java.lang.String access$502(io.sentry.SentryBaseEvent,java.lang.String)
io.sentry.protocol.Device: java.lang.Long getFreeStorage()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.sentry.DateUtils: java.util.Date getDateTime(long)
io.flutter.plugin.common.EventChannel$EventSink: void success(java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.sentry.protocol.Browser: Browser()
io.sentry.protocol.Gpu: java.lang.Integer access$402(io.sentry.protocol.Gpu,java.lang.Integer)
io.sentry.instrumentation.file.SentryFileReader: SentryFileReader(java.io.File,io.sentry.IHub)
io.sentry.android.ndk.NativeModuleListLoader: io.sentry.protocol.DebugImage[] nativeLoadModuleList()
xyz.luan.audioplayers.AudioplayersPlugin: AudioplayersPlugin()
io.sentry.IScope: void setContexts(java.lang.String,java.lang.Object[])
io.sentry.DisabledQueue$1: DisabledQueue$1(io.sentry.DisabledQueue)
io.sentry.ProfilingTraceData: void setDevicePhysicalMemoryBytes(java.lang.String)
io.sentry.android.core.AppComponentsBreadcrumbsIntegration: void onConfigurationChanged(android.content.res.Configuration)
io.sentry.SentryEnvelopeItem$CachedItem: byte[] getBytes()
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
io.sentry.CircularFifoQueue$1: void remove()
io.sentry.IPerformanceContinuousCollector: void onSpanStarted(io.sentry.ISpan)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
io.sentry.Hub: void assignTraceContext(io.sentry.SentryEvent)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] values()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: android.os.Bundle createArgs()
io.sentry.android.replay.video.MuxerConfig: int getRecordingWidth()
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter beginObject()
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceCreated()
io.flutter.view.AccessibilityBridge: int access$7400()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.fragment.app.Fragment: boolean isPostponed()
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
io.sentry.android.core.SentryAndroidOptions: boolean isReportHistoricalAnrs()
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder initialRoute(java.lang.String)
io.sentry.android.core.UserInteractionIntegration: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.protocol.Request: java.lang.String access$402(io.sentry.protocol.Request,java.lang.String)
io.sentry.clientreport.DiscardedEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.video.SimpleVideoEncoder: android.media.MediaFormat getMediaFormat()
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.sentry.TraceContext$Deserializer: io.sentry.TraceContext deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
io.sentry.util.thread.MainThreadChecker: boolean isMainThread(long)
io.sentry.metrics.MetricsApi: void timing(java.lang.String,java.lang.Runnable)
io.sentry.android.replay.WindowRecorder: WindowRecorder(io.sentry.SentryOptions,io.sentry.android.replay.ScreenshotRecorderCallback,io.sentry.android.replay.util.MainLooperHandler,java.util.concurrent.ScheduledExecutorService,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.SentryLockReason: java.lang.Long access$402(io.sentry.SentryLockReason,java.lang.Long)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
io.sentry.android.core.ContextUtils: java.lang.String lambda$static$0(android.content.Context)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean verifyJNI()
io.sentry.protocol.App: java.lang.Boolean getInForeground()
io.sentry.android.replay.LastSegmentData: int getId()
io.flutter.util.TraceSection: void beginAsyncSection(java.lang.String,int)
io.sentry.ProfilingTraceData: ProfilingTraceData(java.io.File,java.util.Date,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.util.concurrent.Callable,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)
io.sentry.SentryOptions: void setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
io.sentry.android.replay.video.MuxerConfig: io.sentry.android.replay.video.MuxerConfig copy(java.io.File,int,int,int,int,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.sentry.android.core.NetworkBreadcrumbsIntegration: android.content.Context access$300(io.sentry.android.core.NetworkBreadcrumbsIntegration)
io.sentry.SentryAppStartProfilingOptions: java.lang.Double getProfileSampleRate()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.sentry.PropagationContext: io.sentry.PropagationContext fromHeaders(io.sentry.SentryTraceHeader,io.sentry.Baggage,io.sentry.SpanId)
io.sentry.android.replay.ReplayIntegration: void access$checkCanRecord(io.sentry.android.replay.ReplayIntegration)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: boolean clipboardHasStrings()
io.flutter.embedding.android.FlutterFragment: void onFlutterUiNoLongerDisplayed()
io.sentry.Baggage: void setTransaction(java.lang.String)
io.sentry.protocol.SdkVersion: java.util.List getPackages()
io.sentry.protocol.Contexts: io.sentry.protocol.Gpu getGpu()
io.sentry.protocol.MeasurementValue: java.lang.Number getValue()
io.sentry.android.core.AndroidLogger: void log(io.sentry.SentryLevel,java.lang.String,java.lang.Object[])
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$2: FlutterBluePlusPlugin$2(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.android.core.AppLifecycleIntegration: void removeObserver()
io.sentry.Sentry: io.sentry.protocol.SentryId captureMessage(java.lang.String)
io.sentry.SentryEnvelopeItemHeader: void setUnknown(java.util.Map)
io.sentry.instrumentation.file.SentryFileOutputStream: SentryFileOutputStream(java.io.File,boolean,io.sentry.IHub)
io.sentry.android.core.performance.AppStartMetrics: void registerLifecycleCallbacks(android.app.Application)
io.sentry.protocol.Contexts: io.sentry.protocol.OperatingSystem getOperatingSystem()
io.sentry.android.core.internal.gestures.WindowCallbackAdapter: boolean onPreparePanel(int,android.view.View,android.view.Menu)
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
io.sentry.transport.ProxyAuthenticator: java.lang.String getUser()
io.sentry.util.SampleRateUtils: boolean isValidTracesSampleRate(java.lang.Double,boolean)
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.android.core.SpanFrameMetricsCollector: void onSpanFinished(io.sentry.ISpan)
io.sentry.android.replay.ReplayIntegration: void pauseInternal()
io.sentry.protocol.DebugMeta$Deserializer: DebugMeta$Deserializer()
io.flutter.util.PathUtils: java.lang.String getDataDirPath(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$2: java.lang.Object invoke()
io.sentry.SentryTracer: io.sentry.SentryTraceHeader toSentryTrace()
io.sentry.android.replay.capture.BufferCaptureStrategy$rotate$1: java.lang.Boolean invoke(io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created)
io.sentry.SentryStackTraceFactory: java.util.List getInAppCallStack(java.lang.Throwable)
io.sentry.cache.PersistingScopeObserver: void lambda$setRequest$6(io.sentry.protocol.Request)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.app.JobIntentService: JobIntentService()
io.sentry.Baggage: io.sentry.Baggage fromHeader(java.util.List,boolean,io.sentry.ILogger)
io.sentry.android.core.performance.WindowContentChangedCallback: void onContentChanged()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.common.BasicMessageChannel$Reply: void reply(java.lang.Object)
io.sentry.protocol.SentryStackFrame: java.lang.String getRawFunction()
io.sentry.android.replay.ReplayFrame: java.lang.String toString()
io.sentry.ExternalOptions: java.util.List getTracePropagationTargets()
io.sentry.EnvelopeSender: void lambda$processFile$1(java.lang.Throwable,java.io.File,io.sentry.hints.Retryable)
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float,boolean)
io.sentry.android.core.internal.util.AndroidMainThreadChecker: boolean isMainThread()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String access$1500(int)
io.sentry.SentryWrapper: java.lang.Object lambda$wrapSupplier$1(io.sentry.IHub,java.util.function.Supplier)
io.sentry.TraceContext: java.lang.String getTransaction()
io.sentry.android.core.performance.TimeSpan: double getProjectedStopTimestampSecs()
io.sentry.protocol.Geo: void setCity(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
io.sentry.SentryItemType: SentryItemType(java.lang.String,int,java.lang.String)
io.sentry.protocol.User: void setId(java.lang.String)
io.sentry.Span: void setTag(java.lang.String,java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
io.sentry.android.core.internal.util.AndroidConnectionStatusProvider: void removeConnectionStatusObserver(io.sentry.IConnectionStatusProvider$IConnectionStatusObserver)
io.sentry.android.replay.capture.CaptureStrategy$ReplaySegment$Created: io.sentry.SentryReplayEvent getReplay()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
io.sentry.android.core.DefaultAndroidEventProcessor: DefaultAndroidEventProcessor(android.content.Context,io.sentry.android.core.BuildInfoProvider,io.sentry.android.core.SentryAndroidOptions)
io.sentry.CircularFifoQueue$1: java.lang.Object next()
io.sentry.cache.CacheStrategy: io.sentry.SentryEnvelope buildNewEnvelope(io.sentry.SentryEnvelope,io.sentry.SentryEnvelopeItem)
io.sentry.NoOpHub: void setUser(io.sentry.protocol.User)
io.sentry.SentryTracer: java.util.concurrent.atomic.AtomicBoolean isFinishTimerRunning()
io.sentry.android.core.SentryAndroidOptions: void setEnableNetworkEventBreadcrumbs(boolean)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.sentry.protocol.Request$Deserializer: Request$Deserializer()
io.sentry.protocol.DebugMeta: void setImages(java.util.List)
io.sentry.flutter.SentryFlutterPlugin$setupReplay$3: SentryFlutterPlugin$setupReplay$3(io.sentry.flutter.SentryFlutterPlugin)
io.sentry.protocol.Mechanism$JsonKeys: Mechanism$JsonKeys()
kotlin.jvm.internal.Lambda: java.lang.String toString()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
io.sentry.transport.NoOpTransportGate: io.sentry.transport.NoOpTransportGate getInstance()
io.sentry.android.replay.ReplayCache$persistSegmentValues$2: ReplayCache$persistSegmentValues$2()
androidx.lifecycle.ProcessLifecycleOwner: ProcessLifecycleOwner()
io.sentry.SentryEnvelopeItemHeader: SentryEnvelopeItemHeader(io.sentry.SentryItemType,java.util.concurrent.Callable,java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.app.Activity getActivity()
io.sentry.cache.CacheStrategy: void sortFilesOldestToNewest(java.io.File[])
io.sentry.metrics.MetricsApi: void increment(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map,java.lang.Long)
io.sentry.flutter.SentryFlutter$updateOptions$13: SentryFlutter$updateOptions$13(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SynchronizedCollection: SynchronizedCollection(java.util.Collection)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.sentry.flutter.SentryFlutterReplayRecorder: void start(io.sentry.android.replay.ScreenshotRecorderConfig)
io.sentry.SentryItemType: io.sentry.SentryItemType valueOfLabel(java.lang.String)
io.sentry.android.replay.ReplayIntegration$captureReplay$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.sentry.IHub$-CC: io.sentry.protocol.SentryId $default$captureException(io.sentry.IHub,java.lang.Throwable)
io.flutter.plugin.platform.VirtualDisplayController$1: void onPaused()
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$4: CaptureStrategy$Companion$buildReplay$4(java.util.Date,java.util.List)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
io.flutter.embedding.android.KeyData: KeyData()
io.sentry.SamplingContext: io.sentry.TransactionContext getTransactionContext()
io.sentry.protocol.OperatingSystem: java.lang.String getVersion()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
io.sentry.android.core.performance.TimeSpan: void stop()
io.sentry.cache.PersistingScopeObserver: java.lang.Object read(io.sentry.SentryOptions,java.lang.String,java.lang.Class)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
io.sentry.SynchronizedCollection: java.util.Iterator iterator()
io.sentry.transport.RateLimiter$1: void run()
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: io.sentry.rrweb.RRWebEvent convert(io.sentry.Breadcrumb)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.sentry.android.core.SentryLogcatAdapter: int v(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
io.sentry.IScope: void clearTransaction()
io.sentry.rrweb.RRWebMetaEvent: int getWidth()
io.sentry.Hub: void addBreadcrumb(io.sentry.Breadcrumb,io.sentry.Hint)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void access$100(io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.IHub: java.lang.Boolean isCrashedLastRun()
io.flutter.embedding.android.FlutterEngineConfigurator: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
io.sentry.SentryOptions: void setProxy(io.sentry.SentryOptions$Proxy)
io.sentry.TracesSamplingDecision: TracesSamplingDecision(java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
io.sentry.cache.tape.QueueFile: java.lang.Throwable getSneakyThrowable(java.lang.Throwable)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
io.flutter.embedding.engine.systemchannels.ScribeChannel: void isStylusHandwritingAvailable(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.sentry.ProfilingTraceData: int access$102(io.sentry.ProfilingTraceData,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
io.flutter.plugin.common.StringCodec: StringCodec()
io.sentry.android.replay.capture.BaseCaptureStrategy: java.io.File getReplayCacheDir()
io.sentry.android.core.internal.util.SentryFrameMetricsCollector: long getFrameCpuDuration(android.view.FrameMetrics)
io.sentry.ProfilingTraceData: java.lang.String getTransactionName()
io.sentry.android.replay.RootViewsSpy$listeners$1: io.sentry.android.replay.OnRootViewsChangedListener remove(int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $values()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.sentry.android.replay.ScreenshotRecorder: io.sentry.android.replay.ScreenshotRecorderConfig getConfig()
io.sentry.SentryEnvelopeItem: java.lang.Integer lambda$fromProfilingTrace$19(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.clientreport.IClientReportRecorder: void recordLostEnvelopeItem(io.sentry.clientreport.DiscardReason,io.sentry.SentryEnvelopeItem)
io.sentry.SentryOptions: void setEnableSpanLocalMetricAggregation(boolean)
io.sentry.Scope: void setContexts(java.lang.String,java.lang.Object[])
io.sentry.Hub: io.sentry.protocol.SentryId captureExceptionInternal(java.lang.Throwable,io.sentry.Hint,io.sentry.ScopeCallback)
io.sentry.protocol.ViewHierarchy: java.lang.String getRenderingSystem()
io.sentry.protocol.SentryThread: void setStacktrace(io.sentry.protocol.SentryStackTrace)
io.sentry.transport.AuthenticatorWrapper: AuthenticatorWrapper()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setNativeSpellCheckServiceDefined(boolean)
io.flutter.plugin.platform.PlatformViewWrapper: void release()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void clearFocus(int)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$2: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
io.flutter.embedding.android.FlutterView: void onDetachedFromWindow()
io.sentry.ProfilingTransactionData: void setName(java.lang.String)
io.sentry.config.AbstractPropertiesProvider: AbstractPropertiesProvider(java.util.Properties)
io.sentry.TracesSamplingDecision: java.lang.Boolean getSampled()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
io.sentry.transport.AuthenticatorWrapper: void setDefault(java.net.Authenticator)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$Companion: ViewHierarchyNode$Companion()
io.flutter.embedding.android.FlutterFragmentActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterActivity$1: FlutterActivity$1(io.flutter.embedding.android.FlutterActivity)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.android.replay.ReplayIntegration: void start()
io.sentry.protocol.SentryThread: void setDaemon(java.lang.Boolean)
io.sentry.ExternalOptions: java.lang.Boolean getSendClientReports()
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.SentryEvent process(io.sentry.SentryEvent,io.sentry.Hint)
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode valueOf(java.lang.String)
io.sentry.internal.modules.ManifestModulesLoader: java.util.List detectModulesViaManifestFiles()
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
io.sentry.transport.ReusableCountLatch: void waitTillZero()
io.sentry.android.core.ActivityLifecycleIntegration: void stopTracing(android.app.Activity,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
io.sentry.android.core.ViewHierarchyEventProcessor: io.sentry.protocol.ViewHierarchy snapshotViewHierarchy(android.view.View)
io.sentry.transport.RateLimiter$1: RateLimiter$1(io.sentry.transport.RateLimiter)
io.sentry.protocol.App: java.lang.Boolean access$802(io.sentry.protocol.App,java.lang.Boolean)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$1: BaseCaptureStrategy$special$$inlined$persistableAtomic$default$2$1(kotlin.jvm.functions.Function0)
io.sentry.NoOpScope: void clear()
io.sentry.android.core.internal.util.CpuInfoUtils: java.lang.String getSystemCpuPath()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.util.MapObjectReader: java.lang.Double nextDoubleOrNull()
io.sentry.android.core.ActivityLifecycleIntegration: void onFirstFrameDrawn(io.sentry.ISpan,io.sentry.ISpan)
io.sentry.protocol.SentryId: java.lang.String toString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
io.sentry.CheckIn: CheckIn(io.sentry.protocol.SentryId,java.lang.String,io.sentry.CheckInStatus)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.graphics.Bitmap getBitmap()
io.sentry.SentryTracer: io.sentry.ISpan startChild(io.sentry.SpanId,java.lang.String,java.lang.String,io.sentry.SentryDate,io.sentry.Instrumenter)
io.sentry.NoOpSentryClient: NoOpSentryClient()
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
io.sentry.android.core.EnvelopeFileObserver$CachedEnvelopeHint: boolean isRetry()
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.util.HashMap bmBluetoothDescriptor(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattDescriptor,android.bluetooth.BluetoothGatt)
io.sentry.rrweb.RRWebMetaEvent: java.lang.String access$002(io.sentry.rrweb.RRWebMetaEvent,java.lang.String)
io.flutter.plugin.platform.SingleViewWindowManager: void addCrossWindowBlurEnabledListener(java.util.function.Consumer)
io.sentry.android.replay.ReplayCache$Companion: ReplayCache$Companion()
io.sentry.android.core.DeviceInfoUtil: java.lang.Long getUnusedInternalStorage(android.os.StatFs)
io.sentry.NoOpReplayController: io.sentry.ReplayBreadcrumbConverter getBreadcrumbConverter()
io.sentry.protocol.SdkVersion: SdkVersion(java.lang.String,java.lang.String)
io.sentry.SentryTraceHeader: SentryTraceHeader(io.sentry.protocol.SentryId,io.sentry.SpanId,java.lang.Boolean)
io.sentry.android.core.internal.gestures.SentryGestureListener: SentryGestureListener(android.app.Activity,io.sentry.IHub,io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.android.FlutterFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.sentry.cache.tape.EmptyObjectQueue: void close()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.android.FlutterActivity: java.util.List getDartEntrypointArgs()
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.sentry.android.replay.WindowRecorder: void close()
io.sentry.android.core.ActivityBreadcrumbsIntegration: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.metrics.Metric: int getWeight()
io.sentry.SentryAppStartProfilingOptions: void setProfilingEnabled(boolean)
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
io.sentry.android.core.AnrV2Integration$AnrV2Hint: java.lang.String mechanism()
io.sentry.ObjectReader: io.sentry.vendor.gson.stream.JsonToken peek()
io.sentry.android.core.ActivityFramesTracker: ActivityFramesTracker(io.sentry.android.core.LoadClass,io.sentry.android.core.SentryAndroidOptions,io.sentry.android.core.MainLooperHandler)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] values()
io.sentry.PerformanceCollectionData: io.sentry.CpuCollectionData getCpuData()
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
io.sentry.android.core.ManifestMetadataReader: long readLong(android.os.Bundle,io.sentry.ILogger,java.lang.String,long)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.sentry.MeasurementUnit$Custom: java.lang.String name()
io.sentry.MonitorContexts: MonitorContexts(io.sentry.MonitorContexts)
io.sentry.MonitorContexts: MonitorContexts()
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] values()
io.flutter.embedding.android.KeyboardMap$TogglingGoal: KeyboardMap$TogglingGoal(int,long,long)
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.sentry.android.replay.ScreenshotRecorder: void capture()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
androidx.fragment.app.Fragment: java.lang.String getTag()
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
io.sentry.flutter.SentryFlutter$updateOptions$28: SentryFlutter$updateOptions$28(io.sentry.flutter.SentryFlutter,io.sentry.android.core.SentryAndroidOptions,java.util.Map)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
io.flutter.plugin.platform.PlatformPlugin: void destroy()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
io.sentry.flutter.SentryFlutterReplayBreadcrumbConverter: SentryFlutterReplayBreadcrumbConverter()
io.sentry.PropagationContext: io.sentry.Baggage cloneBaggage(io.sentry.Baggage)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
io.sentry.flutter.SentryFlutterPlugin: void closeNativeSdk(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.internal.gestures.NoOpWindowCallback: boolean onSearchRequested(android.view.SearchEvent)
io.sentry.backpressure.NoOpBackpressureMonitor: io.sentry.backpressure.NoOpBackpressureMonitor getInstance()
io.sentry.android.replay.BuildConfig: BuildConfig()
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
io.sentry.UserFeedback$Deserializer: io.sentry.UserFeedback deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.transport.QueuedThreadPoolExecutor: QueuedThreadPoolExecutor(int,int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler,io.sentry.ILogger,io.sentry.SentryDateProvider)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
io.sentry.SentryOptions: boolean isSendClientReports()
io.sentry.SentryAppStartProfilingOptions: java.util.Map getUnknown()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.sentry.TransactionOptions: io.sentry.TransactionFinishedCallback getTransactionFinishedCallback()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
io.sentry.util.UrlUtils$UrlDetails: java.lang.String getFragment()
io.sentry.protocol.SentryStackFrame: java.lang.Integer getColno()
io.sentry.protocol.ViewHierarchyNode$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.Attachment: boolean isAddToTransactions()
io.sentry.android.replay.ReplayIntegration: void finalizePreviousReplay$lambda$5(io.sentry.android.replay.ReplayIntegration)
io.sentry.HubAdapter: io.sentry.protocol.SentryId captureException(java.lang.Throwable,io.sentry.Hint)
io.sentry.protocol.SentryException: io.sentry.protocol.SentryStackTrace getStacktrace()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment createDefault()
io.sentry.MonitorScheduleType: io.sentry.MonitorScheduleType[] $values()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2202(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.sentry.android.core.internal.gestures.SentryWindowCallback$MotionEventObtainer$-CC: android.view.MotionEvent $default$obtain(io.sentry.android.core.internal.gestures.SentryWindowCallback$MotionEventObtainer,android.view.MotionEvent)
io.sentry.NoOpScope: void setTag(java.lang.String,java.lang.String)
io.sentry.ExternalOptions: java.lang.Boolean getEnableDeduplication()
io.sentry.cache.tape.QueueFile: int readInt(byte[],int)
io.sentry.rrweb.RRWebOptionsEvent: java.util.Map getDataUnknown()
io.sentry.SentryEnvelopeItem: byte[] lambda$fromClientReport$23(io.sentry.SentryEnvelopeItem$CachedItem)
io.sentry.protocol.DebugMeta: java.util.List getImages()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
io.sentry.SentryOptions: java.lang.Boolean getEnableTracing()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
io.sentry.Breadcrumb: java.lang.String getType()
io.sentry.util.MapObjectWriter: io.sentry.util.MapObjectWriter value(java.lang.String)
io.flutter.embedding.android.FlutterFragment: java.lang.String getDartEntrypointLibraryUri()
io.sentry.protocol.SentryTransaction: java.lang.Double getTimestamp()
io.sentry.util.HintUtils: void runIfDoesNotHaveType(io.sentry.Hint,java.lang.Class,io.sentry.util.HintUtils$SentryNullableConsumer)
io.sentry.IScopeObserver: void setContexts(io.sentry.protocol.Contexts)
io.sentry.flutter.SentryFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.android.replay.viewhierarchy.ViewHierarchyNode$LCAResult: void setNodeSubtree(io.sentry.android.replay.viewhierarchy.ViewHierarchyNode)
io.sentry.IHub: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.ScopeCallback)
io.sentry.ProfilingTransactionData$Deserializer: ProfilingTransactionData$Deserializer()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: DartMessenger$ConcurrentTaskQueue(java.util.concurrent.ExecutorService)
io.sentry.android.core.EnvelopeFileObserverIntegration$OutboxEnvelopeFileObserverIntegration: java.lang.String getPath(io.sentry.SentryOptions)
io.sentry.DuplicateEventDetectionEventProcessor: java.util.List allCauses(java.lang.Throwable)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomicNullable$default$1$1: void run()
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
io.sentry.android.core.internal.gestures.SentryGestureListener: boolean onSingleTapUp(android.view.MotionEvent)
io.sentry.JsonObjectReader: JsonObjectReader(java.io.Reader)
io.sentry.protocol.SentryStackFrame: io.sentry.SentryLockReason access$1602(io.sentry.protocol.SentryStackFrame,io.sentry.SentryLockReason)
io.sentry.util.CollectionUtils: java.util.Map filterMapEntries(java.util.Map,io.sentry.util.CollectionUtils$Predicate)
io.sentry.ObjectReader: java.lang.String nextString()
io.sentry.android.core.internal.util.RootChecker: RootChecker(android.content.Context,io.sentry.android.core.BuildInfoProvider,io.sentry.ILogger,java.lang.String[],java.lang.String[],java.lang.Runtime)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
io.sentry.ProfilingTraceData: java.lang.String access$1402(io.sentry.ProfilingTraceData,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.metrics.GaugeMetric: double getMax()
io.sentry.android.core.InternalSentrySdk: void deleteCurrentSessionFile(io.sentry.SentryOptions,boolean)
io.sentry.SentryOptions: boolean isEnableUncaughtExceptionHandler()
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$1: void onReceive(android.content.Context,android.content.Intent)
io.sentry.SentryTracer: void setContext(java.lang.String,java.lang.Object)
io.sentry.ProfilingTransactionData: java.lang.String access$202(io.sentry.ProfilingTransactionData,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineGroup)
io.sentry.Hub: void setExtra(java.lang.String,java.lang.String)
io.sentry.protocol.DebugImage: java.lang.String getType()
io.sentry.NoOpTransaction: void finish(io.sentry.SpanStatus)
io.sentry.ISpan: void setData(java.lang.String,java.lang.Object)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
io.sentry.ExternalOptions: java.util.Set getIgnoredExceptionsForType()
io.sentry.Hub: void popScope()
io.sentry.ExternalOptions: void addBundleId(java.lang.String)
io.sentry.android.core.AndroidOptionsInitializer: java.lang.Boolean lambda$installDefaultIntegrations$0(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutterPlugin: void loadContexts(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.Breadcrumb: java.lang.String getOrigin()
io.sentry.SentryOptions: void setPrintUncaughtStackTrace(boolean)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.sentry.cache.tape.QueueFile: void add(byte[],int,int)
io.sentry.SentryOptions: void setEnableUserInteractionTracing(boolean)
io.sentry.cache.CacheUtils: void store(io.sentry.SentryOptions,java.lang.Object,java.lang.String,java.lang.String)
io.sentry.android.core.internal.util.ContentProviderSecurityChecker: ContentProviderSecurityChecker(io.sentry.android.core.BuildInfoProvider)
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onAttachedToBroadcastReceiver(io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$1: FlutterBluePlusPlugin$1(com.lib.flutter_blue_plus.FlutterBluePlusPlugin)
io.sentry.SentryBaseEvent: SentryBaseEvent(io.sentry.protocol.SentryId)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
io.sentry.protocol.SentryException: void setValue(java.lang.String)
io.sentry.IHub: io.sentry.ITransaction startTransaction(java.lang.String,java.lang.String,io.sentry.TransactionOptions)
io.sentry.Hub: io.sentry.SentryTraceHeader getTraceparent()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromProfilingTrace$18(java.io.File,long,io.sentry.ProfilingTraceData,io.sentry.ISerializer)
io.sentry.protocol.SentrySpan: java.util.Map getData()
io.sentry.SentryLockReason: int access$002(io.sentry.SentryLockReason,int)
io.sentry.android.replay.WindowSpy$decorViewClass$2: java.lang.Object invoke()
io.sentry.android.core.DeviceInfoUtil: java.util.TimeZone getTimeZone()
io.sentry.HubAdapter: void flush(long)
io.sentry.protocol.ViewHierarchyNode: void setHeight(java.lang.Double)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
io.sentry.transport.HttpConnection: void updateRetryAfterLimits(java.net.HttpURLConnection,int)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
io.sentry.rrweb.RRWebInteractionMoveEvent$Position: float access$102(io.sentry.rrweb.RRWebInteractionMoveEvent$Position,float)
io.sentry.protocol.ViewHierarchyNode$Deserializer: ViewHierarchyNode$Deserializer()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
io.sentry.android.core.SentryAndroidOptions: void setEnableNdk(boolean)
io.sentry.SentryTracer$FinishStatus: SentryTracer$FinishStatus(boolean,io.sentry.SpanStatus)
io.sentry.transport.AsyncHttpTransport: io.sentry.transport.ITransportGate access$300(io.sentry.transport.AsyncHttpTransport)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.CheckIn$Deserializer: io.sentry.CheckIn deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.metrics.MetricsApi: void gauge(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
io.sentry.ScopeObserverAdapter: ScopeObserverAdapter()
io.sentry.android.replay.video.MuxerConfig: java.io.File getFile()
io.sentry.Baggage: java.lang.String toHeaderString(java.lang.String)
io.sentry.ProfilingTraceData: java.lang.String access$202(io.sentry.ProfilingTraceData,java.lang.String)
io.sentry.android.replay.util.ViewsKt: int getTotalPaddingTopSafe(android.widget.TextView)
io.sentry.protocol.User: io.sentry.protocol.Geo getGeo()
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
io.sentry.protocol.SentryStackFrame: void setFunction(java.lang.String)
io.sentry.android.core.ActivityLifecycleIntegration: void setSpanOrigin(io.sentry.ISpan)
io.sentry.SentryEnvelopeHeader$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.flutter.plugin.platform.PlatformViewsController: void lambda$configureForTextureLayerComposition$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,android.view.View,boolean)
io.sentry.util.ExceptionUtils: java.lang.Throwable findRootCause(java.lang.Throwable)
io.sentry.android.replay.WindowRecorder: void start$lambda$1(io.sentry.android.replay.WindowRecorder)
io.sentry.cache.EnvelopeCache: void tryEndPreviousSession(io.sentry.Hint)
io.flutter.embedding.android.FlutterView: void redispatch(android.view.KeyEvent)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: boolean handlesCropAndRotation()
io.sentry.android.replay.ScreenshotRecorder: void capture$lambda$2$lambda$1(io.sentry.android.replay.ScreenshotRecorder,android.view.View,int)
io.sentry.android.replay.GeneratedVideo: boolean equals(java.lang.Object)
io.sentry.CircularFifoQueue: boolean isAtFullCapacity()
io.sentry.SentryClient: io.sentry.SentryEnvelope buildEnvelope(io.sentry.SentryBaseEvent,java.util.List,io.sentry.Session,io.sentry.TraceContext,io.sentry.ProfilingTraceData)
io.sentry.android.replay.capture.BufferCaptureStrategy: void access$deleteFile(io.sentry.android.replay.capture.BufferCaptureStrategy,java.io.File)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $values()
io.sentry.Stack: Stack(io.sentry.Stack)
io.sentry.android.core.ActivityBreadcrumbsIntegration: void register(io.sentry.IHub,io.sentry.SentryOptions)
io.sentry.DirectoryProcessor$SendCachedEnvelopeHint: boolean isRetry()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
io.sentry.android.core.SendCachedEnvelopeIntegration: void close()
io.sentry.SentryLockReason: java.lang.String access$202(io.sentry.SentryLockReason,java.lang.String)
io.sentry.android.replay.ReplayIntegration$ReplayExecutorServiceThreadFactory: ReplayIntegration$ReplayExecutorServiceThreadFactory()
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
io.sentry.android.replay.capture.SessionCaptureStrategy: void stop$lambda$1(io.sentry.IScope)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: int getMaxPayload(java.lang.String,int,boolean)
io.sentry.HubAdapter: void bindClient(io.sentry.ISentryClient)
io.flutter.plugin.platform.PlatformViewsController: void lambda$initializePlatformViewIfNeeded$2(int,android.view.View,boolean)
io.sentry.ProfilingTransactionData: java.lang.String getTraceId()
io.sentry.flutter.SentryFlutter$Companion: SentryFlutter$Companion()
io.sentry.android.replay.ScreenshotRecorderConfig: boolean equals(java.lang.Object)
io.sentry.rrweb.RRWebInteractionEvent$Deserializer: java.lang.Object deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.transport.QueuedThreadPoolExecutor$CancelledFuture: boolean isCancelled()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int)
io.sentry.internal.debugmeta.ResourcesDebugMetaLoader: ResourcesDebugMetaLoader(io.sentry.ILogger,java.lang.ClassLoader)
io.sentry.protocol.ViewHierarchy: ViewHierarchy(java.lang.String,java.util.List)
io.sentry.android.replay.ScreenshotRecorderConfig: int getRecordingWidth()
io.sentry.internal.modules.ModulesLoader: ModulesLoader(io.sentry.ILogger)
io.sentry.android.core.ActivityLifecycleIntegration: void lambda$onActivityResumed$9(io.sentry.ISpan,io.sentry.ISpan)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
io.sentry.Hub: void endSession()
io.sentry.Breadcrumb: io.sentry.Breadcrumb userInteraction(java.lang.String,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
io.sentry.android.replay.capture.CaptureStrategy: void onScreenChanged(java.lang.String)
io.sentry.hints.AbnormalExit: java.lang.Long timestamp()
io.sentry.SentryNanotimeDate: long nanotimeDiff(io.sentry.SentryNanotimeDate,io.sentry.SentryNanotimeDate)
io.sentry.android.replay.gestures.ReplayGestureConverter$Companion: ReplayGestureConverter$Companion()
io.sentry.transport.ITransport$-CC: boolean $default$isHealthy(io.sentry.transport.ITransport)
io.sentry.SentryEnvelopeItem: byte[] lambda$fromClientReport$21(io.sentry.ISerializer,io.sentry.clientreport.ClientReport)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $values()
io.sentry.MemoryCollectionData: long getUsedHeapMemory()
io.flutter.embedding.android.KeyboardManager$ViewDelegate: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.sentry.android.core.BuildInfoProvider: java.lang.String getBuildTags()
io.sentry.util.Platform: Platform()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryOptions: int getMaxQueueSize()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
io.flutter.embedding.engine.plugins.PluginRegistry: void add(java.util.Set)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: android.bluetooth.BluetoothGattDescriptor getDescriptorFromArray(java.lang.String,java.util.List)
io.flutter.embedding.android.FlutterActivity: void startBackGesture(android.window.BackEvent)
io.flutter.plugin.common.BinaryCodec: BinaryCodec()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: boolean isLocationEnabled()
io.sentry.NoOpTransaction: io.sentry.SentryDate getStartDate()
io.sentry.android.core.AppLifecycleIntegration: void addObserver(io.sentry.IHub)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.sentry.android.replay.WindowRecorder: void pause()
io.sentry.JsonSerializable: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
io.sentry.util.UrlUtils$UrlDetails: void applyToSpan(io.sentry.ISpan)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.sentry.android.replay.gestures.ReplayGestureConverter: ReplayGestureConverter(io.sentry.transport.ICurrentDateProvider)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: android.os.Bundle createArgs()
io.sentry.clientreport.AtomicClientReportStorage: java.util.Map lambda$new$0()
io.sentry.SentryExceptionFactory: io.sentry.protocol.SentryException getSentryException(java.lang.Throwable,io.sentry.protocol.Mechanism,java.lang.Long,java.util.List,boolean)
io.sentry.NoOpTransaction: io.sentry.protocol.SentryId getEventId()
io.sentry.cache.tape.QueueFile$Builder: io.sentry.cache.tape.QueueFile build()
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashFlushTimeoutMillis()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
io.sentry.JsonObjectDeserializer$TokenPrimitive: java.lang.Object getValue()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
io.sentry.SentryLongDate: SentryLongDate(long)
io.sentry.SentryClient: io.sentry.protocol.SentryId captureMetrics(io.sentry.metrics.EncodedMetrics)
io.sentry.SentryExecutorService: java.util.concurrent.Future schedule(java.lang.Runnable,long)
io.flutter.plugin.platform.VirtualDisplayController$2: VirtualDisplayController$2(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
io.sentry.SentryOptions: java.lang.String getRelease()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.sentry.vendor.gson.stream.JsonReader: boolean isLenient()
io.sentry.android.replay.viewhierarchy.ComposeViewHierarchyNode: boolean fromView(android.view.View,io.sentry.android.replay.viewhierarchy.ViewHierarchyNode,io.sentry.SentryOptions)
io.sentry.MetricsAggregator: MetricsAggregator(io.sentry.metrics.IMetricsClient,io.sentry.ILogger,io.sentry.SentryDateProvider,int,io.sentry.SentryOptions$BeforeEmitMetricCallback,io.sentry.ISentryExecutorService)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin: java.lang.String hciStatusString(int)
io.sentry.NoOpHub: io.sentry.metrics.MetricsApi metrics()
io.sentry.android.core.MainLooperHandler: MainLooperHandler(android.os.Looper)
io.sentry.TracesSamplingDecision: TracesSamplingDecision(java.lang.Boolean,java.lang.Double)
io.flutter.embedding.android.FlutterView: boolean lambda$sendUserSettingsToFlutter$0(android.view.textservice.SpellCheckerInfo)
io.sentry.protocol.SentryStackFrame: java.lang.String access$502(io.sentry.protocol.SentryStackFrame,java.lang.String)
io.sentry.SentryReplayOptions: void setOnErrorSampleRate(java.lang.Double)
io.sentry.NoOpSpan: void setData(java.lang.String,java.lang.Object)
io.sentry.TransactionContext: TransactionContext(java.lang.String,java.lang.String)
io.sentry.MainEventProcessor: void setSdk(io.sentry.SentryBaseEvent)
io.sentry.PreviousSessionFinalizer: void run()
io.sentry.android.core.ContextUtils: android.content.Intent registerReceiver(android.content.Context,io.sentry.android.core.BuildInfoProvider,android.content.BroadcastReceiver,android.content.IntentFilter)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
io.sentry.android.replay.ReplayLifecycle: ReplayLifecycle()
io.sentry.IHub: void setLevel(io.sentry.SentryLevel)
io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForgetFactory: io.sentry.SendCachedEnvelopeFireAndForgetIntegration$SendFireAndForget processDir(io.sentry.DirectoryProcessor,java.lang.String,io.sentry.ILogger)
io.sentry.android.core.ActivityLifecycleIntegration: java.lang.String getTtidDesc(java.lang.String)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleTracingAutoFinish()
io.sentry.android.replay.capture.CaptureStrategy: void setReplayType(io.sentry.SentryReplayEvent$ReplayType)
io.sentry.protocol.Browser: void setName(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
io.sentry.DataCategory: io.sentry.DataCategory[] values()
io.sentry.NoOpTransaction: java.lang.String getOperation()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
io.sentry.SentryTracer: java.util.List getSpans()
io.sentry.ExternalOptions: void setCron(io.sentry.SentryOptions$Cron)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.sentry.util.UrlUtils: io.sentry.util.UrlUtils$UrlDetails parse(java.lang.String)
io.sentry.SentryItemType: io.sentry.SentryItemType[] $values()
io.sentry.android.replay.video.SimpleMp4FrameMuxer: void muxVideoFrame(java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder withCachedEngine(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
io.sentry.android.core.ActivityLifecycleIntegration: void onActivityPostResumed(android.app.Activity)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
io.flutter.plugin.platform.SingleViewWindowManager: android.view.WindowMetrics getMaximumWindowMetrics()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface getBroadcastReceiverControlSurface()
io.sentry.TracesSampler: io.sentry.TracesSamplingDecision sample(io.sentry.SamplingContext)
io.sentry.protocol.App: java.lang.String access$202(io.sentry.protocol.App,java.lang.String)
io.sentry.protocol.SentryThread: void setUnknown(java.util.Map)
io.sentry.android.replay.WindowManagerSpy: void swapWindowManagerGlobalMViews(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.sentry.SentryEvent: void setTimestamp(java.util.Date)
io.sentry.android.replay.capture.BaseCaptureStrategy$special$$inlined$persistableAtomic$default$1$1: void run()
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
io.sentry.cache.EnvelopeCache: boolean lambda$allEnvelopeFiles$0(java.io.File,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
io.sentry.SentryClient: void captureUserFeedback(io.sentry.UserFeedback)
io.sentry.hints.EventDropReason: io.sentry.hints.EventDropReason valueOf(java.lang.String)
io.sentry.Scope: java.util.List getFingerprint()
io.sentry.protocol.OperatingSystem$Deserializer: io.sentry.protocol.OperatingSystem deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.Hub: java.util.Map getDefaultTagsForMetrics()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.sentry.util.UrlUtils: io.sentry.util.UrlUtils$UrlDetails splitAbsoluteUrl(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: WindowInfoRepositoryCallbackAdapterWrapper(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter)
io.sentry.clientreport.DiscardedEvent: java.lang.String getCategory()
io.sentry.SpotlightIntegration: void lambda$execute$0(io.sentry.SentryEnvelope)
io.sentry.ISentryClient$-CC: io.sentry.protocol.SentryId $default$captureEvent(io.sentry.ISentryClient,io.sentry.SentryEvent,io.sentry.IScope)
io.sentry.MonitorSchedule: void setType(java.lang.String)
io.sentry.android.core.NoOpDebugImagesLoader: NoOpDebugImagesLoader()
io.sentry.hints.SessionStartHint: SessionStartHint()
io.sentry.IConnectionStatusProvider$ConnectionStatus: IConnectionStatusProvider$ConnectionStatus(java.lang.String,int)
io.sentry.protocol.SentryException: io.sentry.protocol.Mechanism access$502(io.sentry.protocol.SentryException,io.sentry.protocol.Mechanism)
io.sentry.UncaughtExceptionHandlerIntegration: void close()
io.sentry.protocol.Gpu: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.core.performance.AppStartMetrics: boolean shouldSendStartMeasurements()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$7000(io.flutter.view.AccessibilityBridge,int)
io.sentry.util.UrlUtils: java.lang.String extractFragment(java.lang.String,int)
io.sentry.SentryAppStartProfilingOptions: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
io.sentry.android.replay.ReplayCache$Companion: ReplayCache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
io.sentry.NoOpScope: io.sentry.Session withSession(io.sentry.Scope$IWithSession)
io.sentry.cache.tape.QueueFile: QueueFile(java.io.File,java.io.RandomAccessFile,boolean,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState)
io.sentry.Scope: void clearBreadcrumbs()
io.sentry.SentryBaseEvent: java.util.Map access$400(io.sentry.SentryBaseEvent)
com.lib.flutter_blue_plus.FlutterBluePlusPlugin$5: boolean handleUnexpectedConnectionEvents(android.bluetooth.BluetoothGatt,int,java.lang.String)
io.sentry.android.replay.ReplayIntegration$captureReplay$1: ReplayIntegration$captureReplay$1(io.sentry.android.replay.ReplayIntegration)
io.sentry.cache.tape.EmptyObjectQueue: EmptyObjectQueue()
io.sentry.rrweb.RRWebInteractionMoveEvent$Deserializer: void deserializeData(io.sentry.rrweb.RRWebInteractionMoveEvent,io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.ObjectWriter: io.sentry.ObjectWriter value(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.sentry.android.core.internal.util.ContentProviderSecurityChecker: void checkPrivilegeEscalation(android.content.ContentProvider)
io.sentry.Baggage: java.lang.Boolean sampled(io.sentry.TracesSamplingDecision)
io.sentry.IHub: void withScope(io.sentry.ScopeCallback)
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
io.sentry.transport.AsyncHttpTransport$EnvelopeSender: void lambda$flush$2(io.sentry.SentryEnvelope,java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin$Companion: SentryFlutterPlugin$Companion()
io.sentry.MonitorConfig: java.lang.String getTimezone()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
io.sentry.Hub: java.lang.Boolean isCrashedLastRun()
io.sentry.ProfilingTransactionData: java.lang.Long access$302(io.sentry.ProfilingTransactionData,java.lang.Long)
io.sentry.Span: boolean updateEndDate(io.sentry.SentryDate)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
io.sentry.util.MapObjectWriter: io.sentry.ObjectWriter value(double)
io.sentry.util.CollectionUtils: int size(java.lang.Iterable)
io.flutter.view.AccessibilityBridge: boolean isImportant(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.android.core.AnrV2EventProcessor: void setRelease(io.sentry.SentryBaseEvent)
io.sentry.Hub: void validateOptions(io.sentry.SentryOptions)
io.sentry.rrweb.RRWebOptionsEvent: void setTag(java.lang.String)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $values()
io.sentry.android.core.ActivityFramesTracker$FrameCounts: ActivityFramesTracker$FrameCounts(int,int,int,io.sentry.android.core.ActivityFramesTracker$1)
io.sentry.SynchronizedQueue: java.lang.Object[] toArray(java.lang.Object[])
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.sentry.UncaughtExceptionHandler$Adapter: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()
io.sentry.ReplayRecording$Deserializer: io.sentry.ReplayRecording deserialize(io.sentry.ObjectReader,io.sentry.ILogger)
io.sentry.cache.tape.QueueFile: long usedBytes()
io.sentry.util.HintUtils: void runIfHasType(io.sentry.Hint,java.lang.Class,io.sentry.util.HintUtils$SentryConsumer)
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void removeListener()
io.sentry.protocol.ViewHierarchyNode: java.lang.String access$002(io.sentry.protocol.ViewHierarchyNode,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void enableBufferingIncomingMessages()
io.sentry.android.replay.ReplayFrame: java.lang.String component3()
io.flutter.view.VsyncWaiter$FrameCallback: VsyncWaiter$FrameCallback(io.flutter.view.VsyncWaiter,long)
io.sentry.SentryOptions: void setMainThreadChecker(io.sentry.util.thread.IMainThreadChecker)
io.sentry.SentryNanotimeDateProvider: io.sentry.SentryDate now()
io.sentry.CpuCollectionData: long getTimestampMillis()
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.flutter.view.TextureRegistry$TextureEntry: void release()
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(long,android.graphics.SurfaceTexture)
io.sentry.android.replay.util.PersistableLinkedList: boolean remove(java.lang.Object)
io.sentry.transport.HttpConnection: java.net.Proxy getProxy()
io.sentry.protocol.SentryTransaction$JsonKeys: SentryTransaction$JsonKeys()
io.sentry.android.replay.LastSegmentData: io.sentry.SentryReplayEvent$ReplayType getReplayType()
io.sentry.android.core.SentryAndroidOptions: void setReportHistoricalAnrs(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.sentry.android.core.DefaultAndroidEventProcessor: void processNonCachedEvent(io.sentry.SentryBaseEvent,io.sentry.Hint)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
io.sentry.android.replay.capture.CaptureStrategy$Companion$buildReplay$lambda$7$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
io.sentry.util.Objects: int hash(java.lang.Object[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.sentry.ITransaction: void scheduleFinish()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.sentry.SentryLevel: io.sentry.SentryLevel[] values()
io.flutter.embedding.android.FlutterActivity: void registerOnBackInvokedCallback()
io.sentry.android.core.internal.util.CpuInfoUtils: void setCpuMaxFrequencies(java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
io.sentry.Scope$IWithSession: void accept(io.sentry.Session)
io.sentry.android.core.AnrV2EventProcessor: void setUser(io.sentry.SentryBaseEvent)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.sentry.android.core.cache.AndroidEnvelopeCache: void writeStartupCrashMarkerFile()
io.sentry.HostnameCache: HostnameCache()
io.sentry.protocol.ViewHierarchyNode: java.lang.String access$802(io.sentry.protocol.ViewHierarchyNode,java.lang.String)
io.sentry.SentryOptions: void setSessionTrackingIntervalMillis(long)
io.sentry.JsonSerializer: java.lang.Object deserialize(java.io.Reader,java.lang.Class)
io.sentry.ShutdownHookIntegration: ShutdownHookIntegration(java.lang.Runtime)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.embedding.engine.FlutterEngineCache: void clear()
io.sentry.protocol.App: void setViewNames(java.util.List)
io.sentry.SynchronizedCollection: boolean containsAll(java.util.Collection)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.sentry.HubAdapter: void setSpanContext(java.lang.Throwable,io.sentry.ISpan,java.lang.String)
io.sentry.metrics.GaugeMetric: double getSum()
io.sentry.SentryOptions: boolean isProfilingEnabled()
io.sentry.SpanContext: io.sentry.SpanId getSpanId()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4602(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.sentry.SentryOptions: void setEnableAutoSessionTracking(boolean)
io.sentry.NoOpTransaction: io.sentry.SentryTraceHeader toSentryTrace()
io.sentry.rrweb.RRWebVideoEvent: void serialize(io.sentry.ObjectWriter,io.sentry.ILogger)
io.sentry.android.replay.capture.SessionCaptureStrategy: io.sentry.android.replay.capture.CaptureStrategy convert()
io.sentry.android.core.AndroidTransportGate: AndroidTransportGate(io.sentry.SentryOptions)
io.sentry.MetricsAggregator: void flush(boolean)
io.sentry.SentryLockReason: boolean equals(java.lang.Object)
io.sentry.metrics.DistributionMetric: DistributionMetric(java.lang.String,double,io.sentry.MeasurementUnit,java.util.Map)
io.flutter.embedding.android.FlutterPlayStoreSplitApplication: void onCreate()
io.sentry.android.core.performance.ActivityLifecycleTimeSpan: ActivityLifecycleTimeSpan()
io.sentry.Hint: void addAttachments(java.util.List)
io.sentry.DsnUtil: DsnUtil()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.sentry.SentryClient: io.sentry.protocol.SentryId captureEvent(io.sentry.SentryEvent,io.sentry.IScope,io.sentry.Hint)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
io.sentry.internal.gestures.UiElement: boolean equals(java.lang.Object)
io.sentry.cache.tape.EmptyObjectQueue: io.sentry.cache.tape.QueueFile file()
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
io.sentry.NoOpScope: void setContexts(java.lang.String,java.lang.String)
io.sentry.protocol.SentryThread: void setCurrent(java.lang.Boolean)
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiNoLongerDisplayed()
io.sentry.android.core.internal.threaddump.ThreadDumpParser: java.lang.Integer getUInteger(java.util.regex.Matcher,int,java.lang.Integer)
io.sentry.cache.CacheStrategy: CacheStrategy(io.sentry.SentryOptions,java.lang.String,int)
io.sentry.android.replay.ScreenshotRecorderConfig: int component2()
io.sentry.android.core.DeviceInfoUtil: java.lang.Float getBatteryLevel(android.content.Intent,io.sentry.SentryOptions)
io.sentry.JsonObjectWriter: io.sentry.ObjectWriter jsonValue(java.lang.String)
io.sentry.android.replay.ReplayIntegration: io.sentry.protocol.SentryId getReplayId()
io.sentry.cache.tape.QueueFile: java.io.File file()
io.sentry.SentryClient: io.sentry.SentryEnvelope buildEnvelope(io.sentry.CheckIn,io.sentry.TraceContext)
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
io.sentry.SentryTracer: java.util.TimerTask getIdleTimeoutTask()
io.sentry.Session: java.lang.Object clone()
io.sentry.flutter.SentryFlutterReplayRecorder: void pause$lambda$2(io.sentry.flutter.SentryFlutterReplayRecorder)
io.sentry.vendor.gson.stream.JsonWriter: int peek()
