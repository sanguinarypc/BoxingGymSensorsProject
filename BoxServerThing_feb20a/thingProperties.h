// Code generated by Arduino IoT Cloud, DO NOT EDIT.
#ifndef THINGPROPERTIES_H
#define THINGPROPERTIES_H

#include "arduino_secrets.h"      // <- SECRET_SSID & SECRET_OPTIONAL_PASS come from here
#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

// Define SSID and PASS once
const char SSID[] = SECRET_SSID;
const char PASS[] = SECRET_OPTIONAL_PASS;

// Your Cloud variables
CloudString deviceThatGotHit;
CloudString boxerThatScoresThePoint;
CloudInt    punchScore;
CloudString timeStampOfThePunch;
CloudInt    sensorValue;

CloudInt    blueBoxer_punchCount;
CloudString blueBoxer_timestamp;
CloudInt    blueBoxer_sensorValue;

CloudInt    redBoxer_punchCount;
CloudString redBoxer_timestamp;
CloudInt    redBoxer_sensorValue;

// Wire up your properties
void initProperties() {
  ArduinoCloud.addProperty(boxerThatScoresThePoint, READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(deviceThatGotHit,        READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(punchScore,             READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(timeStampOfThePunch,    READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(sensorValue,            READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(blueBoxer_punchCount,   READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(blueBoxer_timestamp,    READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(blueBoxer_sensorValue,  READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(redBoxer_punchCount,    READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(redBoxer_timestamp,     READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(redBoxer_sensorValue,   READWRITE, ON_CHANGE, NULL);
}

// Single connection handler, using your SECRET_SSID / SECRET_OPTIONAL_PASS
WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);

#endif // THINGPROPERTIES_H

